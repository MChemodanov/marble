This changelog has effectively been discontinued.

Until its usage is being continued again just use

http://lists.kde.org/?l=kde-commits&w=2&r=1&s=marble&q=b

or 

svn log

instead to follow code changes.

Thanks!


2008-09-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/plugins/marble/CMakeLists.txt
    * src/plugins/marble/geodata/CMakeLists.txt
    * src/plugins/marble/geodata/Marble writing.kml
    * src/plugins/marble/geodata/MarbleGeoDataPlugin.{h|cpp}
    * src/plugins/marble/geodata/MarbleGeoDataView.{h|cpp}

    make the GeoDataPlugin be built for everybody
    Add the GeoDataView which is attached to the MarbleGeometryModel
    provided by the dataFacade.

2008-09-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/CMakeLists.txt
    * src/lib/MarbleDataFacade.{h|cpp}
    * src/lib/MarbleGeometryModel.{h|cpp}
    * src/lib/MarbleModel.{h|cpp}
    * src/lib/PlaceMarkManager.{h|cpp}

    add the MarbleGeometryModel which provides a model interface for
    the geodata in the MarblePlacemarkModel.

2008-09-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/parser/GeoParser.h

    make parentItem.nodeAs<T>() usable to check if the parentItem
    returns a T* pointer. this way you can both check if the parent
    element is valid and you can access it.

2008-09-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlInnerBoundaryIsTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlMultiGeometryTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlOuterBoundaryIsTagHandler.cpp

    fix some minor issues depending on the static_cast->dynamic_cast change
    in the parser(see next commit)
    Add MultiGeometry Tag (which was rotting here already)

2008-09-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataGeometry.h
    * src/lib/geodata/data/GeoDataMultiGeometry.{h|cpp}
    * src/lib/geodata/data/GeoDataMultiObject.h

    add a new Type for GeoDataObject*
    forbid copying of GeoDataMultiGeometry

2008-09-05  Pino Toscano    <pino@kde.org>

    * src/lib/HttpJob.{cpp,h}:

    Move the private data into a d-pointer.

2008-08-31  Pino Toscano    <pino@kde.org>

    * src/lib/MarbleNetworkPlugin.{cpp,h}:
    * src/lib/MarbleNetworkPluginInterface.h:
    * src/lib/HttpJob.{cpp,h}:
    * src/lib/QHttpNetworkPlugin.{cpp,h}:
    * src/lib/HttpDownloadManager.{cpp,h}:
    * src/lib/CMakeLists.txt:

    - add a structure for network plugins, interface and abstract class.
    - decouple the QHttp stuff into an own QHttpNetworkPlugin, compiled
      statically, and leave HttpJob and abstract class.
    - start adapting the HttpDownloadManager to use a network plugin for
      creating the HTTP jobs; at the moment no plugin is used, but the static
      QHttp-based one is.

2008-08-30  Pino Toscano    <pino@kde.org>

    * src/lib/HttpFetchFile.{cpp,h}:
    * src/lib/HttpJob.{cpp,h}:

    Rename HttpFetchFile.{cpp,h} into HttpJob.{cpp,h}.

2008-08-30  Pino Toscano    <pino@kde.org>

    * src/lib/HttpFetchFile.{cpp,h}:
    * src/lib/HttpDownloadManager.{cpp,h}:

    Merge HttpJob and HttpFetchFile into the former.

2008-08-24  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataContainer.{h|cpp}
    * src/lib/geodata/data/GeoDataDocument.{h|cpp}
    * src/lib/MarbleGeoDataModel.{h|cpp}

    make GeoDataDocuments be unloadable
    This means that tiles can be unloaded each by each

2008-08-20  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/lib/MarbleGeoDataModel.h
    * src/lib/MarbleGeoDataModel.cpp
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler.cpp
    * src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.cpp
    * src/lib/geodata/data/GeoDataMultiGeometry.h
    * src/lib/geodata/data/GeoDataLineString.cpp
    * src/lib/geodata/data/GeoDataFolder.h
    * src/lib/geodata/data/GeoDataContainer.cpp
    * src/lib/geodata/data/GeoDataDocument.h
    * src/lib/geodata/data/GeoDataPolygon.cpp
    * src/lib/geodata/data/GeoDataGeometry.cpp
    * src/lib/geodata/data/GeoDataPoint.h
    * src/lib/geodata/data/GeoDataLinearRing.h
    * src/lib/geodata/data/GeoDataPlacemark.cpp
    * src/lib/geodata/data/GeoDataFeature.h
    * src/lib/geodata/data/GeoDataMultiGeometry.cpp
    * src/lib/geodata/data/GeoDataObject.h
    * src/lib/geodata/data/GeoDataFolder.cpp
    * src/lib/geodata/data/GeoDataDocument.cpp
    * src/lib/geodata/data/GeoDataLineString.h
    * src/lib/geodata/data/GeoDataContainer.h
    * src/lib/geodata/data/GeoDataPoint.cpp
    * src/lib/geodata/data/GeoDataLinearRing.cpp
    * src/lib/geodata/data/GeoDataFeature.cpp
    * src/lib/geodata/data/GeoDataPolygon.h
    * src/lib/geodata/data/GeoDataGeometry.h
    * src/lib/geodata/data/GeoDataPlacemark.h
    * src/lib/geodata/data/GeoDataObject.cpp
    * src/plugins/marble/dataview
    * src/plugins/marble/dataview/MarbleGeoDataDebugModel.cpp
    * src/plugins/marble/dataview/MarbleGeoDataDebugModel.h
    * src/plugins/marble/dataview/MarbleDataViewPlugin.cpp
    * src/plugins/marble/dataview/MarbleDataViewPlugin.h
    * src/plugins/marble/dataview/CMakeLists.txt
    * src/plugins/marble/CMakeLists.txt

Added a basic Model that allows introspection into the GeoData loaded from KML

2008-08-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/kml/KmlPairTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlSchemaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOpenTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlSimpleFieldTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlTessellateTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAreaTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlWidthTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlNameTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlExtrudeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleUrlTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAltitudeModeTagHandler.h:
    * src/lib/geodata/handlers/kml/Kml_scaleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDescriptionTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlFillTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPairTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlSimpleFieldTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlKeyTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlStyleMapTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHotSpotTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOuterBoundaryIsTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountrycodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPopTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountryNameCodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlSchemaTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlRoleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlInnerBoundaryIsTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlDescriptionTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlNameTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlExtrudeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.cpp:
    * src/lib/geodata/handlers/kml/Kml_scaleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCountryNameCodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlRoleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleMapTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHotSpotTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlInnerBoundaryIsTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOutlineTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlVisibilityTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHeadingTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOpenTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlAreaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlTessellateTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOutlineTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAltitudeModeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlWidthTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlFillTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlVisibilityTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlKeyTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleUrlTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOuterBoundaryIsTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCountrycodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPopTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHeadingTagHandler.cpp:
    * src/lib/geodata/handlers/gpx/GPXgpxTagHandler.cpp:
    * src/lib/geodata/handlers/gpx/GPXgpxTagHandler.h:

    Remove unneccessary constructors and destructors. The generated
    ones are equivalent.

2008-08-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlVectorTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlItemTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlInstallMapTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceFileTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlMinimumTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlLayerTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlMaximumTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPenTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlDescriptionTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlNameTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlPaletteTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDiscreteTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlThemeTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceDirTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSectionTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlVectorTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlInstallMapTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlLayerTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTextTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPenTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlFilterTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceDirTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlVisibleTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlPaletteTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlHeadingTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDiscreteTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlThemeTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSectionTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlFilterTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlTargetTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlBrushTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlTextTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlVisibleTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlItemTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlHeadingTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceFileTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlNameTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlMinimumTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlMaximumTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlBrushTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDescriptionTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTargetTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.h:

    Remove unneccessary constructors and destructors. The generated
    ones are equivalent.

2008-08-19  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 5: Single char QString operations
	* src/lib/gps/GmlSax.cpp
	* src/lib/MarbleLegendBrowser.cpp
	* src/lib/DiscCache.cpp
	* src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
	* src/lib/geodata/data/GeoDataCoordinates.cpp
	* src/plugins/marble/twitter/twitterPlugin.cpp
	* src/plasmoid/worldclock.cpp
	* docs/layermanagement.txt
	* tools/svg2pnt/svgxmlhandler.cpp
	* tools/asc2kml/asc2kml.cpp


2008-08-18  Inge Wallin  <inge@lysator.liu.se>

	Convert all doubles to qreals.
	* src/QtMainWindow.cpp
	* src/lib/MeasureTool.cpp
	* src/lib/MarbleWidget.cpp
	* src/lib/AbstractScanlineTextureMapper.cpp
	* src/lib/gps/GmlSax.h
	* src/lib/gps/RouteContainer.h
	* src/lib/gps/Waypoint.cpp
	* src/lib/gps/GpsTracking.cpp
	* src/lib/gps/TrackPoint.cpp
	* src/lib/gps/Waypoint.h
	* src/lib/gps/GpxSax.h
	* src/lib/gps/TrackPoint.h
	* src/lib/gps/GpsLayer.cpp
	* src/lib/gps/GpsLayer.h
	* src/lib/gps/GmlSax.cpp
	* src/lib/SphericalScanlineTextureMapper.cpp
	* src/lib/Projections/AbstractProjection.cpp
	* src/lib/Projections/AbstractProjection.h
	* src/lib/Projections/SphericalProjection.cpp
	* src/lib/Projections/MercatorProjectionHelper.cpp
	* src/lib/Projections/MercatorProjection.cpp
	* src/lib/Projections/SphericalProjection.h
	* src/lib/Projections/EquirectProjectionHelper.cpp
	* src/lib/Projections/EquirectProjection.cpp
	* src/lib/Projections/MercatorProjection.h
	* src/lib/Projections/EquirectProjection.h
	* src/lib/MarbleWidgetPopupMenu.h
	* src/lib/Quaternion.cpp
	* src/lib/MarbleWidgetInputHandler.h
	* src/lib/MathHelper.cpp
	* src/lib/MapScaleFloatItem.cpp
	* src/lib/MarbleWidget.h
	* src/lib/AbstractScanlineTextureMapper.h
	* src/lib/MarbleWidgetPopupMenu.cpp
	* src/lib/SunLocator.cpp
	* src/lib/PlaceMarkManager.cpp
	* src/lib/MapScaleFloatItem.h
	* src/lib/VectorMap.cpp
	* src/lib/MarbleMap.cpp
	* src/lib/MergedLayerDecorator.cpp
	* src/lib/TextureTile.cpp
	* src/lib/MarbleControlBox.h
	* src/lib/GeoPolygon.cpp
	* src/lib/EquirectScanlineTextureMapper.cpp
	* src/lib/TileLoaderHelper.cpp
	* src/lib/PlaceMarkPainter.h
	* src/lib/TextureColorizer.cpp
	* src/lib/GeoPainter.cpp
	* src/lib/runners/LatLonRunner.cpp
	* src/lib/ViewParams.cpp
	* src/lib/SphericalScanlineTextureMapper.h
	* src/lib/TextureTile.h
	* src/lib/MarbleWidgetInputHandler.cpp
	* src/lib/GeoPolygon.h
	* src/lib/Quaternion.h
	* src/lib/MathHelper.h
	* src/lib/LatLonEdit.h
	* src/lib/MarblePlacemarkModel.h
	* src/lib/ClipPainter.cpp
	* src/lib/TileCreator.cpp
	* src/lib/ExtDateTime.cpp
	* src/lib/AbstractLayer/AbstractLayerData.h
	* src/lib/AbstractLayer/AbstractLayer.cpp
	* src/lib/AbstractLayer/AbstractLayerContainer.cpp
	* src/lib/AbstractLayer/AbstractLayer.h
	* src/lib/AbstractLayer/AbstractLayerContainer.h
	* src/lib/AbstractLayer/AbstractLayerData.cpp
	* src/lib/ViewParams.h
	* src/lib/MarbleMap_p.h
	* src/lib/TileLoader.cpp
	* src/lib/PlaceMarkInfoDialog.cpp
	* src/lib/SunLocator.h
	* src/lib/LatLonEdit.cpp
	* src/lib/MarbleAbstractFloatItem.h
	* src/lib/MarblePlacemarkModel.cpp
	* src/lib/global.h
	* src/lib/MarbleControlBox.cpp
	* src/lib/MercatorScanlineTextureMapper.cpp
	* src/lib/ClipPainter.h
	* src/lib/BoundingBox.h
	* src/lib/MarbleModel.cpp
	* src/lib/MarbleAbstractFloatItem.cpp
	* src/lib/ViewportParams.h
	* src/lib/GridMap.h
	* src/lib/MeasureTool.h
	* src/lib/MarbleMap.h
	* src/lib/VectorMap.h
	* src/lib/MarblePhysics.cpp
	* src/lib/ExtDateTime.h
	* src/lib/geodata/handlers/kml/KmlAreaTagHandler.cpp
	* src/lib/geodata/handlers/dgml/DgmlPenTagHandler.cpp
	* src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.cpp
	* src/lib/geodata/data/GeoDataCoordinates.cpp
	* src/lib/geodata/data/GeoDataContainer.cpp
	* src/lib/geodata/data/GeoDataPoint.h
	* src/lib/geodata/data/GeoDataCoordinates_p.h
	* src/lib/geodata/data/GeoDataPlacemark.cpp
	* src/lib/geodata/data/GeoDataLatLonAltBox.cpp
	* src/lib/geodata/data/GeoDataCoordinates.h
	* src/lib/geodata/data/GeoDataPoint.cpp
	* src/lib/geodata/data/GeoDataPlacemark.h
	* src/lib/geodata/data/GeoDataLatLonAltBox.h
	* src/lib/GridMap.cpp
	* src/lib/ViewportParams.cpp
	* src/plugins/marble/twitter/twitterPlugin.cpp
	* src/plugins/marble/twitter/twitterPlugin.h
	* src/plugins/marble/twitter/jsonparser.h
	* src/plugins/marble/overviewmap/MarbleOverviewMap.cpp
	* src/plugins/marble/overviewmap/MarbleOverviewMap.h
	* src/plugins/marble/compass/CompassFloatItem.cpp
	* src/plugins/marble/mapscale/MapScaleFloatItem.h
	* src/plugins/marble/mapscale/MapScaleFloatItem.cpp
	* src/plugins/marble/panoramio/PanoramioPlugin.cpp
	* src/plugins/marble/panoramio/PanoramioPlugin.h
	* src/plugins/marble/panoramio/jsonparser.h
	* src/plugins/marble/stars/MarbleStarsPlugin.cpp
	* src/plugins/marble/stars/MarbleStarsPlugin.h
	* src/MarbleTest.cpp
	* src/FastMath.h
	* src/plasmoid/worldclock.cpp
	* src/marble_part.cpp


2008-08-15  Inge Wallin  <inge@lysator.liu.se>

	Add a template for Float Item plugins
	* src/plugins/marble/FITemplate: new directory
	* src/plugins/marble/FITemplate/CMakeLists.txt: new file
	* src/plugins/marble/FITemplate/FITemplateFloatItem.h: new file
	* src/plugins/marble/FITemplate/FITemplateFloatItem.cpp: new file

	Rename Layers to RenderPlugin to reduce confusion.
	* src/lib/MarbleLayerInterface.h -> MarbleRenderPluginInterface.h.
	* src/lib/MarbleAbstractLayer.{h,cpp} -> MarbleRenderPlugin.{h,cpp}
	* src/lib/CMakeLists.txt: Reflect name changes
	* src/lib/LayerManager.{h,cpp},
	* src/lib/MarbleAbstractFloatItem.{h,cpp},
	* src/lib/MarbleWidget.{h,cpp},
	* src/lib/MarbleMap.{h,cpp},
	* src/lib/MarbleModel.{h,cpp},
	* src/lib/PluginManager.{h,cpp},
	* src/lib/PluginManager.h,
	* src/lib/tests/PluginManagerTest.cpp,
	* src/marble_part.cpp,
	* src/plugins/marble/compass/CompassFloatItem.{h,cpp},
	* src/plugins/marble/mapscale/MapScaleFloatItem.{h,cpp},
	* src/plugins/marble/geodata/MarbleGeoDataPlugin.h,
	* src/plugins/marble/overviewmap/MarbleOverviewMap.h,
	* src/plugins/marble/panoramio/PanoramioPlugin.h,
	* src/plugins/marble/satellites/SatellitesPlugin.h,
	* src/plugins/marble/stars/MarbleStarsPlugin.h:
	Use new name of the plugins.

2008-08-14  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/plugins/marble/test/MarbleTestPlugin.cpp:
    * src/plugins/marble/test/MarbleTestPlugin.h:
    * src/plugins/marble/twitter/twitterPlugin.cpp:
    * src/plugins/marble/twitter/twitterPlugin.h:
    * src/plugins/marble/panoramio/PanoramioPlugin.cpp:
    * src/plugins/marble/panoramio/PanoramioPlugin.h:
    * src/plugins/marble/satellites/SatellitesPlugin.cpp:
    * src/plugins/marble/satellites/SatellitesPlugin.h:

    Move deactivated plugins from global namespace into Marble namespace.

2008-08-13  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/KdeMainWindow.cpp:
    * src/MarbleTest.h:
    * src/kdemain.cpp:
    * src/ControlView.cpp:
    * src/lib/PluginManager.h:
    * src/lib/MeasureTool.cpp:
    * src/lib/TileCreatorDialog.h:
    * src/lib/MarbleWidget.cpp:
    * src/lib/MapThemeSortFilterProxyModel.h:
    * src/lib/CrossHairFloatItem.h:
    * src/lib/gps/Route.cpp:
    * src/lib/gps/GpxFile.cpp:
    * src/lib/gps/GmlSax.h:
    * src/lib/gps/RouteContainer.cpp:
    * src/lib/gps/Route.h:
    * src/lib/gps/GpxFile.h:
    * src/lib/gps/GpsElement.cpp:
    * src/lib/gps/Track.cpp:
    * src/lib/gps/RouteContainer.h:
    * src/lib/gps/TrackContainer.cpp:
    * src/lib/gps/GpsElement.h:
    * src/lib/gps/Track.h:
    * src/lib/gps/GpxSax.cpp:
    * src/lib/gps/Waypoint.cpp:
    * src/lib/gps/GpsTracking.cpp:
    * src/lib/gps/TrackContainer.h:
    * src/lib/gps/WaypointContainer.cpp:
    * src/lib/gps/TrackPoint.cpp:
    * src/lib/gps/GpxSax.h:
    * src/lib/gps/GpxFileModel.cpp:
    * src/lib/gps/Waypoint.h:
    * src/lib/gps/GpsTracking.h:
    * src/lib/gps/WaypointContainer.h:
    * src/lib/gps/TrackPoint.h:
    * src/lib/gps/GpxFileModel.h:
    * src/lib/gps/GpsLayer.cpp:
    * src/lib/gps/TrackSegment.cpp:
    * src/lib/gps/GpsLayer.h:
    * src/lib/gps/GmlSax.cpp:
    * src/lib/gps/TrackSegment.h:
    * src/lib/TileId.cpp:
    * src/lib/DiscCache.h:
    * src/lib/SphericalScanlineTextureMapper.cpp:
    * src/lib/Projections/AbstractProjectionHelper.cpp:
    * src/lib/Projections/AbstractProjection.cpp:
    * src/lib/Projections/AbstractProjectionHelper.h:
    * src/lib/Projections/AbstractProjection.h:
    * src/lib/Projections/SphericalProjectionHelper.cpp:
    * src/lib/Projections/SphericalProjection.cpp:
    * src/lib/Projections/MercatorProjectionHelper.cpp:
    * src/lib/Projections/MercatorProjection.cpp:
    * src/lib/Projections/SphericalProjection.h:
    * src/lib/Projections/SphericalProjectionHelper.h:
    * src/lib/Projections/MercatorProjectionHelper.h:
    * src/lib/Projections/MercatorProjection.h:
    * src/lib/Projections/EquirectProjectionHelper.cpp:
    * src/lib/Projections/EquirectProjection.cpp:
    * src/lib/Projections/EquirectProjectionHelper.h:
    * src/lib/Projections/EquirectProjection.h:
    * src/lib/Projections/AbstractProjectionHelper_p.h:
    * src/lib/VectorComposer.h:
    * src/lib/ImageLoadThread.h:
    * src/lib/MarbleAboutDialog.h:
    * src/lib/MarbleWidgetPopupMenu.h:
    * src/lib/Quaternion.cpp:
    * src/lib/MarbleThemeSelectView.h:
    * src/lib/MarbleWidgetInputHandler.h:
    * src/lib/MathHelper.cpp:
    * src/lib/MapScaleFloatItem.cpp:
    * src/lib/MarbleRunnerManager.h:
    * src/lib/PlaceMarkLayout.cpp:
    * src/lib/FileViewModel.h:
    * src/lib/MapThemeManager.h:
    * src/lib/PlaceMarkContainer.cpp:
    * src/lib/MergedLayerDecorator.h:
    * src/lib/MarbleWidget.h:
    * src/lib/AbstractScanlineTextureMapper.h:
    * src/lib/TileId.h:
    * src/lib/MarbleWidgetPopupMenu.cpp:
    * src/lib/PlaceMarkPainter.cpp:
    * src/lib/FileStoragePolicy.cpp:
    * src/lib/MarbleLayerInterface.h:
    * src/lib/MarbleLegendBrowser.cpp:
    * src/lib/MarbleRunnerManager.cpp:
    * src/lib/SunLocator.cpp:
    * src/lib/HttpFetchFile.cpp:
    * src/lib/TileLoader.h:
    * src/lib/PlaceMarkManager.cpp:
    * src/lib/FileViewModel.cpp:
    * src/lib/KmlFileViewItem.cpp:
    * src/lib/MapScaleFloatItem.h:
    * src/lib/MarbleMap.cpp:
    * src/lib/VectorMap.cpp:
    * src/lib/PlaceMarkContainer.h:
    * src/lib/MarblePhysics.h:
    * src/lib/GpxFileViewItem.h:
    * src/lib/CacheStoragePolicy.h:
    * src/lib/MarbleGeoDataModel.h:
    * src/lib/tests/KMLTest.cpp:
    * src/lib/tests/MarbleWidgetTest.cpp:
    * src/lib/tests/PluginManagerTest.cpp:
    * src/lib/MarbleControlBox.h:
    * src/lib/MarbleNavigator.h:
    * src/lib/GeoPolygon.cpp:
    * src/lib/EquirectScanlineTextureMapper.cpp:
    * src/lib/PlaceMarkPainter.h:
    * src/lib/MarbleDirs.h:
    * src/lib/StoragePolicy.h:
    * src/lib/TextureColorizer.cpp:
    * src/lib/GeoPainter.cpp:
    * src/lib/PlaceMarkManager.h:
    * src/lib/MarblePluginSettingsWidget.cpp:
    * src/lib/runners/MarbleAbstractRunner.cpp:
    * src/lib/runners/LatLonRunner.cpp:
    * src/lib/runners/MarbleAbstractRunner.h:
    * src/lib/runners/LatLonRunner.h:
    * src/lib/VisiblePlaceMark.cpp:
    * src/lib/ViewParams.cpp:
    * src/lib/MarbleThemeSelectView.cpp:
    * src/lib/MarbleCacheSettingsWidget.h:
    * src/lib/SphericalScanlineTextureMapper.h:
    * src/lib/TextureTile.h:
    * src/lib/MarbleWidgetInputHandler.cpp:
    * src/lib/TinyWebBrowser.cpp:
    * src/lib/GeoPolygon.h:
    * src/lib/MarbleAbstractLayer.h:
    * src/lib/Quaternion.h:
    * src/lib/PlaceMarkInfoDialog.h:
    * src/lib/PlaceMarkLayout.h:
    * src/lib/LatLonEdit.h:
    * src/lib/MarblePlacemarkModel.h:
    * src/lib/SunControlWidget.cpp:
    * src/lib/ClipPainter.cpp:
    * src/lib/MarblePluginSettingsWidget.h:
    * src/lib/MarbleCacheSettingsWidget.cpp:
    * src/lib/ExtDateTime.cpp:
    * src/lib/TileCreator.cpp:
    * src/lib/BoundingBox.cpp:
    * src/lib/AbstractLayer/AbstractLayerData.h:
    * src/lib/AbstractLayer/AbstractLayer.cpp:
    * src/lib/AbstractLayer/AbstractLayerInterface.cpp:
    * src/lib/AbstractLayer/AbstractLayerContainer.cpp:
    * src/lib/AbstractLayer/AbstractLayer.h:
    * src/lib/AbstractLayer/AbstractLayerInterface.h:
    * src/lib/AbstractLayer/AbstractLayerContainer.h:
    * src/lib/AbstractLayer/AbstractLayerData.cpp:
    * src/lib/MarbleAbstractLayer.cpp:
    * src/lib/ViewParams.h:
    * src/lib/MercatorScanlineTextureMapper.h:
    * src/lib/MarbleMap_p.h:
    * src/lib/MarbleDataFacade.h:
    * src/lib/MarbleModel.h:
    * src/lib/PluginManager.cpp:
    * src/lib/MarbleLegendBrowser.h:
    * src/lib/PlaceMarkInfoDialog.cpp:
    * src/lib/TileCreatorDialog.cpp:
    * src/lib/SunLocator.h:
    * src/lib/HttpFetchFile.h:
    * src/lib/LatLonEdit.cpp:
    * src/lib/MarbleAbstractFloatItem.h:
    * src/lib/MapThemeSortFilterProxyModel.cpp:
    * src/lib/HttpDownloadManager.cpp:
    * src/lib/KmlFileViewItem.h:
    * src/lib/MarblePlacemarkModel.cpp:
    * src/lib/global.h:
    * src/lib/MarbleGeoDataModel.cpp:
    * src/lib/GpxFileViewItem.cpp:
    * src/lib/CacheStoragePolicy.cpp:
    * src/lib/MarbleControlBox.cpp:
    * src/lib/MarbleAboutDialog.cpp:
    * src/lib/SunControlWidget.h:
    * src/lib/MercatorScanlineTextureMapper.cpp:
    * src/lib/ClipPainter.h:
    * src/lib/BoundingBox.h:
    * src/lib/MarbleModel.cpp:
    * src/lib/MarbleDirs.cpp:
    * src/lib/MarbleSearchListView.h:
    * src/lib/MarbleAbstractFloatItem.cpp:
    * src/lib/TextureColorizer.h:
    * src/lib/MarbleRunnerResult.h:
    * src/lib/GeoPainter.h:
    * src/lib/HttpDownloadManager.h:
    * src/lib/DeferredFlag.cpp:
    * src/lib/LayerManager.h:
    * src/lib/MarbleSearchListView.cpp:
    * src/lib/VisiblePlaceMark.h:
    * src/lib/MarblePlacemarkModel_P.h:
    * src/lib/GridMap.h:
    * src/lib/ViewportParams.h:
    * src/lib/FileStoragePolicy.h:
    * src/lib/TinyWebBrowser.h:
    * src/lib/MarbleRunnerResult.cpp:
    * src/lib/CrossHairFloatItem.cpp:
    * src/lib/MeasureTool.h:
    * src/lib/MarblePhysics.cpp:
    * src/lib/MarbleMap.h:
    * src/lib/VectorMap.h:
    * src/lib/DiscCache.cpp:
    * src/lib/LayerManager.cpp:
    * src/lib/ImageLoadThread.cpp:
    * src/lib/MarbleNavigator.cpp:
    * src/lib/DeferredFlag.h:
    * src/lib/MarbleDataFacade.cpp:
    * src/lib/ExtDateTime.h:
    * src/lib/AbstractFileViewItem.h:
    * src/lib/TileCreator.h:
    * src/lib/geodata/data/GeoDataIconStyle.cpp:
    * src/lib/geodata/data/GeoDataCoordinates.cpp:
    * src/lib/geodata/data/GeoDataMultiGeometry.h:
    * src/lib/geodata/data/GeoDataLineStyle.h:
    * src/lib/geodata/data/GeoDataLineString.cpp:
    * src/lib/geodata/data/GeoDataFolder.h:
    * src/lib/geodata/data/GeoDataContainer.cpp:
    * src/lib/geodata/data/GeoDataDocument.h:
    * src/lib/geodata/data/GeoDataPolygon.cpp:
    * src/lib/geodata/data/GeoDataGeometry.cpp:
    * src/lib/geodata/data/GeoDataCoordinates_p.h:
    * src/lib/geodata/data/GeoDataPoint.h:
    * src/lib/geodata/data/GeoDataStyleMap.cpp:
    * src/lib/geodata/data/GeoDataPlacemark.cpp:
    * src/lib/geodata/data/GeoDataLinearRing.h:
    * src/lib/geodata/data/GeoDataColorStyle.cpp:
    * src/lib/geodata/data/GeoDataLabelStyle.cpp:
    * src/lib/geodata/data/GeoDataFeature.h:
    * src/lib/geodata/data/GeoDataStyle.cpp:
    * src/lib/geodata/data/GeoDataLatLonAltBox.cpp:
    * src/lib/geodata/data/GeoDataHotSpot.h:
    * src/lib/geodata/data/GeoDataMultiGeometry.cpp:
    * src/lib/geodata/data/GeoDataStyleSelector.h:
    * src/lib/geodata/data/GeoDataLineStyle.cpp:
    * src/lib/geodata/data/GeoDataPolyStyle.h:
    * src/lib/geodata/data/GeoDataFolder.cpp:
    * src/lib/geodata/data/GeoDataObject.h:
    * src/lib/geodata/data/GeoDataIconStyle.h:
    * src/lib/geodata/data/GeoDataDocument.cpp:
    * src/lib/geodata/data/GeoDataCoordinates.h:
    * src/lib/geodata/data/GeoDataLineString.h:
    * src/lib/geodata/data/GeoDataContainer.h:
    * src/lib/geodata/data/GeoDataPoint.cpp:
    * src/lib/geodata/data/GeoDataLinearRing.cpp:
    * src/lib/geodata/data/GeoDataFeature.cpp:
    * src/lib/geodata/data/GeoDataPolygon.h:
    * src/lib/geodata/data/GeoDataGeometry.h:
    * src/lib/geodata/data/GeoDataHotSpot.cpp:
    * src/lib/geodata/data/GeoDataStyleSelector.cpp:
    * src/lib/geodata/data/GeoDataStyleMap.h:
    * src/lib/geodata/data/GeoDataColorStyle.h:
    * src/lib/geodata/data/GeoDataPlacemark.h:
    * src/lib/geodata/data/GeoDataPolyStyle.cpp:
    * src/lib/geodata/data/GeoDataLabelStyle.h:
    * src/lib/geodata/data/GeoDataStyle.h:
    * src/lib/geodata/data/GeoDataObject.cpp:
    * src/lib/geodata/data/GeoDataLatLonAltBox.h:
    * src/lib/geodata/parser/GeoDocument.h:
    * src/lib/geodata/parser/GeoOnfParser.h:
    * src/lib/geodata/parser/GeoDataParser.cpp:
    * src/lib/geodata/parser/GeoTagHandler.cpp:
    * src/lib/geodata/parser/GeoDataParser.h:
    * src/lib/geodata/parser/GeoParser.cpp:
    * src/lib/geodata/parser/GeoDocument.cpp:
    * src/lib/geodata/parser/GeoTagHandler.h:
    * src/lib/geodata/parser/GeoSceneParser.h:
    * src/lib/geodata/parser/GeoOnfParser.cpp:
    * src/lib/geodata/parser/GeoParser.h:
    * src/lib/GridMap.cpp:
    * src/lib/ViewportParams.cpp:
    * src/lib/EquirectScanlineTextureMapper.h:
    * src/lib/ScreenPolygon.h:
    * src/tilecreator/tccore.cpp:
    * src/tilecreator/main.cpp:
    * src/tilecreator/tccore.h:
    * src/marble_part.h:
    * src/plugins/marble/placemarks/MarblePlacemarksPlugin.cpp:
    * src/plugins/marble/placemarks/MarblePlacemarksPlugin.h:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.cpp:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.h:
    * src/plugins/marble/geodata/MarbleGeoDataPlugin.cpp:
    * src/plugins/marble/geodata/MarbleGeoDataPlugin.h:
    * src/plugins/marble/compass/CompassFloatItem.h:
    * src/plugins/marble/compass/CompassFloatItem.cpp:
    * src/plugins/marble/mapscale/MapScaleFloatItem.h:
    * src/plugins/marble/mapscale/MapScaleFloatItem.cpp:
    * src/plugins/marble/stars/MarbleStarsPlugin.cpp:
    * src/plugins/marble/stars/MarbleStarsPlugin.h:
    * src/MarbleTest.cpp:
    * src/KdeMainWindow.h:
    * src/ControlView.h:
    * src/marble_part.cpp:
    * tests/GeoPolygonTest.cpp:
    * tests/MarbleWidgetSpeedTest.cpp:

    Move from global namespace into namespace Marble.

2008-08-13  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/plugins/marble/placemarks:
    * src/plugins/marble/placemarks/MarblePlacemarksPlugin.cpp:
    * src/plugins/marble/placemarks/MarblePlacemarksPlugin.h:
    * src/plugins/marble/placemarks/CMakeLists.txt:
    * src/plugins/marble/placemarks/jakobsweg.kml:
    * src/plugins/marble/geodata/MarbleGeoDataPlugin.cpp:
    * src/plugins/marble/geodata/CMakeLists.txt:
    * src/plugins/marble/geodata/jakobsweg.kml:
    * src/plugins/marble/CMakeLists.txt:
    
    Add a plugin that displays simple placemarks
    
2008-08-13  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp:
    * src/lib/MapThemeManager.h:
    * src/lib/MergedLayerDecorator.h:
    * src/lib/MarbleWidget.h:
    * src/lib/AbstractScanlineTextureMapper.h:
    * src/lib/MarbleLegendBrowser.cpp:
    * src/lib/TileLoader.h:
    * src/lib/MapThemeManager.cpp:
    * src/lib/MergedLayerDecorator.cpp:
    * src/lib/TextureTile.cpp:
    * src/lib/TileLoaderHelper.cpp:
    * src/lib/TextureTile.h:
    * src/lib/ViewParams.h:
    * src/lib/TileLoader.cpp:
    * src/lib/MarbleModel.h:
    * src/lib/LayerManager.h:
    * src/lib/geodata/GeoDataTest.cpp:
    * src/lib/geodata/parser/GeoSceneParser.cpp:
    * src/lib/geodata/parser/GeoSceneParser.h:
    * src/lib/geodata/scene/GeoSceneZoom.h:
    * src/lib/geodata/scene/GeoSceneFilter.h:
    * src/lib/geodata/scene/GeoSceneIcon.h:
    * src/lib/geodata/scene/GeoScenePalette.cpp:
    * src/lib/geodata/scene/GeoSceneLegend.cpp:
    * src/lib/geodata/scene/GeoSceneTexture.cpp:
    * src/lib/geodata/scene/GeoSceneSettings.cpp:
    * src/lib/geodata/scene/GeoSceneGroup.h:
    * src/lib/geodata/scene/GeoSceneVector.cpp:
    * src/lib/geodata/scene/GeoSceneItem.h:
    * src/lib/geodata/scene/GeoSceneSection.cpp:
    * src/lib/geodata/scene/GeoSceneMapTheme.h:
    * src/lib/geodata/scene/GeoSceneHead.h:
    * src/lib/geodata/scene/GeoSceneDocument.cpp:
    * src/lib/geodata/scene/GeoSceneLayer.h:
    * src/lib/geodata/scene/GeoSceneMap.h:
    * src/lib/geodata/scene/GeoSceneZoom.cpp:
    * src/lib/geodata/scene/GeoSceneFilter.cpp:
    * src/lib/geodata/scene/GeoSceneIcon.cpp:
    * src/lib/geodata/scene/GeoSceneProperty.h:
    * src/lib/geodata/scene/GeoSceneGroup.cpp:
    * src/lib/geodata/scene/GeoSceneItem.cpp:
    * src/lib/geodata/scene/GeoSceneMapTheme.cpp:
    * src/lib/geodata/scene/GeoSceneHead.cpp:
    * src/lib/geodata/scene/GeoScenePalette.h:
    * src/lib/geodata/scene/GeoSceneLegend.h:
    * src/lib/geodata/scene/GeoSceneTexture.h:
    * src/lib/geodata/scene/GeoSceneSettings.h:
    * src/lib/geodata/scene/GeoSceneVector.h:
    * src/lib/geodata/scene/GeoSceneSection.h:
    * src/lib/geodata/scene/GeoSceneLayer.cpp:
    * src/lib/geodata/scene/GeoSceneMap.cpp:
    * src/lib/geodata/scene/GeoSceneDocument.h:
    * src/lib/geodata/scene/GeoSceneProperty.cpp:
    * src/lib/TileLoaderHelper.h:

    Move from global namespace into namespace Marble.

2008-08-12  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/plugins/marble/geodata/MarbleGeoDataPlugin.cpp
    * src/plugins/marble/geodata/jakobsweg.kml

Also displaying points now. Fixed crash when the kml has no StyleMap. Added sample file to test it.

2008-08-12  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/kml/KmlSchemaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPairTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOpenTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlSimpleFieldTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlTessellateTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAreaTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlWidthTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlExtrudeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlNameTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlStyleUrlTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAltitudeModeTagHandler.h:
    * src/lib/geodata/handlers/kml/Kml_scaleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDescriptionTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlFillTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPairTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlSimpleFieldTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlKeyTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlStyleMapTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHotSpotTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOuterBoundaryIsTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountrycodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPopTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountryNameCodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlSchemaTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlRoleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlInnerBoundaryIsTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlDescriptionTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlExtrudeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlNameTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.cpp:
    * src/lib/geodata/handlers/kml/Kml_scaleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountryNameCodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlRoleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleMapTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHotSpotTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlInnerBoundaryIsTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOutlineTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlElementDictionary.h:
    * src/lib/geodata/handlers/kml/KmlVisibilityTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHeadingTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOpenTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlAreaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlTessellateTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOutlineTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAltitudeModeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlWidthTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlElementDictionary.cpp:
    * src/lib/geodata/handlers/kml/KmlFillTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlVisibilityTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlKeyTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleUrlTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOuterBoundaryIsTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCountrycodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPopTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHeadingTagHandler.cpp:
    * src/lib/geodata/parser/GeoDataParser.cpp:

    Move from global namespace into namespace Marble.

2008-08-12  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/gpx/GPXElementDictionary.cpp:
    * src/lib/geodata/handlers/gpx/GPXElementDictionary.h:
    * src/lib/geodata/handlers/gpx/GPXgpxTagHandler.cpp:
    * src/lib/geodata/handlers/gpx/GPXgpxTagHandler.h:
    * src/lib/geodata/parser/GeoDataParser.cpp:

    Move from global namespace into namespace Marble.

2008-08-12  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlVectorTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlItemTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlInstallMapTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSourceFileTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlAuxillaryDictionary.h:
    * src/lib/geodata/handlers/dgml/DgmlMinimumTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlLayerTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlMaximumTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPenTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlDescriptionTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlNameTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlPaletteTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDiscreteTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlThemeTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceDirTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSectionTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlVectorTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlInstallMapTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlLayerTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTextTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPenTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDownloadUrlTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.h:
    * src/lib/geodata/handlers/dgml/DgmlFilterTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceDirTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlVisibleTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPaletteTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlHeadingTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.h:
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlThemeTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDiscreteTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSectionTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlProjectionTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlFilterTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.cpp:
    * src/lib/geodata/handlers/dgml/DgmlTargetTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlBrushTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTextTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlVisibleTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlItemTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlHeadingTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.cpp:
    * src/lib/geodata/handlers/dgml/DgmlDownloadUrlTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlSourceFileTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlAuxillaryDictionary.cpp:
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlNameTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlMinimumTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlProjectionTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlMaximumTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlBrushTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlDescriptionTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlTargetTagHandler.h:
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.h:
    * src/lib/geodata/parser/GeoSceneParser.cpp:
    * src/lib/geodata/scene/GeoSceneMap.cpp:

    Move from global namespace into namespace Marble.

2008-08-12  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataHotSpot.h:
    * src/lib/geodata/data/GeoDataCoordinates.h:

    Clean up.

2008-08-12  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.cpp:

    Remove commented out code.

2008-08-08  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * TODO:

    Update.

2008-08-07  Patrick Spendrin    <ps_ml@gmx.de>

    * src/plugins/marble/geodata/MarbleGeoDataPlugin.{h|cpp}
    * src/plugins/marble/geodata/Rabet.kml
    * src/lib/geodata/data/GeoDataLineStyle.cpp
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.cpp

    fix opacity and line width
    Note: Look at the town where I live and try to find the street in which
    I live - even if I painted it in a strange colour.
    Note: The colours still don't match GE but maybe this is just an illusion
    
2008-08-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/plugins/marble/CMakeLists.txt
    * src/plugins/marble/geodata/CMakeLists.txt
    * src/plugins/marble/geodata/MarbleGeoDataPlugin.{h|cpp}
    * src/plugins/marble/geodata/czech.kml
    * src/plugins/marble/geodata/germany.kml
    * src/plugins/marble/geodata/poland.kml

    add MarbleGeoDataPlugin
    this plugin dumps the content of KML file to the screen
    (as far as possible)

2008-08-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/CMakeLists.txt
    * src/lib/GeoPainter.{h|cpp}
    * src/lib/MarbleDataFacade.{h|cpp}
    * src/lib/MarbleGeoDataModel.{h|cpp}

    adjust GeoPainter to make direct painting of QVectors possible
    expose a GeoDataDocument as geoDataRoot through the Facade
    add a new data model for the geodata api

2008-08-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataDocument.{h|cpp}
    * src/lib/geodata/data/GeoDataStyle.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlStyleMapTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlStyleUrlTagHandler.cpp

    fix styles so that Marble GeoData Plugin can use them

2008-08-06  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleControlBox.h:
    * src/lib/MarblePlacemarkModel.h:
    * src/lib/MarbleControlBox.cpp:

    Implement search on OpenStreetMap data using the OpenStreetMap
    name finder service.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/osm-namefinder/DistanceTagHandler.cpp:
    * src/lib/geodata/handlers/osm-namefinder/DistanceTagHandler.h:

    Remove "distance" tag handlers because they are not needed for basic
    search functionality.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.h:

    Replace include with forward decls.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.cpp:
    * src/lib/HttpDownloadManager.h:

    Refactoring, move redundant code from the two addJob methods
    to a addJob helper method.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.cpp:

    Coding style, don't create so many temporary objects.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.cpp:

    No need to clear just constructed containers.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.cpp:

    Coding style cleanup.

2008-08-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.cpp:
    * src/lib/HttpDownloadManager.h:

    Change container type of m_jobQueue from QQueue to QStack which
    has the advantage that tiles of the current visited area are
    loaded first.
    This is noticable if you scroll and zoom a lot or if the internet
    connection is slower than DSL like GPRS/EDGE or even 3G GSM.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleWidgetInputHandler.cpp:

    Coding style fix, change C-style cast into dynamic_cast, thanks
    to Dennis Nienhüser for pointing that out.

2008-08-04  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/geodata/data/GeoDataGeometry.cpp (unpack): Bugfix
	(GeoDataGeometry): Init in right order.
	* src/lib/geodata/data/GeoDataPoint.cpp (GeoDataPoint): Init in right order

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/PlaceMarkManager.cpp:

    Coding style changes.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.cpp:

    OpenstreetMap name finder returns coordinates in degree.

2008-08-04  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataStyleMap.{h|cpp}
    * src/lib/geodata/data/GeoDataFeature.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlStyleMapTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlKeyTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlStyleUrlTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlPairTagHandler.{h|cpp}

    implementing the kml styleMap

    * src/lib/geodata/data/GeoDataCoordinates.h
    * src/lib/geodata/data/GeoDataDocument.h
    * src/lib/geodata/data/GeoDataGeometry.h
    * src/lib/geodata/data/GeoDataPoint.h

    documentation fixes

    * src/lib/geodata/data/Serializable.h
    * src/lib/geodata/data/GeoDataPlacemark.cpp
    * src/lib/geodata/data/GeoDataMultiGeometry.cpp

    fix some geometry flag

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarblePlacemarkModel.cpp:

    MarblePlacemarkModel does not need a PlaceMarkManager in every case,
    so make it work without one.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/CMakeLists.txt:
    * src/lib/CMakeLists.txt:

    Add XML tag handlers for OSM name finder to build system.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/osm-namefinder/DescriptionTagHandler.cpp:

    Add Q_ASSERT.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.cpp:

    Work around GeoParser bug which prevents the handler of the first
    element to be invoked.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/osm-namefinder/SearchResultsTagHandler.cpp:

    - Remove commented out code.
    - Use GeoDataDocument instead of GeoDataContainer.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/parser/GeoParser.h:
    * src/lib/geodata/parser/GeoParser.cpp:

    Coding style fixes.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/parser/GeoOnfParser.h:
    * src/lib/geodata/parser/GeoOnfParser.cpp:

    Add parser class for OpenStreetMap name finder.

2008-08-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataPlacemark.cpp:

    Remove redundant null pointer check.

2008-08-03  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * marble/src/lib/geodata/handlers/osm-namefinder/AttributeDictionary.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/DescriptionTagHandler.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/PlaceTagHandler.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/ElementDictionary.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/SearchResultsTagHandler.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/DescriptionTagHandler.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/NearestPlacesTagHandler.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/PlaceTagHandler.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/NamedTagHandler.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/ElementDictionary.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/DistanceTagHandler.cpp:
    * marble/src/lib/geodata/handlers/osm-namefinder/SearchResultsTagHandler.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/NearestPlacesTagHandler.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/DistanceTagHandler.h:
    * marble/src/lib/geodata/handlers/osm-namefinder/AttributeDictionary.cpp:

    Initial commit for OpenStreetMap name finder XML tag handlers.

2008-08-03  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KmlElementDictionary.{h|cpp}
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.cpp
    * src/lib/geodata/parsers/GeoDataParser.cpp

    make newest KML documents (version 2.2) at least partly readable

2008-08-02  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataCoordinates{.h|.cpp}
    * src/lib/geodata/data/GeoDataPoint{.h|.cpp}

    - move normalize* functions from GeoDataCoordinates to 
    GeoDataPoint - they still can be accessed from GeoDataPoint though
    - add some more documentation to those two classes
    why they need to be different and how they should be used

2008-08-01  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/CMakeLists.txt

    install MarbleAbstractFloatItem.h

2008-08-01  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataPlacemark.{h|cpp}

    replace GeoDataPoint with GeoDataCoordinates here as well
    This lead to a rather strange error before.

2008-08-01  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/AbstractLayer/AbstractLayer.{h|cpp}
    * src/lib/AbstractLayer/AbstractLayerData.{h|cpp}
    * src/lib/geodata/data/GeoDataLatLonAltBox.{h|cpp}
    * src/lib/gps/Waypoint.{h|cpp}
    * src/lib/Projections/AbstractProjection.{h|cpp}
    * src/lib/Projections/AbstractProjectionHelper.h
    * src/lib/Projections/EquirectProjection.{h|cpp}
    * src/lib/Projections/MercatorProjection.{h|cpp}
    * src/lib/Projections/SphericalProjection.{h|cpp}
    * src/lib/GeoPainter.{h|cpp}
    * src/lib/MarbleControlBox.{h|cpp}
    * src/lib/MarbleMap{.h|_p.h|.cpp}
    * src/lib/MarblePhysics.{h|cpp}
    * src/lib/MarblePlacemarkModel.{h|cpp}
    * src/lib/MarbleWidget.{h|cpp}
    * src/lib/MarbleWidgetInputHandler.cpp
    * src/lib/MarbleWidgetPopupMenu.cpp
    * src/lib/MeasureTool.{h|cpp}
    * src/lib/MercatorScanlineTextureMapper.cpp
    * src/lib/PlaceMarkContainer.h
    * src/lib/PlaceMarkInfoDialog.cpp
    * src/lib/PlaceMarkLayout.cpp
    * src/lib/ViewParams.cpp
    * src/plugins/marble/compass/CompassFloatItem.cpp
    * src/plugins/marble/panoramio/PanoramioPlugin.cpp
    * src/plugins/marble/satellites/SatellitesPlugin.cpp
    * src/plugins/marble/twitter/twitterPlugin.{h|cpp}
    * src/marble_part.cpp
    * src/QtMainWindow.cpp
    
    This commit changes the complete code base from GeoDataPoint
    to GeoDataCoordinates. This is needed because the extensions
    provided by GeoDataPoint are not needed most of the times:
    GeoDataPoint derives from GeoDataGeometry and GeoDataObject -
    these features are very seldomly needed if you just want to check
    if a certain 3d-point is within GeoDataLatLonAltBox.
    Another point in this port is that using GeoDataPoint in a
    QVector is very expensive in terms of speed - use GeoDataCoordinates
    for those purposes.
    I will add further documentation to GeoDataCoordinates.h and
    GeoDataPoint.h .
    
2008-08-01  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/EquirectScanlineTextureMapper.cpp
    * src/lib/SphericalScanlineTextureMapper.cpp

    cleanup dependencies of GeoDataPoint

2008-07-27  Inge Wallin  <inge@lysator.liu.se>

	Clean up projection code in preparation for bigger things.
	* src/lib/Projections/AbstractProjection.{h,cpp},
	* src/lib/Projections/SphericalProjection.{h,cpp},
	* src/lib/Projections/EquirectProjection.{h,cpp},
	* src/lib/Projections/MercatorProjection.{h,cpp}:
	Clean up, make clearer and make it follow coding standards

2008-07-27  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/parser/GeoParser.cpp:

    Coding style, make lines shorter.

2008-07-27  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataContainer.h:

    Remove #if 0'ed code.

2008-07-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpDownloadManager.cpp:

    Fix regression caused by fix for bug 162681:
    Use deleteAfter to delete active jobs also in
    ~HttpDownloadManager.
    Was fixed in 4.1 branch on 2008-07-20.

2008-07-26 shashank singh <shashank_singh@ieee.org>

    * src/plugins/marble
    added twitter plugins and did small modification in panoramio plugin

2008-07-24  Claudiu Covaci  <claudiu.covaci@gmail.com>
	* src/lib/MarbleControlBox.cpp:
	Fix: re-enable zoom buttons if newly selected map supports higher zoom levels.

2008-07-23  Claudiu Covaci  <claudiu.covaci@gmail.com>
	MarbleControlBox patch to fix the item order by subclassing QSortFilterProxyModel.
	* src/lib/MarbleControlBox.{h,cpp}: added MapThemeSortFilterProxyModel instance
	* src/lib/MapThemeSortFilterProxyModel.{h,cpp}: new files

2008-07-20  Inge Wallin  <inge@lysator.liu.se>

	Introduce a read-only facade for internal Marble data.
	* src/lib/CMakeLists.txt: compile new .cpp and install new .h
	* src/lib/MarbleDataFacade.{h,cpp}: new files
	* src/lib/MarbleModel.{h,cpp} (dateTime): New function

	Restore forward compatibility
	* src/lib/MarbleModel.{h,cpp}: Make all members part of the
	private class.

	Reduce warnings: Initialize in the right order.
	* src/lib/geodata/data/GeoDataPlacemark.cpp (GeoDataPlacemarkPrivate),
	* src/lib/geodata/data/GeoDataPolygon.cpp (GeoDataPolygonPrivate),
	* src/lib/geodata/scene/GeoSceneLayer.cpp (GeoSceneLayer): Initialize in the right order.

	Cleanup: Make the d pointer actually be named d.
	* src/lib/geodata/data/GeoDataPolygon.{h,cpp},
	* src/lib/geodata/data/GeoDataGeometry.{h,cpp},
	* src/lib/geodata/data/GeoDataCoordinates.{h,cpp},
	* src/lib/geodata/data/GeoDataHotSpot.{h,cpp}: rename the d pointer.
	
2008-07-19  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpFetchFile.cpp:

    Clean up last commit:
    - Remove commented out code.
    - Comment out debug output as it was before.

2008-07-19  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpFetchFile.cpp:
    * src/lib/HttpFetchFile.h:
    * src/lib/HttpDownloadManager.cpp:

    Fix bug 162681 in trunk (slow tile download).
    The problem with the download implementation was that
    there was only one QHttp object in HttpFetchFile, throught
    which all requests were serialized.
    Now we have got one QHttp object per active HttpJob, so
    this bottleneck is gone now.

2008-07-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/marble_part.cpp:

    Fix "exit full screen mode".

2008-07-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlDownloadUrlTagHandler.cpp:
    * src/lib/geodata/scene/GeoSceneTexture.cpp:
    * src/lib/geodata/scene/GeoSceneTexture.h:
    * data/maps/earth/openstreetmap/openstreetmap.dgml:

    Implement round robin algorithm for fetching tiles.
    This was brought up by the OpenStreetMap tile server admins
    and should go into 4.1 as well.


2008-07-07  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataPoint.{cpp,h}:

    optimize a bit - this was done by the compiler before though

2008-07-07  Torsten Rahn <rahn@kde.org>

    * src/KdeMainWindow.cpp:
    * src/lib/MarbleNavigationSettingsWidget.ui:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/MarblePluginSettingsWidget.{cpp,h,ui}:
    * src/lib/MarbleCacheSettingsWidget.{cpp,h,ui}:
    * src/lib/MarbleWidgetInputHandler.cpp:
    * src/lib/MarbleAbstractLayer.{cpp,h}:
    * src/lib/MarbleViewSettingsWidget.ui:
    * src/lib/PlaceMarkInfoDialog.cpp:
    * src/lib/global.h:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/LayerManager.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/lib/LayerManager.cpp:
    * src/lib/geodata/data/GeoDataCoordinates.{cpp,h}:
    * src/lib/geodata/data/GeoDataFeature.{cpp,h}:
    * src/marble.kcfg:
    * src/marble_part.{cpp,h,rc}:

    Fixing Settings Dialog:
    - Displaying Plugins
    - Enabling Animated Travel Checkbox
    - Enabling Change of Degree Notation

2008-07-07  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/tests/CMakeLists.txt:
    * src/lib/tests/KMLTest.cpp:

    add a new test for KML parsing and caching: The Test is handling
    the biggest kml we currently have and saves it into a cache file (at the 
    location of the executable). The test is expected to pass

2008-07-07  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataMultiGeometry{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler.cpp

    add GeoDataMultiGeometry representation

2008-07-07  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KmlAltitudeModeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlExtrudeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlTessellateTagHandler.cpp

    fix issues with incorrect parentItem; this should make test
    in digikam work

2008-07-07  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataContainer.cpp
    * src/lib/geodata/data/GeoDataCoordinates{.h|.cpp}
    * src/lib/geodata/data/GeoDataDocument{.h|.cpp}
    * src/lib/geodata/data/GeoDataFeature{.h|.cpp}
    * src/lib/geodata/data/GeoDataFolder.h
    * src/lib/geodata/data/GeoDataGeometry{.h|.cpp}
    * src/lib/geodata/data/GeoDataHotSpot{.h|.cpp}
    * src/lib/geodata/data/GeoDataIconStyle.cpp
    * src/lib/geodata/data/GeoDataLabelStyle.cpp
    * src/lib/geodata/data/GeoDataLatLonAltBox{.h|.cpp}
    * src/lib/geodata/data/GeoDataLinearRing.h
    * src/lib/geodata/data/GeoDataLineString{.h|.cpp}
    * src/lib/geodata/data/GeoDataLineStyle.cpp
    * src/lib/geodata/data/GeoDataObject.h
    * src/lib/geodata/data/GeoDataPlacemark{.h|.cpp}
    * src/lib/geodata/data/GeoDataPoint{.h|.cpp}
    * src/lib/geodata/data/GeoDataPolygon{.h|.cpp}
    * src/lib/geodata/data/GeoDataPolyStyle.cpp
    * src/lib/geodata/data/Serializable.h

    serialize!


2008-07-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/PlaceMarkManager.cpp

    fix loading via loadKmlFromData; 
    this should fix usage in Digikam so please rebuild and tell me via mail
    One has to open QBuffers!!!

2008-07-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlInnerBoundaryIsTagHandler{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlLinearRingTagHandler{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlLineStringTagHandler{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlOuterBoundaryIsTagHandler{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlPolygonTagHandler{.h|.cpp}

    (2/2) parse remaining geometry objects and change existing Point and 
    Coordinates

2008-07-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataLineString{.h|.cpp}
    * src/lib/geodata/data/GeoDataMultiGeometry{.h|.cpp}
    * src/lib/geodata/data/GeoDataPlacemark{.h|.cpp}
    * src/lib/geodata/data/GeoDataPolygon{.h|.cpp}

    (1/2) add remaining geometry objects and save them in Placemark

2008-07-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KmlAltitudeModeTagHandler{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlExtrudeTagHandler{.h|.cpp}
    * src/lib/geodata/handlers/kml/KmlTessellateTagHandler{.h|.cpp}

    add tags for missing properties

2008-07-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.cpp
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.cpp

    fix more possible memory leaks and unify debug output

2008-07-06  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataCoordinates{.h|.cpp}
    * src/lib/geodata/data/GeoDataDocument.cpp
    * src/lib/geodata/data/GeoDataGeometry{.h|.cpp}
    * src/lib/geodata/data/GeoDataPoint{.h|.cpp}

    fix setter in GeoDataCoordinates
    fix missing tessellate, altitudeMode and extrude properties in GeoDataGeometry
    fix missing setter in GeoDataPoint

2008-07-03  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt
    * MarbleMacros.cmake
    * src/lib/tests/CMakeLists.txt
    * tests/CMakeLists.txt
    * tests/GeoPolygonTest.cpp
    * tests/MarbleWidgetSpeedTest.cpp

    unify testing stuff

2008-07-03  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/GeoDataPoint{.h|_p.h|.cpp}
    * src/lib/geodata/GeoDataCoordinates{.h|_p.h|.cpp}
    * src/lib/Quaternion.h

    use GeoDataCoordinates as a replacement for GeoDataPoint
    GeoDataCoordinates should be the abstract equivalent of
    a point on earth - GeoDataPoint is the equivalent of a Point
    tag in KML (which can have some additional information).

2008-07-01  Torsten Rahn <rahn@kde.org>

    * src/KdeMainWindow.cpp:
    * src/marble_part.{cpp,h,rc}:
    - Adding float item menus to the menu as well.

    * src/QtMainWindow.cpp:
    - removed qDebug line.

2008-06-30  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/CMakeLists.txt:
    * src/lib/geodata/CMakeLists.txt:

    install all geodata headers to not break digikam each time
    a new class is added

2008-06-30  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataPoint.{h|cpp}:
    * src/lib/geodata/data/GeoDataLineString.{h|cpp}:
    
    revert changes made earlier because of breakage

2008-06-30  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/TinyWebBrowser.{h|cpp}:

    fix overload warning

2008-06-30  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataPoint.h:

    fix comments

2008-06-30  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataCoordinates.{h|cpp}:
    * src/lib/geodata/data/GeoDataPoint.{h|cpp}:
    * src/lib/geodata/data/GeoDataLineString.{h|cpp}:

    add a new class GeoDataCoordinates - this one should take over the datatype 
    function of GeoDataPoint. Adjust GeoDataPoint and GeoDataLine to the new
    structure

2008-06-30  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/tests/CMakeLists.txt:
    * src/lib/tests/MarbleWidgetTest.cpp:
    * src/lib/tests/PluginManagerTest.cpp:

    fix PluginManagerTest on Windows - MARBLE_PLUGIN_PATH and MARBLE_DATA_PATH 
    have to be set at "runtime" because the tests are still in the builddir when
    they are run --> this will make QCoreApplication::applicationDirPath 
    unusable

2008-06-29  Torsten Rahn <rahn@kde.org>

    * src/QtMainWindow.{cpp,h}:
    * src/lib/PluginManager.h:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleLegendBrowser.cpp:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/ViewParams.{cpp,h}:
    * src/lib/MarbleAbstractLayer.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/PluginManager.cpp:
    * src/lib/MarbleLegendBrowser.h:
    * src/lib/MarbleAbstractFloatItem.{cpp,h}:
    * src/lib/MarbleControlBox.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/lib/LayerManager.{cpp,h}:
    * src/tilecreator/CMakeLists.txt:
    * src/plugins/marble/test/MarbleTestPlugin.h:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.h:
    * src/plugins/marble/compass/CompassFloatItem.h:
    * src/plugins/marble/mapscale/MapScaleFloatItem.{cpp,h}:
    * src/plugins/marble/satellites/SatellitesPlugin.h:
    * src/plugins/marble/stars/MarbleStarsPlugin.h:
    * src/plugins/marble/CMakeLists.txt:

    - Fixing the Plugin framework, so it has got a real base class 
      ( MarbleAbstractLayer ).
    - Fixing the checkboxes for the floatitem plugins in the legend.
    - Adding the info boxes menu entries in the Qt frontend.
    - Simplifying the plugin API a bit.
    - D-Pointerification on the LayerManager class.
    - Fixing the bug introduced with rev. 823208 which would result in 
      the zoomslider not to get proper tickmarks. 

2008-06-29  Inge Wallin  <inge@lysator.liu.se>

	Cleaning: Unify qridmap for equirectangular and mercator projections
	* src/lib/GridMap.{h,cpp} (mercatorCreateCircle): renamed into
	flatCreateCircle
	(createCircle): Call flatCreateCircle

	Make gridmap work for Mercator projection
	* src/lib/GridMap.cpp (mercatorCreateCircle): New function
	(createCircle): call mercatorCreateCircle

2008-06-28  Inge Wallin  <inge@lysator.liu.se>

	Fix warnings
	* src/plugins/marble/stars/MarbleStarsPlugin.cpp (render): use QRectF for floating point sizes of the stars.
	* src/lib/Projections/MercatorProjection.cpp (geoCoordinates): remove unused vars
	* src/lib/MarbleAbstractFloatItem.cpp (misc): mark unused parameters
	* src/lib/geodata/scene/GeoScenePalette.cpp: Add newline
	* src/lib/geodata/scene/GeoSceneLayer.h (constructor): initialize in right order

2008-06-27  Inge Wallin  <inge@lysator.liu.se>

	Link!
	* src/lib/tests/CMakeLists.txt: Add necessary qt libs and fix a bug.

	Compile!  (still doesn't link)
	* src/lib/global.h: include QString.h

2008-06-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/tests/CMakeLists.txt
    * src/lib/tests/MarbleWidgetTest.cpp

    add a new Test for the MarbleWidget - simply try to run a basic MarbleWidget

2008-06-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/MarbleWidget.cpp

    add a default MapThemeId

2008-06-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/PlaceMarkManager.cpp

    fix leakage of GeoNodes - the parser forced me to do it

2008-06-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/CMakeLists.txt

    fix build error on windows - MapThemeManager.cpp is in marbleWidget

2008-06-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/ExtDateTime.cpp:
    * src/lib/ExtDateTime.h:
    * src/lib/MergedLayerDecorator.cpp:
    * src/lib/MergedLayerDecorator.h:
    * src/lib/SunControlWidget.cpp:
    * src/lib/SunControlWidget.h:
    * src/lib/SunLocator.cpp:
    * src/lib/SunLocator.h:

    Fix krazy issues (missing email address).

2008-06-25  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleControlBox.h:
    * src/lib/MarbleControlBox.cpp:

    Fix includes.

2008-06-24  Torsten Rahn <rahn@kde.org>

    * src/plugins/marble/compass/CompassFloatItem.{cpp,h}:
    * src/lib/TextureTile.{cpp,h}:
    * src/lib/MarbleAbstractFloatItem.h:
    * src/lib/MarbleModel.cpp:
    * src/lib/MarbleAbstractFloatItem.cpp:
    * src/lib/PlaceMarkInfoDialog.ui:
    * src/lib/CMakeLists.txt:
    * src/lib/ImageLoadThread.{cpp,h}:

    - Fixing the position of the Compass.
    - Adding the ImageLoadThread class already (does nothing ATM).
    - Fixing the tab activated by default.

2008-06-23  Shashank Singh <shashank.personal@gmail.com>
    * src/lib/jsonparser.h --corrected a mistake photo_file_url
    * src/lib/jsonparser.cpp --corrected a mistake regarding photo_file_url
    * src/lib/HttpFetchFile.cpp -- url after query character was being chopped off ,corrected it
    * src/lib/TinyWebBrowser.h  -- tinkered with it to enable support for panoramio
    * src/lib/TinyWebBrowser.cpp
    * src/lib/HttpDownloadManager -- very small formatting changes 

2008-06-22  Simon Schmeisser <mail_to_wrt@gmx.de>

    * src/lib/MarbleControlBox.cpp

    - another assumption about having a MarbleWidget hacked out

    * src/lib/MapThemeManager.h
    * src/lib/MarbleControlBox.h
    * src/lib/MarbleControlBox.cpp
    * src/lib/CMakeLists.txt

    - Made MapThemeManager externally accessible

2008-06-21  Inge Wallin  <inge@lysator.liu.se>

	Fix a number of warnings in the following files
	* src/lib/AbstractScanlineTextureMapper.cpp
	* src/lib/Projections/EquirectProjection.cpp
	* src/lib/PlaceMarkLayout.cpp
	* src/lib/AbstractScanlineTextureMapper.h
	* src/lib/EquirectScanlineTextureMapper.cpp
	* src/lib/GeoPainter.cpp
	* src/lib/TileCreator.cpp
	* src/lib/geodata/handlers/kml/KmlColorModeTagHandler.cpp
	* src/lib/geodata/scene/GeoSceneItem.cpp
	* src/lib/geodata/scene/GeoSceneSection.cpp
	* src/plugins/marble/stars/MarbleStarsPlugin.cpp

	Commit some left-over changes
	* src/lib/TextureColorizer.cpp (colorize): Follow coding standards
	* src/lib/MarbleMap.cpp (setDownloadUrl): Follow coding standards

2008-06-18  Torsten Rahn <ps_ml@gmx.de>

    * src/lib/MergedLayerDecorator.{h|cpp}:
    * src/lib/MarbleModel.cpp:

    - Only show clouds if the clouds property is defined in the dgml file.

2008-06-18  Patrick Spendrin    <ps_ml@gmx.de>

    * tools/add_kml/add_kml_tag.py

    fix renaming from KML to Kml

2008-06-18  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/XmlHandler.{h|cpp}
    * src/lib/MarbleModel.cpp
    * src/lib/CMakeLists.txt
    remove XmlHandler as now the KML geoparser takes over that part

2008-06-18  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt

    set the cmake minimum version to 2.4.8
    this might be replaced later by a workaround

2008-06-17  Simon Schmeisser  <mail_to_wrt@gmx.de>
    * FindMarble.cmake:

    added a CMake module that helps external applications
    find an installed Marble

    * CMakeLists.txt:

    install CMake module

2008-06-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleWidget.h:

    Small apidocs fixes/cleanups.

2008-06-15  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/PlaceMarkManager.cpp

    remove memory leak as suggested by Jens-Michael Hoffmann

2008-06-15  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt

    fix MinGW plugins
    fix QTSCRIPT include/linker error

2008-06-15  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/PlaceMarkManager.cpp

    use the new KML implementation; later we can remove the
    XMLHandler stuff

2008-06-15 Shashank Singh <shashank.personal@gmail.com>
    * src/lib/jsonparser.h
    * src/lib/jsonparser.cpp

2008-06-14 Shashank Singh <shashank.personal@gmail.com>
    * src/lib/jsonparser.h
    * src/lib/jsonparser.cpp
    * src/lib/TinyWebBrowser.h
    * src/lib/TinyWebBrowser.h

2008-06-13  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/tests/CMakeLists.txt

    fix linkage of QTONLY version
  
   
2008-06-13  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/PluginManager.cpp

    make the output of the pluginmanager usable

2008-06-13  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt
    * MarbleMacros.cmake
    * src/plugins/designer/marblewidget/CMakeLists.txt
    * src/plugins/designer/navigator/CMakeLists.txt
    * src/plugins/marble/compass/CMakeLists.txt
    * src/plugins/marble/overviewmap/CMakeLists.txt
    * src/plugins/marble/satellites/CMakeLists.txt
    * src/plugins/marble/stars/CMakeLists.txt
    * src/plugins/marble/test/CMakeLists.txt

    add new cmake macros to make the building of marble plugins easier

2008-06-10  Shashank Singh <shashank.personal@gmail.com>
    * CMakeLists.txt
    * src/lib/CmakeLists.txt
    * added src/lib/jsonparser.h
    * added src/lib/jsonparser.cpp
    * changed PLaceMarkinfoDialog.cpp
    * changed TinyWebBrowser.cpp
    * changed TinyWebBrowser.h
    * added a tab named Panoramio in Ui PLaceMarkinfoDialog

2008-06-10  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/CMakeLists.txt:

    Missing export was fixed by mlaurent, so revert the last change.

2008-06-10  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/CMakeLists.txt:

    Disable making of src/lib/tests because of link failure on linux.

2008-06-09  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt
    * src/lib/CMakeLists.txt
    * src/lib/tests/CMakeLists.txt
    * src/lib/tests/PluginManagerTest.cpp

    add first Unittest for the PluginManager (which currently fails under 
    Windows)

2008-06-09  Patrick Spendrin    <ps_ml@gmx.de>

    * src/plugins/designer/marblewidget/CMakeLists.txt
    * src/plugins/designer/navigator/CMakeLists.txt
    * src/plugins/marble/compass/CMakeLists.txt
    * src/plugins/marble/overviewmap/CMakeLists.txt
    * src/plugins/marble/satellites/CMakeLists.txt
    * src/plugins/marble/stars/CMakeLists.txt
    * src/plugins/marble/test/CMakeLists.txt
    
    fix some issues in build system

2008-06-09  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.cpp

    Fix compilation on Linux.

2008-06-09  Patrick Spendrin    <ps_ml@gmx.de>

    * KmlAreaTagHandler.{h|cpp}
    * KmlColorModeTagHandler.{h|cpp}
    * KmlColorTagHandler.{h|cpp}
    * KmlCoordinatesTagHandler.{h|cpp}
    * KmlCountryNameCodeTagHandler.{h|cpp}
    * KmlCountrycodeTagHandler.{h|cpp}
    * KmlDescriptionTagHandler.{h|cpp}
    * KmlDocumentTagHandler.{h|cpp}
    * KmlFillTagHandler.{h|cpp}
    * KmlFolderTagHandler.{h|cpp}
    * KmlHeadingTagHandler.{h|cpp}
    * KmlHotSpotTagHandler.{h|cpp}
    * KmlHrefTagHandler.{h|cpp}
    * KmlIconStyleTagHandler.{h|cpp}
    * KmlIconTagHandler.{h|cpp}
    * KmlLabelStyleTagHandler.{h|cpp}
    * KmlLineStyleTagHandler.{h|cpp}
    * KmlMarblePlacemarkTagHandler.{h|cpp}
    * KmlNameTagHandler.{h|cpp}
    * KmlOpenTagHandler.{h|cpp}
    * KmlOutlineTagHandler.{h|cpp}
    * KmlPlacemarkTagHandler.{h|cpp}
    * KmlPointTagHandler.{h|cpp}
    * KmlPolyStyleTagHandler.{h|cpp}
    * KmlPopTagHandler.{h|cpp}
    * KmlRoleTagHandler.{h|cpp}
    * KmlSchemaTagHandler.{h|cpp}
    * KmlSimpleFieldTagHandler.{h|cpp}
    * KmlStyleTagHandler.{h|cpp}
    * KmlVisibilityTagHandler.{h|cpp}
    * KmlWidthTagHandler.{h|cpp}
    * Kml_scaleTagHandler.{h|cpp}
    * KmlElementDictionary.h
    
    renaming classes as well

2008-06-09  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/KmlFileViewItem.cpp:
    * src/lib/KMLFileViewItem.h:
    * src/lib/KmlFileViewItem.h:
    * src/lib/MarbleModel.cpp:
    * src/lib/CMakeLists.txt:
    * src/lib/KMLFileViewItem.cpp:

    Rename class KMLFileViewItem -> KmlFileViewItem.

2008-06-09  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/kml/KMLStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLRoleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLLabelStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLLineStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlAreaTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlWidthTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLFolderTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLElementDictionary.h:
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCountrycodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlRoleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLOpenTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlIconStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLCoordinatesTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLLineStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLOutlineTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDescriptionTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLWidthTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLElementDictionary.cpp:
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLVisibilityTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLIconTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.h:
    * src/lib/geodata/handlers/kml/Kml_scaleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLCountrycodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlCountryNameCodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLHeadingTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLSchemaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlRoleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLOpenTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLSimpleFieldTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLabelStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLNameTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLMarblePlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLColorTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLHrefTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KML_scaleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLDescriptionTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlElementDictionary.h:
    * src/lib/geodata/handlers/kml/KMLFillTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLSimpleFieldTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLIconTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLHotSpotTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLPopTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLPolyStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLCountryNameCodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLPlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLSchemaTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlOpenTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlLineStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOutlineTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlWidthTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLNameTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlElementDictionary.cpp:
    * src/lib/geodata/handlers/kml/KmlVisibilityTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLHrefTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountrycodeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLPointTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHeadingTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlSchemaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOpenTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlSimpleFieldTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLHotSpotTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLPolyStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlNameTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlMarblePlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLColorModeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLOutlineTagHandler.h:
    * src/lib/geodata/handlers/kml/Kml_scaleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDescriptionTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLPointTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlFillTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLVisibilityTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlSimpleFieldTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlIconTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHotSpotTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPopTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlPlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLHeadingTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlCountryNameCodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlSchemaTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLAreaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLFolderTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLColorTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlNameTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLFillTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHrefTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLPopTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlHotSpotTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPolyStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLAreaTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLIconStyleTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLWidthTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLCoordinatesTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlColorModeTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlOutlineTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPointTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlVisibilityTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLLabelStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLCountrycodeTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlHeadingTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLRoleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlAreaTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLIconStyleTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlFolderTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlColorTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLDescriptionTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KmlFillTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLMarblePlacemarkTagHandler.h:
    * src/lib/geodata/handlers/kml/KMLColorModeTagHandler.h:
    * src/lib/geodata/handlers/kml/KML_scaleTagHandler.h:
    * src/lib/geodata/handlers/kml/KmlPopTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLPlacemarkTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLCountryNameCodeTagHandler.cpp:
    * src/lib/geodata/parser/GeoDataParser.cpp:

    Rename files: KML* -> Kml*.

2008-06-09  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KMLAreaTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPointTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPopTagHandler.cpp
    
    minor fixes; make KMLPoint be applicable below non KML_Placemarks
    as well

2008-06-09  Inge Wallin  <inge@lysator.liu.se>

	* docs/Programmers-manual.txt: Added chapter about MarbleMap and
	GeoPainter

2008-06-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KMLCoordinatesTagHandler.cpp

    fix coordinates to use the correct unit

2008-06-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataFeature.h
    * src/lib/geodata/data/GeoDataPlacemark.h
    
    add function to check more easy if Feature is a placemark
    This has to be cleaned in future because a check with a
    cast is more convenient
    
2008-06-08  Inge Wallin  <inge@lysator.liu.se>

	* docs/Programmers-manual.txt: New file.  Chapter about
	MarbleWidget done, the rest remaining

2008-06-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataContainer.{h|cpp}

    add placemarks() function to return only the placemarks

2008-06-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/PlaceMarkContainer.{h|cpp}

    make PlaceMarkContainer copiable and
    add new ctor for QVector<GeoDataPlacemark*>

2008-06-08  Patrick Spendrin    <ps_ml@gmx.de>

    * data/placemarks/baseplacemarks.kml
    * data/placemarks/elevplacemarks.kml
    * data/placemarks/boundaryplacemarks.kml
    * data/placemarks/otherplacemarks.kml

    make the description be of type CDATA
    thus you can use html tags in there and the parser
    will read this part together
    
2008-06-08  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KMLAreaTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLColorModeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLColorTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLCoordinatesTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLCountryNameCodeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLCountrycodeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLDescriptionTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLFillTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLFolderTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLHeadingTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLHotSpotTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLHrefTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLIconStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLIconTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLLabelStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLLineStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLMarblePlacemarkTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLNameTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLOpenTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLOutlineTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPlacemarkTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPointTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPolyStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPopTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLRoleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLSchemaTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLSimpleFieldTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLVisibilityTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLWidthTagHandler.cpp
    * src/lib/geodata/handlers/kml/KML_scaleTagHandler.cpp
    
    wrap qDebug() in #ifdef DEBUG_TAGS

2008-06-06  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/kml/KMLRoleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLAreaTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLCountrycodeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPopTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLDescriptionTagHandler.cpp

    Fix compile errors.

2008-06-05  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/GeoDataTest.cpp
    
    make layout more distinguishable

2008-06-05  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/CMakeLists.txt
    
    define the compile flag KML_LAZY_IMP - this is used to get
    non-KML spec-tags the lazy way
    
    * src/lib/geodata/handlers/kml/KMLAreaTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLCountrycodeTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLCountryNameCodeTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLDescriptionTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLMarblePlacemarkTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLPopTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLRoleTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLSchemaTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLSimpleFieldTagHandler.{h|cpp}
    * src/lib/geodata/handlers/kml/KMLElementDictionary.{h|cpp}    
    
    add some more tags: area, countrycode, CountryNameCode, MarblePlacemark, 
    pop, role are custom tags used by Marble
    
2008-06-05  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/GeoDataTest.cpp
    
    add a msgHandler for debug messages (only Q_OS_WIN) + use a 
    QCoreApplication instead of QApplication. This ensures that
    debug messages can be read in the console on Windows.
    
2008-06-05  Patrick Spendrin    <ps_ml@gmx.de>

    * tools/asc2kml/asc2kml.cpp
    
    fix state tag - not needed in the schema definition
    
2008-06-05  Patrick Spendrin    <ps_ml@gmx.de>

    * data/placemarks/baseplacemarks.kml
    * data/placemarks/cityplacemarks.kml
    * data/placemarks/elevplacemarks.kml
    * data/placemarks/boundaryplacemarks.kml
    * data/placemarks/otherplacemarks.kml
    
    remove the state tag in the schema definition - state is part
    of the official KML spec
    
2008-06-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleWidget.cpp:
    * src/lib/gps/GmlSax.h:
    * src/lib/gps/GpxFile.h:
    * src/lib/gps/RouteContainer.h:
    * src/lib/gps/GpsTracking.cpp:
    * src/lib/gps/TrackContainer.h:
    * src/lib/gps/GpxSax.h:
    * src/lib/gps/GpxFileModel.cpp:
    * src/lib/gps/GpsTracking.h:
    * src/lib/gps/GpxFileModel.h:
    * src/lib/gps/GpsLayer.cpp:
    * src/lib/gps/GpsLayer.h:
    * src/lib/MarbleMap.cpp:
    * src/lib/AbstractLayer/AbstractLayerData.h:
    * src/lib/AbstractLayer/AbstractLayerData.cpp:
    * src/lib/MarbleModel.cpp:

    Fix includes.

2008-06-05  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/PlaceMarkLayout.cpp:

    Replace C style casts with qobject_cast.

2008-06-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/maps/earth/openstreetmap/openstreetmap.dgml:

    Add properties Places/places and Places/otherplaces in order to
    display KML placemarks in the OpenStreetMap view.

2008-06-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/PlaceMarkPainter.h:
    * src/lib/PlaceMarkPainter.cpp:

    Fix includes.

2008-06-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/RouteContainer.cpp:
    * src/lib/gps/Route.h:
    * src/lib/gps/TrackContainer.cpp:
    * src/lib/gps/Track.h:
    * src/lib/gps/WaypointContainer.cpp:
    * src/lib/gps/TrackPoint.cpp:
    * src/lib/gps/WaypointContainer.h:
    * src/lib/gps/TrackSegment.h:
    * src/lib/AbstractLayer/AbstractLayer.cpp:
    * src/lib/AbstractLayer/AbstractLayerContainer.cpp:
    * src/lib/AbstractLayer/AbstractLayer.h:
    * src/lib/AbstractLayer/AbstractLayerContainer.h:

    Mainly include fixes but some other cleanups also.

2008-06-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarblePhysics.cpp:
    * src/lib/MarblePhysics.h:

    Fix includes.

2008-06-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/Waypoint.cpp:
    * src/lib/gps/Waypoint.h:

    - Fix potential memory leaks and null pointer dereferences by converting
      pointer members to their base types.
    - Constify getters.

2008-06-04  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/GpsElement.cpp:
    * src/lib/gps/GpsElement.h:

    - Declare destructor virtual because there are derived classes.
    - Fix potential memory leaks and null pointer dereferences by converting
      pointer members to their base types.
    - Constify getters.

2008-06-02  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/VectorComposer.h:
    * src/lib/FileViewModel.h:
    * src/lib/PlaceMarkPainter.cpp:
    * src/lib/FileViewModel.cpp:
    * src/lib/XmlHandler.h:
    * src/lib/GpxFileViewItem.h:
    * src/lib/TextureColorizer.cpp:
    * src/lib/VisiblePlaceMark.cpp:
    * src/lib/ExtDateTime.cpp:
    * src/lib/MarbleModel.h:
    * src/lib/SunLocator.h:
    * src/lib/ClipPainter.h:
    * src/lib/TextureColorizer.h:
    * src/lib/VisiblePlaceMark.h:
    * src/lib/ExtDateTime.h:
    * src/lib/geodata/data/GeoDataPlacemark.cpp:
    * src/lib/geodata/data/GeoDataFeature.h:
    * src/lib/geodata/data/GeoDataFeature.cpp:

    Several small cleanups/fixes:
    - Fix includes.
    - More Q_DISABLE_COPY.
    - Add FIXMEs.
    - Add api docs.
    - Use qobject_cast instead of C style cast.
    - Remove empty inline destructor.
    - Not neccessary to declare default constructor as explicit.
    - Initialisation order for constructor init list.
    - Initialise base class objects in constructors.

2008-06-02  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/PluginManager.h:
    * src/lib/MarbleAboutDialog.h:
    * src/lib/MarbleWidgetPopupMenu.h:
    * src/lib/MarbleThemeSelectView.h:
    * src/lib/MarbleWidgetInputHandler.h:
    * src/lib/MapThemeManager.h:
    * src/lib/MergedLayerDecorator.h:
    * src/lib/AbstractScanlineTextureMapper.h:
    * src/lib/MarbleWidget.h:
    * src/lib/TileLoader.h:
    * src/lib/PlaceMarkContainer.h:
    * src/lib/MarblePhysics.h:
    * src/lib/MarbleControlBox.h:
    * src/lib/MarbleNavigator.h:
    * src/lib/MarbleDirs.h:
    * src/lib/PlaceMarkManager.h:
    * src/lib/TextureTile.h:
    * src/lib/GeoPolygon.h:
    * src/lib/PlaceMarkInfoDialog.h:
    * src/lib/PlaceMarkLayout.h:
    * src/lib/MarblePlacemarkModel.h:
    * src/lib/MarbleLegendBrowser.h:
    * src/lib/HttpFetchFile.h:
    * src/lib/MarbleAbstractFloatItem.h:
    * src/lib/SunControlWidget.h:
    * src/lib/MarbleSearchListView.h:
    * src/lib/GeoPainter.h:
    * src/lib/HttpDownloadManager.h:
    * src/lib/LayerManager.h:
    * src/lib/TinyWebBrowser.h:
    * src/lib/MeasureTool.h:
    * src/lib/MarbleMap.h:
    * src/lib/TileCreator.h:

    Use Q_DISABLE_COPY for classes that have got a pointer member
    or a container of pointers or do inherit from a container of
    pointers and do not have got a copy constructor and assignment
    operator.

2008-06-02  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleModel.cpp:

    Fix bug 162678.
    Connect PlacemarkSelectionModel and MarblePlacemarkModel to valid
    PlaceMarkLayout object, not to null pointer.

2008-06-01  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/lib/geoshape/GeoShape.cpp:
    - looks like I have to tell it explicitly to load the generic shape properties.
    - so now geoshapes are loaded again correctly

2008-06-01  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/plugins/marble/compass/CompassFloatItem.h:
    * src/plugins/marble/compass/CompassFloatItem.cpp:

    - Fix valgrind error: Conditional jump or move depends on uninitialised
      value(s) in CompassFloatItem::needsUpdate.
    - Use Q_DISABLE_COPY.
    - Add api doc for m_polarity.

2008-06-01  Inge Wallin  <inge@lysator.liu.se>

	Fix paintBase and setActiveArea for the Mercator projection.
	* src/lib/Projections/MercatorProjectionHelper.cpp (paintBase):
	Make it look like Equirect...:paintBase
	(setActiveRegion): same here
	* src/lib/Projections/EquirectProjectionHelper.cpp (paintBase): 
	Fix comments 
	
	Fix issue with paintBase
	* src/lib/Projections/EquirectProjectionHelper.cpp (paintBase):
	Bound the top and bottom values of the rectangle.

2008-06-01  Torsten Rahn  <rahn@kde.org> 

    * src/lib/TextureTile.cpp:
    * src/lib/TileLoader.cpp:

    - Taking cache contents into account when creating fallback
      tiles: preparation for threaded loading

2008-06-01  Inge Wallin  <inge@lysator.liu.se>

	Fix some issues with the active area in the image.
	* src/lib/Projections/EquirectProjectionHelper.cpp (setActiveRegion):
	Bound the active area to the viewport.

	* src/lib/Projections/SphericalProjectionHelper.cpp (setActiveRegion):
	Comment the code better and use mapCoversViewport()

2008-05-31  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/kml
    * src/lib/kml/KMLDocumentParser.cpp
    * src/lib/kml/KMLContainerParser.cpp
    * src/lib/kml/KMLFeature.h
    * src/lib/kml/KMLStyle.cpp
    * src/lib/kml/KMLPlaceMark.h
    * src/lib/kml/KMLColorStyle.h
    * src/lib/kml/KMLLabelStyle.h
    * src/lib/kml/KMLObject.cpp
    * src/lib/kml/KMLStyleSelector.h
    * src/lib/kml/KMLPointParser.h
    * src/lib/kml/KMLFeatureParser.h
    * src/lib/kml/KMLStyleParser.cpp
    * src/lib/kml/KMLIconStyle.h
    * src/lib/kml/KMLFolder.h
    * src/lib/kml/KMLPlaceMarkParser.h
    * src/lib/kml/KMLColorStyleParser.h
    * src/lib/kml/KMLLabelStyleParser.h
    * src/lib/kml/KMLDocument.h
    * src/lib/kml/KMLObjectParser.cpp
    * src/lib/kml/KMLContainer.h
    * src/lib/kml/KMLFeature.cpp
    * src/lib/kml/KMLIconStyleParser.h
    * src/lib/kml/KMLColorStyle.cpp
    * src/lib/kml/KMLPlaceMark.cpp
    * src/lib/kml/KMLDocumentParser.h
    * src/lib/kml/KMLLabelStyle.cpp
    * src/lib/kml/KMLStyleSelector.cpp
    * src/lib/kml/KMLContainerParser.h
    * src/lib/kml/KMLStyle.h
    * src/lib/kml/KMLPointParser.cpp
    * src/lib/kml/Serializable.h
    * src/lib/kml/KMLFeatureParser.cpp
    * src/lib/kml/KMLIconStyle.cpp
    * src/lib/kml/KMLObject.h
    * src/lib/kml/KMLFolder.cpp
    * src/lib/kml/KMLColorStyleParser.cpp
    * src/lib/kml/KMLPlaceMarkParser.cpp
    * src/lib/kml/KMLLabelStyleParser.cpp
    * src/lib/kml/KMLDocument.cpp
    * src/lib/kml/KMLContainer.cpp
    * src/lib/kml/KMLStyleParser.h
    * src/lib/kml/KMLIconStyleParser.cpp
    * src/lib/kml/KMLObjectParser.h

    Remove unused code.

2008-05-31  Torsten Rahn  <rahn@kde.org> 

    * src/lib/TextureTile.cpp:

    - TextureTile cleanup and preparation for threaded loading

2008-05-31  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/lib/CMakeList.txt:
    - enabled geoshape again
    
    * src/lib/geoshape/CMakeList.txt:
    - added missing include directory
    
    * src/lib/geoshape/GeoShape.cpp:
    - changed #include lines to use short form without paths
    
2008-05-31  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/MercatorScanlineTextureMapper.{h,cpp}: New files
	* src/lib/MarbleModel.cpp: Include MercatorScanlineTextureMapper.h
	(setupTextureMapper): Create a  MercatorScanlineTextureMapper
	* src/lib/CMakeLists.txt: Include MercatorScanlineTextureMapper.cpp

2008-05-31  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataLatLonAltBox.cpp:
    * src/lib/geodata/data/GeoDataLatLonAltBox.h:

    - Implement copy constructor because GeoDataLatLonBox and
      GeoDataLatLonAltBox have got assignment operators.
    - Initialise base class objects in constructors.

2008-05-31  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataLineString.cpp:
    * src/lib/geodata/data/GeoDataLineString.h:

    - Implement copy constructor and assignment operator for class
      GeoDataLineString because they are used in this d-pointerfied class.
    - Initialise base class objects in constructor.

2008-05-31  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataFeature.h:
    * src/lib/geodata/data/GeoDataLineString.h:
    * src/lib/geodata/data/GeoDataLatLonAltBox.h:
    * src/lib/geodata/scene/GeoSceneZoom.h:
    * src/lib/geodata/scene/GeoSceneProperty.h:
    * src/lib/geodata/scene/GeoSceneIcon.h:
    * src/lib/geodata/scene/GeoSceneGroup.h:
    * src/lib/geodata/scene/GeoSceneItem.h:
    * src/lib/geodata/scene/GeoSceneLegend.h:
    * src/lib/geodata/scene/GeoSceneMapTheme.h:
    * src/lib/geodata/scene/GeoSceneSettings.h:
    * src/lib/geodata/scene/GeoSceneHead.h:
    * src/lib/geodata/scene/GeoSceneSection.h:
    * src/lib/geodata/scene/GeoSceneLayer.h:
    * src/lib/geodata/scene/GeoSceneMap.h:
    * src/lib/geodata/scene/GeoSceneDocument.h:

    - Use Q_DISABLE_COPY for classes that have got a pointer member
      or a container of pointers.
    - Add FIXMEs for Q_DISABLE_COPY, implementing copy constructor
      and d-pointerfication.

2008-05-31  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataLineStyle.h:
    * src/lib/geodata/data/GeoDataPolyStyle.h:

    Declare constructors explicit.

2008-05-31  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataPoint.cpp:

    - Initialise base class object in copy constructor.
    - Remove empty destructor of GeoDataPointPrivate.
    - Add FIXME for assignment operator.

2008-05-30  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataObject.h:
    * src/lib/geodata/data/GeoDataObject.cpp:

    - Define copy constructor and assignment operator for class GeoDataObject,
      because it has got a d-pointer.
    - Initialise base class objects in constructor.
    - Remove empty destructor of GeoDataObjectPrivate.

2008-05-29  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MeasureTool.h:
    * src/lib/MeasureTool.cpp:

    Fix includes.

2008-05-29  Inge Wallin  <inge@lysator.liu.se>

	Move the MapQuality measure from ViewParams to ViewportParams.
	Some cleaning also snuck in.
	* src/lib/ViewParams.{h,cpp}: Remove MapQuality
	(mapQuality, setMapQuality): removed
	* src/lib/ViewportParams.{h,cpp}: Add MapQuality
	(mapQuality, setMapQuality): added
	* src/lib/VectorMap.{h,cpp} (drawMap): Add MapQuality
	* src/lib/GeoPainter.{h,cpp}: Add MapQuality to the object
	* src/lib/MarbleWidget.cpp: Use new API of the GeoPainter
	cleaning
	* src/lib/MarbleMap.cpp: Use new API
	* src/lib/MarbleModel.cpp: Use new API
	* src/lib/VectorComposer.cpp: Use new API of VectorMap
	* src/lib/SphericalScanlineTextureMapper.cpp: cleaning
	* src/lib/EquirectScanlineTextureMapper.cpp: cleaning
	* src/lib/MarbleAbstractFloatItem.cpp
	* src/CMakeLists.txt: Disable the geoshape since it uses installed
	headers and not headers in the source tree.  If I didn't do this,
	it would break the compile. Alas.
	* src/geoshape/GeoShape.cpp (paint): Use new GeoPainter API.
    
2008-05-29  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataLatLonAltBox.h
    
    use export macro for friend defined operator
    
2008-05-28  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KMLFolderTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLNameTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLOpenTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLVisibilityTagHandler.cpp
    - src/lib/geodata/handlers/kml/KMLElementDefines.h
    
    remove the helper construction with the defines for abstract elements
    and use the casting instead.
    
2008-05-28  Patrick Spendrin    <ps_ml@gmx.de>

    * src/CMakeLists.txt
    * src/lib/CMakeLists.txt
    * src/tilecreator/CMakeLists.tx
    
    fix QTONLY cmake errors when building with cmake version 2.6
    
2008-05-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KMLVisibilityTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLOpenTagHandler{.h,.cpp}
    
    add those two tags
    
    * src/lib/geodata/handlers/kml/KMLElementDefines.h
    
    add file where the definitions for abstract Elements will be placed
    
    * src/lib/geodata/handlers/kml/KMLColorModeTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLColorTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLCoordinatesTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLFillTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLFolderTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLHeadingTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLHotSpotTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLHrefTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLIconStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLIconTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLLabelStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLLineStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLNameTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLOutlineTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPlacemarkTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPointTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLPolyStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLStyleTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLWidthTagHandler.cpp
    * src/lib/geodata/handlers/kml/KML_scaleTagHandler.cpp
    
    fixing debug output so that every tag gets mentioned
    

2008-05-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataContainer{.h,.cpp}
    
    add new features method to handle features
    
    * src/lib/geodata/GeoDataTest.cpp
    * src/lib/geodata/handlers/kml/KMLNameTagHandler{.h,.cpp}
    
    read name Tag and give out in GeoDataTest
    
2008-05-27  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/geodata/CMakeLists.txt
    
    use FILE( GLOB ) to collect all the files
    that adds new files right away
    
2008-05-27  Inge Wallin  <inge@lysator.liu.se>

	Make mercator projection work somewhat.
	* src/lib/VectorMap.cpp (createFromPntMap): Handle Mercator case
	(mercatorCreateFromPntMap): New function
	(createPolyLine):           Handle Mercator case.
	(mercatorCreatePolyLine):   New function

2008-05-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp (loadRawTile)

    Minor fix for expiration handling.
    Set creation time stamp of tile to last modification time stamp
    of the corresponding file.

2008-05-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp (loadRawTile)

    Replace break statement by check for tileFound to fix
    downloading of expired tiles.

2008-05-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpFetchFile.cpp (executeJob):
    Do not quit if the file is already there but update it.
    * src/lib/TextureTile.cpp:
    * src/lib/TextureTile.h:
    Add member variable m_created which holds the tile creation time stamp.
    (loadRawTile): Check if existing tiles are expired.
    * src/lib/TileLoader.cpp (loadTile):
    Check if tile from cache is expired.
    Save call to QHash::contains in the time critical section, this gives
    me a small improvement with --timedemo: 12.5 fps -> 12.7 fps.
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.cpp:
    Fix parsing of expire attribut. Default to MAX_INT.
    * src/lib/geodata/scene/GeoSceneLayer.cpp:
    Set default for m_expire to MAX_INT.
    * data/maps/earth/openstreetmap/openstreetmap.dgml:
    Set texture/@expire to 604800 seconds (7 days).

    - Fix expire handling.
    - Small --timedemo improvement.

2008-05-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/tilecreator/CMakeLists.txt: Add qt4_automoc.

    Fix build from scratch.

2008-05-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp (constructor):

    Save call to QImage default and copy constructor.

2008-05-26  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/lib/geodata/data/GeoDataColorStyle.h:
    * src/lib/geodata/data/GeoDataContainer.h:
    * src/lib/geodata/data/GeoDataDocument.h:
    * src/lib/geodata/data/GeoDataFeature.h:
    * src/lib/geodata/data/GeoDataHotSpot.h:
    * src/lib/geodata/data/GeoDataIconStyle.h:
    * src/lib/geodata/data/GeoDataLabelStyle.h:
    * src/lib/geodata/data/GeoDataLineStyle.h:
    * src/lib/geodata/data/GeoDataPlacemark.h:
    * src/lib/geodata/data/GeoDataPolyStyle.h:
    * src/lib/geodata/data/GeoDataStyle.h:
    * src/lib/geodata/data/GeoDataStyleSelector.h:
    Apply the Q_DISABLE_COPY() patch to these d-pointerified classes

2008-05-24  Patrick Spendrin    <ps_ml@gmx.de>

    * tools/asc2kml.cpp
    
    make output standard compliant to KML 2.1
    
2008-05-24  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt
    * src/CMakeLists.txt
    * src/geoshape/CMakeLists.txt
    
    use new FindKOfficeLibs.cmake file instead before building the geoshape.
    
2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileCache.cpp
    * src/lib/TileLoader.cpp
    * src/lib/TileCache.h
    * src/lib/CMakeLists.txt

    Remove class TileCache since it was only a wrapper around QCache.

2008-05-24  Inge Wallin  <inge@lysator.liu.se>

	Move globeCoversImage to the projection classes and call it
	mapCoversViewport.
	* src/lib/Projections/AbstractProjection.h,
	* src/lib/Projections/SphericalProjection.{h,cpp},
	* src/lib/Projections/EquirectProjection.{h,cpp},
	* src/lib/Projections/MercatorProjection.{h,cpp}:
	(mapCoversViewport): New function.
	* src/lib/ViewportParams.{h,cpp} (mapCoversViewport): new function
	* src/lib/MarbleMap.{h,cpp} (globeCoversImage): 
	   - Renamed into mapCoversViewport
	   - Call viewport->mapCoversViewport()
	* src/lib/MarbleWidget.cpp: Call m_map->mapCoversViewport().
	
2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/Track.h:
    * src/lib/AbstractLayer/AbstractLayerInterface.h:

    Fix includes.

2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/TrackPoint.h:
    * src/lib/AbstractLayer/AbstractLayerData.h:
    * src/lib/AbstractLayer/AbstractLayerContainer.h:

    Declare constructors explicit.

2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.h

    Small optimisation.
    Replace constant trigonometric expressions with the actual values.

2008-05-24  Torsten Rahn  <rahn@kde.org> 

    * src/lib/EquirectScanlineTextureMapper.cpp:

    - Add bilinear filtering here as well as pointed out by jm

2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/ViewParams.h:
    * src/lib/ViewportParams.h:

    Fix d-pointerfied classes by disallowing copies.
    Thanks to Pino Toscano for pointing this out.

2008-05-24  Torsten Rahn  <rahn@kde.org> 

    * data/maps/earth/openstreetmap/0/0/0.png:

    - Given that the previous OSM tile shipped with Marble was
      licensed under the Creative Commons Attribution-ShareAlike 2.0 license
      and given that Debian doesn't approve this license as a 
      "free" license we replace the very low resolution tile by a simple blue
      square for now. Later on we'll add a public domain map in the style
      of the original OSM tile.

2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MeasureTool.cpp:
    * src/lib/MarbleWidget.cpp:
    * src/lib/Projections/MercatorProjectionHelper.cpp:
    * src/lib/PlaceMarkPainter.cpp:
    * src/lib/MarbleMap.cpp:
    * src/lib/VectorMap.cpp:
    * src/lib/ViewportParams.h:
    * src/lib/ViewportParams.cpp:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.cpp:
    * src/plugins/marble/compass/CompassFloatItem.cpp:

    - Fix includes.
    - Add my copyright notice to ViewportParams.

2008-05-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/ViewportParams.h:
    * src/lib/ViewportParams.cpp:

    D-pointerfy class ViewportParams.

2008-05-23  Torsten Rahn  <rahn@kde.org> 

    * TileLoader.cpp:

    This fixes the most obvious issues with the tile downloading.
    The only real other issue left is speed: We need to 
    improve the HttpDownloadManager to have better algorithms
    to better prioritize the currently needed tiles.


    - Fix what is probably Marble's most hated bug:
      Tiles being "stuck". The culprit: when a new tile was 
      successfully downloaded and the temporary "replacement" tile 
      was still in the cache, that replacement tile should have 
      gotten removed from the cache to make way for the real one.

    * HttpDownloadManager.cpp:

    - Increase number of activated downloads to hopefully 
      get the speed a little bit up

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleMap.cpp:
    * src/lib/MarbleModel.cpp:
    * src/lib/ViewportParams.h:
    * src/lib/ViewportParams.cpp:

    Move m_boundingBox, the only public member variable of class
    ViewportParams to the private section.
    This is needed for d-pointerfication of class ViewportParams.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/Route.cpp:
    * src/lib/gps/GpxFile.cpp:
    * src/lib/gps/RouteContainer.cpp:
    * src/lib/gps/Route.h:
    * src/lib/gps/GpxFile.h:
    * src/lib/gps/Track.cpp:
    * src/lib/gps/RouteContainer.h:
    * src/lib/gps/TrackContainer.cpp:
    * src/lib/gps/Track.h:
    * src/lib/gps/TrackContainer.h:
    * src/lib/gps/WaypointContainer.cpp:
    * src/lib/gps/WaypointContainer.h:
    * src/lib/gps/GpsLayer.cpp:
    * src/lib/gps/TrackSegment.cpp:
    * src/lib/gps/GpsLayer.h:
    * src/lib/gps/TrackSegment.h:
    * src/lib/AbstractLayer/AbstractLayerData.h:
    * src/lib/AbstractLayer/AbstractLayer.cpp:
    * src/lib/AbstractLayer/AbstractLayerContainer.cpp:
    * src/lib/AbstractLayer/AbstractLayer.h:
    * src/lib/AbstractLayer/AbstractLayerInterface.h:
    * src/lib/AbstractLayer/AbstractLayerContainer.h:
    * src/lib/AbstractLayer/AbstractLayerData.cpp:

    Change parameter type of draw and paintLayer methods from
    "BoundingBox &" to "const BoundingBox &".
    This is needed for d-pointerfication of class ViewportParams.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/BoundingBox.h:
    * src/lib/BoundingBox.cpp:

    Declare methods const.
    This is needed for d-pointerfication of class ViewportParams.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleWidget.cpp:
    * src/lib/SphericalScanlineTextureMapper.cpp:
    * src/lib/Projections/SphericalProjection.h:
    * src/lib/PlaceMarkLayout.cpp:
    * src/lib/PlaceMarkPainter.cpp:
    * src/lib/MarbleMap.cpp:
    * src/lib/TextureColorizer.cpp:
    * src/lib/ViewParams.cpp:
    * src/lib/ViewParams.h:
    * src/lib/MarbleModel.cpp:
    * src/lib/VectorComposer.cpp:
    * src/lib/GridMap.cpp:

    Fix includes.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/ViewParams.cpp:
    * src/lib/ViewParams.h:

    D-pointerfy class ViewParams.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/SphericalScanlineTextureMapper.cpp:
    * src/lib/PlaceMarkLayout.cpp:
    * src/lib/MarbleMap.cpp:
    * src/lib/EquirectScanlineTextureMapper.cpp:
    * src/lib/TextureColorizer.cpp:
    * src/lib/ViewParams.cpp:
    * src/lib/ViewParams.h:
    * src/lib/MarbleModel.cpp:
    * src/lib/VectorComposer.cpp:

    Declare member variables of class ViewParams private in order
    to prepare d-pointerfication.

2008-05-23  Inge Wallin  <inge@lysator.liu.se>

	Move handling of the active region to the projection helpers.
	* Projections/AbstractProjectionHelper.{h,cpp},
	* Projections/SphericalProjectionHelper.{h,cpp},
	* Projections/MercatorProjectionHelper.{h,cpp},
	* Projections/EquirectProjectionHelper.{h,cpp}:
	(activeRegion): moved from MarbleWidget
	(setActiveRegion): moved from MarbleWidget
	* Projections/AbstractProjectionHelper_p.h: new file
	* src/lib/MarbleWidget.cpp (activeRegion): call function in the
	projection helpers
	(setActiveRegion): call function in the projection helpers 

	Fix a bug that makes marble loop forever after a zoom using the
	scroll wheel
	* src/lib/MarbleWidgetInputHandler.cpp (restoreViewContext): Stop
	the timer when we redraw with high quality.  It seems the timer
	otherwise refires every X milliseconds.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * TODO:

    Add expiration and search for OpenStreetMap.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoader.cpp (baseTilesAvailable): fix missing break by
    putting the noerr condition into the for statement.
    (maxCompleteTileLevel): rework likewise.

    Fix missing break statement in TileLoader::baseTilesAvailable.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp:

    Fix includes.

2008-05-22  Torsten Rahn  <rahn@kde.org> 

    * src/lib/AbstractScanlineTextureMapper.{cpp,h}:
    * src/lib/SphericalScanlineTextureMapper.cpp:

    - For speed reasons we somewhat duplicate the code:
        - Keep integer based rendering for high performance
          rendering.
        - Double based rendering is needed to be able to 
          do the bilinear interpolation.

        Not pretty but efficient ...

    * src/lib/CrossHairFloatItem.cpp:

    - Enforce the cross hair to be aliased.

2008-05-23  Patrick Spendrin    <ps_ml@gmx.de>

    * data/placemarks/baseplacemarks.kml:
    * data/placemarks/cityplacemarks.kml:
    * data/placemarks/elevplacemarks.kml:
    * data/placemarks/boundaryplacemarks.kml:
    * data/placemarks/otherplacemarks.kml:
    * data/placemarks/baseplacemarks.cache:
    * data/placemarks/cityplacemarks.cache:
    * data/placemarks/elevplacemarks.cache:
    * data/placemarks/boundaryplacemarks.cache:
    * data/placemarks/otherplacemarks.cache:
    
    make the kml files standard compliant ( to version 2.1 )
    http://earth.google.de/kml/kml_tags_21.html
    regenerate the cache files
    
2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * TODO:

    Add my name to the TODO file and mark two items as done.

2008-05-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * TODO:

    Convert tabs to spaces.

2008-05-22  Torsten Rahn  <rahn@kde.org> 

    * src/lib/AbstractScanlineTextureMapper.{cpp,h}:
    * src/lib/SphericalScanlineTextureMapper.{cpp,h}:

    -.Improve speed for the subpixel interpolated rendering.
    - Now we need to speed up the non-subpixel-interpolated case again ...

2008-05-22  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/lib/MarbleControlBox.cpp

    - fixed crash when ControlBox is used without a MarbleWidget

2008-05-22  Torsten Rahn  <rahn@kde.org> 

    * data/credits_data.html:

    - Give a minimum of attribution to OSM (more prominent 
      attribution yet to come).

2008-05-22  Patrick Spendrin  <ps_ml@gmx.de>

    * src/lib/geodata/handlers/kml/KMLColorModeTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLColorTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLCoordinatesTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLElementDictionary{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLFillTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLFolderTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLHeadingTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLHotSpotTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLHrefTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLIconStyleTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLIconTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLLabelStyleTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLLineStyleTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLOutlineTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLPlacemarkTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLPointTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLPolyStyleTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLStyleTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KMLWidthTagHandler{.h,.cpp}
    * src/lib/geodata/handlers/kml/KML_scaleTagHandler{.h,.cpp}
    * src/lib/geodata/GeoDataTest.cpp
    * src/lib/geodata/CMakeLists.txt
    
    - add new KML tag handlers (first bunch)

2008-05-22  Simon Schmeisser <mail_to_wrt@gmx.de>

    * src/lib/ViewParams.h

    - added missing export

    * src/geoshape/CMakeLists.txt

    - enabled linking and installing ... it now works

2008-05-22  Torsten Rahn  <rahn@kde.org> 

    * src/lib/AbstractScanlineTextureMapper.{cpp,h}:
    * src/lib/SphericalScanlineTextureMapper.cpp:

    - Start of adding bilinear pixel interpolation to 
      improve image quality. Doesn't work yet.

2008-05-22  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoader.cpp (setTextureLayer):

    Small cleanup.
    Do not allocate tile dynamically since it is a local variable.

2008-05-22  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/SphericalScanlineTextureMapper.cpp: (mapTexture)

    Small cleanup.
    Use dedicated Quaternion constructor instead of default constructor
    and call to set method.

2008-05-22  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp: (constructor)

    Check tileLoader and tileLoader->textureLayer() pointers before
    accessing them. This hopefully fixes a bug reported by
    Henry de Valence.

2008-05-22  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/Projections/EquirectProjection.cpp: Clean up
	(screenCoordinates): Don't always return true.
	
	Cleaning: m_parent is not a parent, so call it something else.
	* src/lib/MarbleWidget.cpp (class MarbleWidgetPrivate::m_parent):
	renamed into m_widget

2008-05-21  Simon Schmeisser  <mail_to_wrt@gmx.de>

    * src/geoshape/GeoShapeFactory.cpp

    - removed some obsolete code, fixed includes a bit

    * src/geoshape/GeoShape.cpp

    - updated to match current state of the api
    - fixed some includes
	
    *  src/geoshape/CMakeLists.txt

    - includes and link dirs are now set correctly
    - linking is disabled at the moment because of linker error

    * src/CMakeLists.txt

    - enabled building the flake shape

2008-05-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * marble/src/lib/TinyWebBrowser.cpp (loadResource)

    Krazy fix, "/" -> '/'.

2008-05-21  Torsten Rahn  <rahn@kde.org> 

    * TextureTile.cpp:
    * GeoPainter.{cpp,h}:

    - Don't crash when zooming in very fast or 
      when typing something into the search field on 
      high zoom.

    * src/plugins/marble/overviewmap/MarbleOverviewMap.cpp:

    - Add center indicator


2008-05-21  Torsten Rahn  <rahn@kde.org> 

    * src/lib/SphericalScanlineTextureMapper.cpp:

    - Don't interpolate during TextureMapping at all 
      if we select Print Quality for still map rendering.

2008-05-21  Torsten Rahn  <rahn@kde.org> 

    * src/lib/TextureTile.{cpp,h}:

    - Fixing two bugs with one patch:

    - The Smear effect which was due to the 1 bit
      images being read via the jumptable8.
    - The slow timedemo benchmark due to 
      the Atlas View using the pixelValue method.

    This fixes the performance entirely ( it's back to 
    14 fps for me ).

2008-05-21  Patrick Spendrin  <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataPolyStyle{.h,.cpp}
    * src/lib/geodata/CMakeLists.txt
    
    Add PolyStyle
    
2008-05-21  Patrick Spendrin  <ps_ml@gmx.de>

    * src/lib/geodata/CMakeLists.txt
    
    Add LineStyle to CMakeLists.txt
    
2008-05-21  Patrick Spendrin  <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataLineStyle{.h,.cpp}
    
    Add LineStyle using LabelStyle as example
    
2008-05-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/maps/earth/openstreetmap/openstreetmap.dgml

    Set minimum zoom value to 900.

2008-05-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/FileStoragePolicy.cpp (updateFile)

    Remove broken conversion code.

2008-05-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp (loadRawTile)

    Fix tile loading, do not use relfilename which might
    have an old value.

2008-05-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/FileStoragePolicy.cpp (updateFile)

    - Rename ptr -> convertedData.
    - Fix white space.

2008-05-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/FileStoragePolicy.cpp (updateFile)

    Convert images with format QImage::Format_Indexed8 to QImage::Format_RGB32.

2008-05-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/AbstractScanlineTextureMapper.h

    Fix projection for OpenStreetMap tiles.

2008-05-20  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MergedLayerDecorator.h
    * src/lib/HttpFetchFile.cpp
    * src/lib/MergedLayerDecorator.cpp
    * src/lib/TextureTile.cpp
    * src/lib/TextureTile.h
    * src/lib/TinyWebBrowser.cpp
    * src/lib/TileLoader.cpp
    * src/lib/HttpFetchFile.h
    * src/lib/HttpDownloadManager.cpp
    * src/lib/MarbleModel.cpp
    * src/lib/HttpDownloadManager.h

    Fix HttpDownloadManager for OpenStreetMap theme.

2008-05-19  Torsten Rahn  <rahn@kde.org> 

    

2008-05-20  Patrick Spendrin <ps_ml@gmx.de>

    * src/lib/geodata/data/GeoDataPlacemark.{h,cpp}:
    
    add setter Method for GeoDataPoint - this is needed by KML parsing.
    
2008-05-20  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/lib/MarbleModel.{h,cpp}:
    * src/lib/SunLocator.{h,cpp}:
    - removed instance of ExtDateTime from SunLocator 
    - ExtDateTime is now instantiased in MarbleModel which
    should provide a Marble-wide access to the extended date 
    and time class.

2008-05-19  Torsten Rahn  <rahn@kde.org> 

    Fixing the regression that made tile updates fail.

    * src/lib/MergedLayerDecorator.cpp:
    * src/lib/TileLoader.cpp:
    * src/lib/HttpDownloadManager.cpp:
    * src/lib/MarbleModel.cpp:

    - Fixing missing rawloadTile execution after
      image download. 
    - Minor cleaning ...

2008-05-19  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoaderHelper.cpp

    Fix function downloadUrl: Do not ignore the value of the
    path attribute.

2008-05-19  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/scene/GeoSceneTexture.cpp

    Set m_downloadUrl to "http://download.kde.org/apps/marble/"
    as default, so we do not need to edit all .dgml files.

2008-05-19  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoaderHelper.h
    * src/lib/TileLoaderHelper.cpp

    Part 14 of groundwork for OpenStreetMap texture tiles.
    Add function downloadUrl to TileLoaderHelper which makes use of
    the new downloadUrl element.

2008-05-19  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.cpp
    Add dgmlTag_DownloadUrl.

    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.cpp
    Add dgmlAttr_host, dgmlAttr_password, dgmlAttr_path,
    dgmlAttr_port, dgmlAttr_protocol and dgmlAttr_user.

    * src/lib/geodata/handlers/dgml/DgmlDownloadUrlTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlDownloadUrlTagHandler.h
    Add class DgmlDownloadUrlTagHandler.

    * src/lib/geodata/scene/GeoSceneTexture.cpp
    * src/lib/geodata/scene/GeoSceneTexture.h
    Add member variable m_downloadUrl and get+set method.

    * src/lib/geodata/CMakeLists.txt
    Add DgmlDownloadUrlTagHandler.cpp.

    * docs/dgml2.dtd
    Add element downloadUrl.

    * data/maps/earth/openstreetmap/openstreetmap.dgml
    Add downloadUrl.

    Part 13 of groundwork for OpenStreetMap texture tiles.
    DGML: Add sub element "downloadUrl" to "texture". This is needed
    because we want do download the OpenStreetMap tiles from the their
    server and not copy them to download.kde.org.

2008-05-19  Torsten Rahn  <rahn@kde.org> 

    - Per aspera ad astra! Now I just need to take the earth's
      orbit and spinning into account and we can drop KStars 
      in favour of Marble ;-)

    * src/plugins/marble/stars/MarbleStarsPlugin.{cpp,h}:
    * src/plugins/marble/stars/CMakeLists.txt:
    * src/plugins/marble/CMakeLists.txt:

    - Adding Stars plugin to Marble. Still needs polishing and 
      adjustment for time.

    * src/lib/Projections/AbstractProjection.h:
    * src/lib/Projections/SphericalProjection.{cpp,h}:
    * src/lib/Projections/MercatorProjection.{cpp,h}:
    * src/lib/Projections/EquirectProjection.{cpp,h}:

    - Removing obsolete globeCoversMap() method that has been 
      moved to the viewport and continues its life as 
      globeCoversViewport();

    * src/lib/MarbleLayerInterface.h:
    * src/lib/GeoPainter.{cpp,h}:
    * src/lib/LayerManager.cpp:
    * src/plugins/marble/CMakeLists.txt:
    * data/CMakeLists.txt:

    - Fixing a few things for the stars plugin ...

    * data/stars:
    * tools/stars/catalog.dat.gz:
    * tools/stars/stars.{dat,pro,cpp}:
    * tools/stars/notes.dat.gz:

    - Add public domain BSC5 catalogue and a tool to convert it 
      to some simple format for Marble

    * tools/texissor:
    * tools/texissor/texissor.{cpp, pro}:

    - Removed ancient code

2008-05-19  Torsten Rahn  <rahn@kde.org>

    - Installing Marble Plugins (hopefully) into the right places.

    * src/lib/MarbleDirs.{cpp,h}:

    - Complementing the existing data paths by introducing the plugin specific paths:

    static QString pluginPath( const QString& relativePath );
    static QStringList pluginEntryList( const QString& relativePath, QDir::Filters filters = QDir::NoFilter  );
    static QString pluginSystemPath(); 
    static QString pluginLocalPath(); 
    static QString marblePluginPath();
    static void setMarblePluginPath( const QString& adaptedPath);

    * src/lib/PluginManager.cpp:

    - Making PluginManager look into the right places.
    - Debug output

    * src/plugins/marble/test/CMakeLists.txt:
    * src/plugins/marble/overviewmap/CMakeLists.txt:
    * src/plugins/marble/compass/CMakeLists.txt:
    * src/plugins/marble/satellites/CMakeLists.txt:
    * CMakeLists.txt:

    - Installing the plugins into the right places
    - Debug output

2008-05-18  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/SphericalScanlineTextureMapper.h
    * src/lib/SphericalScanlineTextureMapper.cpp

    Small cleanup in SphericalScanlineTextureMapper.
    Remove member variables m_x, m_y, m_qr, m_qx, m_qy m_qz and
    m_qpos and make them local variables in method mapTexture.

2008-05-18  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/SphericalScanlineTextureMapper.cpp
    * src/lib/AbstractScanlineTextureMapper.h

    Part 12 of groundwork for OpenStreetMap texture tiles.
    Replace conversion factors m_rad2PixelX and m_rad2PixelY with
    inline methods rad2PixelX and rad2PixelY in order to support
    Mercator projection later.
    marble --timedemo shows no regression so far.

2008-05-18  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.h
    * src/lib/AbstractScanlineTextureMapper.cpp
    Add member variables m_globalWidth and m_globalHeight and
    corresponding access methods.
    * src/lib/SphericalScanlineTextureMapper.cpp
    * src/lib/EquirectScanlineTextureMapper.cpp

    Replace m_tileLoader->globalWidth( m_tileLevel ) and
    m_tileLoader->globalHeight( m_tileLevel ) with
    m_globalWidth and m_globalHeight.

2008-05-18  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.h

    Small cleanup.
    - Move definitions of inline methods out of class body.
    - Declare interlaced() const.

2008-05-18  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    (constructor): Move initialisations to ctor init list.

    Small cleanup.

2008-05-18  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    (selectTileLevel): since this method calls tileLevelInit,
    set m_tileLevel there.
    (tileLevelInit): set m_tileLevel here.

    Small cleanup.

2008-05-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.cpp:
    - Fixing Proxy support for "empty" default value "http://"

    Getting ready for string freeze:

    * src/lib/CMakeLists.txt:
    * src/marble_part.cpp:

    - Adding Plugin support page right in time for string freeze.
      It doesn't do anything yet.

    * src/marble_part.rc:
    - Adding "&Info Boxes" item ( I think that for the user this 
      term is better suited than "float items" and I'm really not
      keen on reading the clunky translations that translators 
      might come up with for "float items".
  
2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.{h,cpp}:
    (dgmlTag_Projection): new constant.
    * src/lib/geodata/handlers/dgml/DgmlProjectionTagHandler.{h,cpp}:
    new class DgmlProjectionTagHandler.
    * src/lib/geodata/scene/GeoSceneTexture.{h,cpp}:
    (Projection): new enum.
    (projection): new method.
    (setProjection): new method.
    (m_projection): new member variable.
    * src/lib/geodata/CMakeLists.txt
    (geodata_handlers_dgml_SRCS): add DgmlProjectionTagHandler.cpp.
    * docs/dgml2.dtd
    (projection): new element.
    (texture): add optional projection.
    * data/maps/earth/openstreetmap/openstreetmap.dgml:
    add projection element.

    Part 11 of groundwork for OpenStreetMap texture tiles.
    DGML: Add sub element "projection" to "texture". This is needed
    because the OpenStreetMap tiles use Mercator projection while
    the existing themes use Equirectangular projection.

2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.h
    * src/lib/MarbleMap.cpp

    Fix includes.

2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/SphericalScanlineTextureMapper.cpp
    * src/lib/AbstractScanlineTextureMapper.h
    * src/lib/EquirectScanlineTextureMapper.cpp
    * src/lib/AbstractLayer/AbstractLayer.h

    Class AbstractLayer is obsolete, so do not inherit
    AbstractScanlineTextureMapper from it.

2008-05-17  Inge Wallin  <inge@lysator.liu.se>

	Move files having to do with projections to their own subdirectory
	* src/lib/Projections/: new subdirectory
	* src/lib/AbstractProjection.cpp,
	* src/lib/AbstractProjection.h,
	* src/lib/AbstractProjectionHelper.cpp,
	* src/lib/AbstractProjectionHelper.h,
	* src/lib/EquirectProjection.cpp,
	* src/lib/EquirectProjection.h,
	* src/lib/EquirectProjectionHelper.cpp,
	* src/lib/EquirectProjectionHelper.h,
	* src/lib/MercatorProjection.cpp,
	* src/lib/MercatorProjection.h,
	* src/lib/MercatorProjectionHelper.cpp,
	* src/lib/MercatorProjectionHelper.h,
	* src/lib/SphericalProjection.cpp,
	* src/lib/SphericalProjection.h,
	* src/lib/SphericalProjectionHelper.cpp,
	* src/lib/SphericalProjectionHelper.h:
	Move to src/lib/Projections/
	* src/CMakeLists.txt: Add src/lib/Projections as include directory
	* src/lib/CMakeLists.txt: Add src/lib/Projections as include directory
	- Also indicate the move the files above to the new subdirectory.

	Rename files and classes to fit in naming scheme for the projections.
	* src/lib/GlobeScanlineTextureMapper.{h,cpp}:
	Renamed into SphericalScanlineTextureMapper.{h,cpp}
	* src/lib/FlatScanlineTextureMapper.{h,cpp}:
	Renamed into EquirectScanlineTextureMapper.{h,cpp}
	* src/lib/MarbleModel.cpp (setupTextureMapper): Use new names for
	classes
	(includes): Use new names for files
	* src/lib/CMakeLists.txt: Use new names for files.

2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * docs/FAQ

    Add FAQ document.

2008-05-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleLayerInterface.h:
    * src/plugins/marble/test/MarbleTestPlugin.{cpp,h}:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.{cpp,h}:
    * src/plugins/marble/compass/CompassFloatItem.{cpp,h}:
    * src/plugins/marble/satellites/SatellitesPlugin.{cpp,h}:

    - introducing guiString() and translate plugin strings ...

2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/GeoPainter.{cpp,h}:

    Fix includes.

2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MergedLayerDecorator.cpp: (paintClouds)

    Do not attempt to paint clouds if cloud tile and map tile have
    got different sizes.

2008-05-17  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoader.cpp: (maxCompleteTileLevel)

    Rename variables n -> row, m -> column.

2008-05-17  Torsten Rahn  <rahn@kde.org>

    * src/plugins/marble/overviewmap/MarbleOverviewMap.cpp:
    * src/plugins/marble/compass/CompassFloatItem.{cpp,h}:
    * src/plugins/marble/compass/CMakeLists.txt:
    * src/plugins/marble/CMakeLists.txt:

    - Early version of the new Compass float item plugin

2008-05-17  Inge Wallin  <inge@lysator.liu.se>

	Remove functions that are already moved to projection helpers
	* src/lib/VectorMap.{h,cpp} (sphericalPaintBase): removed
	(EquirectPaintBase): removed
	(MercatorPaintBase): removed

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MergedLayerDecorator.cpp (paintClouds)

    Fix crash if clouds are displayed on the OpenStreetMap theme.
    The tiles have got different sizes so we need to scale one of them,
    otherwise memory gets overwritten what was the cause of this crash.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleModel.cpp (setMapTheme)

    Part 10 of groundwork for OpenStreetMap texture tiles.
    Do not call TileCreator if installmap (DGML) is empty.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/CMakeLists.txt

    Part 9 of groundwork for OpenStreetMap texture tiles.
    Install data files for OpenStreetMap theme.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp (loadRawTile): Make it a little bit easier
    to read and respect max. 100 chars/row.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp
    (loadTile): Coding style.
    (destructor): Simplify.

    Small cleanup.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp
    (loadTile)
    (destructor)

    Part 8 of groundwork for OpenStreetMap texture tiles.
    Add support for 48 bit color depth, reuse jumpTableFromQImage32 for that.
    TODO: change names *32 to *_32_48?

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp
    * src/lib/TextureTile.h (pixel)
    (loadTile)
    (destructor)

    Part 7 of groundwork for OpenStreetMap texture tiles.
    Add support for 1 bit color depth, reuse jumpTableFromQImage8 for that.
    TODO: change names *8 to *_1_8?

2008-05-16  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/lib/geodata/data/GeoDataContainer.{h,cpp}:
    * src/lib/geodata/data/GeoDataHotSpot.{h,cpp}:
    * src/lib/geodata/data/GeoDataIconStyle.cpp:
    - fixed the constructors (added the proper constructor
    in the d-pointer
    - moved protected members to the d-pointer

    * src/lib/geodata/data/GeoDataLabelStyle.h:
    - fix: changed protected to private

    * src/lib/geodata/data/GeoDataLabelStyle.{h,cpp}:
    * src/lib/geodata/data/GeoDataStyleSelector.{h,cpp}:
    - Change to use the d-pointer technique

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/maps/earth/OpenStreetMap
    * data/maps/earth/OpenStreetMap/0
    * data/maps/earth/OpenStreetMap/0/0
    * data/maps/earth/OpenStreetMap/0/0/0.png
    * data/maps/earth/OpenStreetMap/OpenStreetMap-preview.png
    * data/maps/earth/OpenStreetMap/OpenStreetMap.dgml
    * data/maps/earth/openstreetmap
    * data/maps/earth/openstreetmap/OpenStreetMap-preview.png
    * data/maps/earth/openstreetmap/OpenStreetMap.dgml
    * data/maps/earth/openstreetmap/openstreetmap.dgml
    * data/maps/earth/openstreetmap/openstreetmap-preview.png

    Convert OpenStreetMap theme to lowercase.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/Quaternion.cpp
    * src/lib/Quaternion.h (slerp)

    Change parameter type from "const Quaternion" to "const Quaternion &".

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/maps/earth/OpenStreetMap/OpenStreetMap.dgml

    Fix texture layer name.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleWidget.cpp
    * src/lib/MarbleWidget.h
	(setProxy)
	(proxyHost)
	(proxyPort)
    * src/marble_part.cpp
	(readSettings)
	(writeSettings)
	(slotUpdateSettings)

    Add Http proxy support.

2008-05-16  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/data/GeoDataLatLonAltBox.h

    Export operator== for GeoDataLatLonAltBox. Needed in
    MarbleOverviewMap::needsUpdate.

2008-05-16  Torsten Rahn  <rahn@kde.org>

    * src/plugins/marble/test/MarbleTestPlugin.{cpp,h}:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.{cpp,h}:
    * src/plugins/marble/satellites/SatellitesPlugin.{cpp,h}:
    * src/lib/MarbleAbstractFloatItem.{cpp,h}:
    * src/lib/MarbleLayerInterface.h:

    - Adding a renderPosition cue to the layer classes API.
    - Adding renderMap method so the MeasureTool can get later 
      on reimplemented as an AbstractFloatItem. 

    * src/lib/LayerManager.cpp:

    - Adding a quick and dirty way into the LayerManager for the float 
      items to get always placed on top of everything else.
      .
2008-05-16  Torsten Rahn  <rahn@kde.org>

    * src/plugins/marble/overviewmap/MarbleOverviewMap.{cpp,h}:
    * src/lib/MarbleAbstractFloatItem.{cpp,h}:
    * src/lib/geodata/data/GeoDataLatLonAltBox.{cpp,h}:

    - Added Pixmap cache for float items 
    - TODO: add shared d-pointer for GeoDataLatLon(Alt)Box.

2008-05-15  Inge Wallin  <inge@lysator.liu.se>

	Get rid of warnings and cleaning
	* src/lib/geodata/data/GeoDataLatLonAltBox.cpp (text): Return
	value always
	* src/lib/geodata/data/GeoDataLatLonAltBox.h (GeoDataLatLonAltBox):
	"using GeoDataLatLonBox::intersects;" to get rid of warning about
	hiding.
	* src/lib/geodata/data/GeoDataLineString.cpp (erase): return value
	* src/lib/GeoPainter.cpp: cleaning
	* src/lib/MarbleWidget.{h,cpp} (viewContext): Don't take parameters
	also make const

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/parser/GeoDocument.cpp

    Fix conversion specifier for unsigned long int argument.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/parser/GeoDocument.h
    * src/lib/geodata/parser/GeoDocument.cpp

    Un-inline GeoDocument and GeoNode.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/HttpFetchFile.cpp

    Fix memory leak.

2008-05-15  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/lib/geodata/scene/GeoSceneDocument.{h,cpp}:
    * src/lib/geodata/scene/GeoSceneHead.{h,cpp}:
    * src/lib/geodata/scene/GeoSceneLegend.{h,cpp}:
    * src/lib/geodata/scene/GeoSceneMap.{h,cpp}:
    * src/lib/geodata/scene/GeoSceneSettings.{h,cpp}:

    - Yet another set of d-pointerifications (this time
    also moved the protected members in the d-pointer)
    - Add GEODATA_EXPORT to class declarations


2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/maps/earth/OpenStreetMap/0/0/0.png

    Add OpenStreetMap base tile.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * data/maps/earth/OpenStreetMap
    * data/maps/earth/OpenStreetMap/OpenStreetMap.dgml
    * data/maps/earth/OpenStreetMap/OpenStreetMap-preview.png

    Add .dgml and icon for OpenStreetMap theme.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/GeoPainter.cpp

    Fix memory leak.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/MarbleTest.h
    * src/geoshape/GeoToolFactory.h
    * src/geoshape/GeoShapeFactory.h
    * src/lib/PluginManager.h
    * src/lib/gps/GpxFile.h
    * src/lib/gps/GpxSax.h
    * src/lib/gps/Waypoint.h
    * src/lib/gps/WaypointContainer.h
    * src/lib/gps/GpxFileModel.h
    * src/lib/DiscCache.h
    * src/lib/MarbleAboutDialog.h
    * src/lib/MarbleThemeSelectView.h
    * src/lib/FileViewModel.h
    * src/lib/MapScaleFloatItem.h
    * src/lib/XmlHandler.h
    * src/lib/PlaceMarkContainer.h
    * src/lib/CacheStoragePolicy.h
    * src/lib/GpxFileViewItem.h
    * src/lib/CompassFloatItem.h
    * src/lib/MarbleControlBox.h
    * src/lib/MarbleNavigator.h
    * src/lib/PlaceMarkPainter.h
    * src/lib/PlaceMarkManager.h
    * src/lib/TextureTile.h
    * src/lib/AutoSettings.h
    * src/lib/PlaceMarkLayout.h
    * src/lib/MarbleMap_p.h
    * src/lib/MarbleModel.h
    * src/lib/MarbleLegendBrowser.h
    * src/lib/MarbleAbstractFloatItem.h
    * src/lib/kml/KMLFeature.h
    * src/lib/kml/KMLPointParser.h
    * src/lib/kml/KMLFeatureParser.h
    * src/lib/kml/KMLPlaceMarkParser.h
    * src/lib/kml/KMLColorStyleParser.h
    * src/lib/kml/KMLLabelStyleParser.h
    * src/lib/kml/KMLIconStyleParser.h
    * src/lib/kml/KMLDocumentParser.h
    * src/lib/kml/KMLContainerParser.h
    * src/lib/kml/KMLStyleParser.h
    * src/lib/kml/KMLObjectParser.h
    * src/lib/BoundingBox.h
    * src/lib/MarbleSearchListView.h
    * src/lib/LayerManager.h
    * src/lib/FileStoragePolicy.h
    * src/lib/MeasureTool.h
    * src/lib/DeferredFlag.h
    * src/lib/geodata/data/GeoDataFeature.h
    * src/lib/geodata/data/GeoDataHotSpot.h
    * src/lib/geodata/parser/GeoDataParser.h
    * src/lib/geodata/parser/GeoSceneParser.h
    * src/lib/geodata/parser/GeoParser.h
    * src/lib/geodata/scene/GeoSceneProperty.h
    * src/lib/geodata/scene/GeoSceneGroup.h
    * src/lib/geodata/scene/GeoSceneItem.h
    * src/lib/geodata/scene/GeoSceneMapTheme.h
    * src/lib/geodata/scene/GeoSceneTexture.h
    * src/lib/geodata/scene/GeoSceneVector.h
    * src/lib/geodata/scene/GeoSceneSection.h
    * src/lib/geodata/scene/GeoSceneLayer.h
    * src/lib/ScreenPolygon.h
    * src/plugins/designer/marblewidget/MarbleWidgetPlugin.h
    * src/plugins/designer/navigator/MarbleNavigatorPlugin.h
    * src/MarbleViewAdaptor.h
    * src/ControlView.h
    * src/plasmoid/latloneditplugin.h
    * src/plasmoid/latlonedit.h

    Declare constructors which can take one argument explicit.

2008-05-15  Torsten Rahn  <rahn@kde.org>

    * src/lib/MercatorProjection.{cpp,h}:
    * src/lib/SphericalProjection.{cpp,h}:
    * src/lib/GeoPainter.{cpp,h}:
    * src/lib/AbstractProjection.{cpp,h}:
    * src/lib/EquirectProjection.{cpp,h}:
    * src/lib/geodata/data/GeoDataLatLonAltBox.{cpp,h}:
    * src/lib/geodata/data/GeoDataPoint.cpp:
    * src/lib/ViewportParams.{cpp,h}:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.cpp:

    - Making the Marble Overviewmap functional:
      We got a Latitude-Longitude-BoundingBox ("LatLonBox") 
      viewer now ...
    - Adding methods to retrieve the LatLonBox of the view.
    - TODO: Fix sluggish performance for float items
      due to lack of pixmap caching.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.h
    * src/lib/MapThemeManager.cpp
    * src/lib/TileLoaderHelper.cpp
    * src/lib/TinyWebBrowser.h
    * src/lib/TileLoaderHelper.h

    Several small changes:
    - Add my copyright to the files where I contributed in a significant way.
    - Make constructory explicit.
    - Simplify shift expressions in TileLoaderHelper after hint from Inge Wallin.

2008-05-15  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/CrossHairFloatItem.h
    * src/lib/geodata/data/GeoDataPlacemark.cpp
    * src/lib/geodata/data/GeoDataFeature.h
    * src/lib/geodata/data/GeoDataFeature.cpp
    * src/lib/geodata/data/GeoDataPlacemark.h

    - Fix dashboard issues (type qualifiers ignored on function return type).
    - Make constructor explicit.

2008-05-14  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/CrossHairFloatItem.h
    * src/lib/CrossHairFloatItem.cpp

    - Fix includes.
    - Make constructor explicit.

2008-05-14  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoaderHelper.cpp

    Replace call to pow with shift expression.

2008-05-14  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleLegendBrowser.cpp
    * src/lib/MapThemeManager.cpp
    * src/lib/MarbleMap.cpp
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.cpp
    * src/lib/geodata/GeoDataTest.cpp
    * src/lib/geodata/scene/GeoSceneHead.cpp
    * src/lib/geodata/scene/GeoSceneHead.h
    * src/lib/geodata/scene/GeoSceneLayer.h

    Fix includes.

2008-05-14  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/lib/geodata/data/GeoDataFeature.cpp: a fix in constructor:
    d->m_name had not been set

    * src/lib/geodata/data/GeoDataObject.{h,cpp}:
    * src/lib/geodata/data/GeoDataPlacemark.{h,cpp}:
    * src/lib/geodata/data/GeoDataPoint.{h,cpp}:
    * src/lib/geodata/data/GeoDataStyle.{h,cpp}:

    - Change to use the d-pointer technique (second part)
    - Add GEODATA_EXPORT to class declarations

2008-05-14  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/plugins/marble/overviewmap/MarbleOverviewMap.h

    Make constructor explicit.

2008-05-14  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleAbstractFloatItem.h
    * src/lib/ViewportParams.h

    Export classes MarbleAbstractFloatItem and ViewportParams, needed for
    MarbleOverviewMap plugin.

2008-05-14  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleAbstractFloatItem.cpp:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.{cpp,h}:
    * data/svg/worldmap.svg:
    * data/CMakeLists.txt:

    - Adding worldmap.svg in equirectangular projection by Torsten Rahn
    - Adding worldmap.svg to the Overviewmap
      TODO: 1.) Create a pixmap cache to improve performance again
            2.) Draw boundingbox and boundingpolygon on top
            3.) Deal generally with the viewport in floatitems

2008-05-13  Torsten Rahn  <rahn@kde.org>

    * src/plugins/marble/test/MarbleTestPlugin.cpp:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.{cpp,h}:
    * src/plugins/marble/overviewmap/CMakeLists.txt:
    * src/plugins/marble/CMakeLists.txt:
    * src/lib/MarbleAbstractFloatItem.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/lib/geodata/data/GeoDataColorStyle.cpp:

    - Adding MarbleAbstractFloatItem which is the base for 
      an info box style class (might get renamed like that).
    - Started "Overview Map" plugin.

2008-05-13  Torsten Rahn  <rahn@kde.org>

    * src/plugins/marble/test/MarbleTestPlugin.cpp:
    * src/plugins/marble/overviewmap/MarbleOverviewMap.{cpp,h}:
    * src/plugins/marble/overviewmap/CMakeLists.txt:
    * src/plugins/marble/CMakeLists.txt:
    * src/lib/MarbleAbstractFloatItem.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/lib/geodata/data/GeoDataColorStyle.cpp:

    - Adding MarbleAbstractFloatItem which is the base for 
      an info box style class (might get renamed like that).
    - Started "Overview Map" plugin.

2008-05-13  Inge Wallin  <inge@lysator.liu.se>

	New class: ProjectionHelper that will collect code that was
	previously spread out.
	* src/lib/AbstractProjectionHelper.{h,cpp}: new file
	* src/lib/SphericalProjectionHelper.{h,cpp}: new file
	* src/lib/EquirectProjectionHelper.{h,cpp}: new file
	* src/lib/MercatorProjectionHelper.{h,cpp}: new file
	* src/lib/AbstractProjection.{h,cpp} (helper): new function
	* src/lib/SphericalProjection.{h,cpp} (helper): new function
	* src/lib/EquirectProjection.{h,cpp} (helper): new function
	* src/lib/MercatorProjection.{h,cpp} (helper): new function
	* src/lib/VectorMap.cpp (paintBase): use new mechanism
	* src/lib/CMakeLists.txt: Include new files

	Actually commit a lot of small changes that I have laying around.
	* src/lib/VectorMap.cpp,
	* src/lib/MarbleMap.cpp,
	* src/lib/TileCreator.cpp,
	* src/lib/AbstractLayer/AbstractLayer.h,
	* src/lib/ViewParams.h,
	* src/lib/TileLoader.cpp,
	* src/lib/MarbleModel.cpp,
	* src/lib/VectorComposer.cpp,
	* src/lib/TileCreator.h,
	* src/lib/geodata/scene/GeoSceneMap.cpp:
	Follow coding standards, add Copyrights

	Remove a FIXME
	* src/lib/MercatorProjection.cpp (screenCoordinates): Remove a FIXME.

	Fix an old FIXME.
	* src/lib/MarbleWidget.cpp (class MarbleWidgetPrivate): Remove
	m_justModified, since it is never used.

	Fix include directives (Krazy issue)
	* src/geoshape/GeoShape.cpp: Remove double include
	* src/geoshape/GeoToolFactory.cpp: Include own header first

	Introduce d-pointer to a public class
	* src/lib/TileCreator.{h,cpp}: d-pointerify

2008-05-13  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/lib/geodata/data/GeoDataColorStyle.{h,cpp}:
    * src/lib/geodata/data/GeoDataContainer.{h,cpp}:
    * src/lib/geodata/data/GeoDataDocument.{h,cpp}:
    * src/lib/geodata/data/GeoDataFeature.{h,cpp}:
    * src/lib/geodata/data/GeoDataFolder.h:
    * src/lib/geodata/data/GeoDataHotSpot.{h,cpp}:
    * src/lib/geodata/data/GeoDataIconStyle.{h,cpp}:
    * src/lib/geodata/data/GeoDataLabelStyle.h:
    * src/lib/geodata/data/GeoDataStyleSelector.h:

    - Change to use the d-pointer technique
    - Add GEODATA_EXPORT to class declarations

2008-05-12  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/data/GeoDataLineString.{cpp,h}:
    * src/lib/geodata/data/GeoDataLinearRing.{cpp,h}:
    * src/lib/geodata/data/GeoDataLatLonAltBox.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:

    - Adding GeoDataLinearRing
    - Adding more GeoDataLineString properties

    * src/lib/ViewportParams.{cpp,h}:
    * src/lib/AbstractProjection.{cpp,h}:

    - Adding latLonAltBox() to ViewportParams and AbstractProjection
    - Adding rectOutline() to AbstractProjection

2008-05-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/data/GeoDataLineString.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:

    - Adding the new GeoDataLineString which is supposed
      to replace GeoPolygon at some point.

    * src/lib/MarbleMap.{cpp,h}:

    - Getting rid of a leftover occurance of quickDirty()

2008-05-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/global.h:
    * src/lib/BoundingBox.h:
    * src/lib/geodata/data/GeoDataLatLonAltBox.{cpp,h}:
    * src/lib/geodata/data/GeoDataPoint.{cpp,h}:
    * src/lib/geodata/data/GeoDataGeometry.cpp:
    * src/lib/geodata/CMakeLists.txt:

    - Adding the new GeoDataLatLonAltBox for later use with 
      GeoDataLineString ...
    - Marking the "BoundingBox" deprecated.

2008-05-11  Claudiu Covaci  <claudiu.covaci@gmail.com>

    * src/plugins/marble/satellites/SatellitesPlugin.{h,cpp}: created the files

    - This plugin provides a satellite layer. Which satellites will be 
      displayed and how the data will be obtained is tbd.

2008-05-10  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/data/GeoDataGeometry.{cpp,h}:
    * src/lib/geodata/data/GeoDataPoint.h:
    * src/lib/geodata/CMakeLists.txt:

    - Adding KML's abstract geometry class here, so we 
      can start to work on GeoDataLineString and friends.
      Making GeoDataPoint inherit accordingly.

2008-05-10  Torsten Rahn  <rahn@kde.org>

    * src/lib/MercatorProjection.{cpp,h}:
    * src/lib/SphericalProjection.{cpp,h}:
    * src/lib/GeoPainter.cpp:
    * src/lib/AbstractProjection.{cpp,h}:
    * src/lib/EquirectProjection.{cpp,h}:

    - Implemented a repetition-aware screenCoordinates method
      and applied it to GeoPainter -- now we need to do likewise
      with GeoDataPolygon which will require a few more drastic
      changes to be efficient.

2008-05-09  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/MergedLayerDecorator.cpp
    * src/lib/TextureTile.cpp
    * src/lib/TileLoaderHelper.cpp
    * src/lib/TileCreator.cpp
    * src/lib/TileLoader.cpp
    * src/lib/global.h
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.cpp
    * src/lib/geodata/scene/GeoSceneTexture.cpp
    * src/lib/TileLoaderHelper.h

    Part 6 of groundwork for OpenStreetMap texture tiles.
    Utilize levelZeroColumns and levelZeroRows information. This touches
    mainly TileLoaderHelper and callers.

2008-05-08  Torsten Rahn  <rahn@kde.org>

    * src/lib/MercatorProjection.{cpp,h}:
    * src/lib/SphericalProjection.{cpp,h}:
    * src/lib/EquirectProjection.{cpp,h}:
    * src/lib/AbstractProjection.h:
    * src/lib/GeoPainter.h:

    - First tiny initial step towards the great GeoPainter vector drawing
      unification: creating a "halfstub" for 

    bool screenCoordinates( GeoDataPoint geopoint, const ViewportParams * viewport, int *x, int &y, int &screenPointNum, bool &occulted );

2008-05-08  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.cpp
    * src/lib/geodata/scene/GeoSceneTexture.cpp
    * src/lib/geodata/scene/GeoSceneTexture.h
    * docs/dgml2.dtd

    Part 5 of groundwork for OpenStreetMap texture tiles.
    DGML, add attributes "levelZeroColumns" and "levelZeroRows" to
    element "storageLayout". Default to values of oldest tile themes.

2008-05-07  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileLoaderHelper.cpp

    Part 4 of groundwork for OpenStreetMap texture tiles.
    Implement OpenStreetMap storageLayout in
    TileLoaderHelper::relativeTileFileName.

2008-05-07  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MergedLayerDecorator.h
    * src/lib/TileLoader.h
    * src/lib/MergedLayerDecorator.cpp
    * src/lib/TextureTile.h
    * src/lib/TileLoader.cpp
    * src/lib/MarbleModel.cpp
    * src/lib/HttpDownloadManager.h

    Part 3 of groundwork for OpenStreetMap texture tiles.
    Add slots and signal with serverUrl. This has been in HttpDownloadManager
    but was not connected to the rest.

2008-05-07  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MarbleLegendBrowser.cpp
    * src/lib/MapThemeManager.cpp
    * src/lib/MarbleMap.cpp
    * src/lib/MergedLayerDecorator.cpp
    * src/lib/TextureColorizer.cpp
    * src/lib/ViewParams.cpp
    * src/lib/MarbleModel.cpp
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.cpp
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler.cpp
    * src/lib/geodata/GeoDataTest.cpp
    * src/lib/geodata/parser/GeoDocument.h
    * src/lib/geodata/parser/GeoDataParser.cpp
    * src/lib/geodata/parser/GeoSceneParser.cpp
    * src/lib/geodata/parser/GeoDataParser.h
    * src/lib/geodata/parser/GeoSceneParser.h
    * src/lib/geodata/parser/GeoParser.h
    * src/lib/geodata/scene/GeoSceneGroup.h
    * src/lib/geodata/scene/GeoSceneSettings.h
    * src/lib/geodata/scene/GeoSceneSection.h
    * src/lib/geodata/scene/GeoSceneDocument.cpp
    * src/lib/geodata/scene/GeoSceneDocument.h

    - Fix includes.
    - un-inline geoDataDoc and geoSceneDoc.

2008-05-07  Torsten Rahn  <rahn@kde.org>

    * src/lib/GeoPainter.{cpp,h}:
    * src/plugins/marble/test/MarbleTestPlugin.cpp:

    Initial Annotation support for GeoPainter.

2008-05-06  Torsten Rahn  <rahn@kde.org>

    * src/lib/GeoPainter.{cpp,h}:
    * src/plugins/marble/test/MarbleTestPlugin.cpp:

    - More work on GeoPainter: Addition of drawPolygon, drawImage
    - Declaration of GeoPainter::drawAnnotation

2008-05-05  Inge Wallin  <inge@lysator.liu.se>

	Add missing exports needed in KDE version.
	* src/lib/GeoPainter.h (GeoDataPainter): Export this class
	* src/lib/geodata/data/GeoDataPoint.h (GeoDataPoint): Export this class

2008-05-05 Simon Schmeisser
	
* geoshape (directory):  
 * geoshape/CMakeLists.txt:  
 * geoshape/GeoShape.cpp   [License: LGPL (v2+)]:
 * geoshape/GeoShape.h   [License: LGPL (v2+)]:
 * geoshape/GeoTool.cpp   [License: LGPL (v2+)]:
 * geoshape/GeoTool.h   [License: LGPL (v2+)]:
 * geoshape/GeoToolFactory.cpp   [License: LGPL (v2+)]:
 * geoshape/GeoToolFactory.h   [License: LGPL (v2+)]:
 * geoshape/Plugin.cpp   [License: LGPL (v2+)]:
 * geoshape/Plugin.h   [License: LGPL (v2+)]:
 * geoshape/GeoShapeFactory.cpp   [License: LGPL (v2+)]:
 * geoshape/GeoShapeFactory.h   [License: LGPL (v2+)]:
 * geoshape/geoshape.desktop:

- My first commit to Marble :)
   In theory this adds a Koffice flake shape,
   which uses Marble to display a map. In practice,
   there is quite some buildsystem magic missing
   and also some koffice headers need to be exported.
  In the meantime have a look here for a picture:
  http://developer.kde.org/~tackat/simons_marble_flake.png

2008-05-04  Simon Schmeisser <mail_to_wrt@gmx.de>

    * src/lib/PluginManager.h
    * src/lib/MeasureTool.cpp
    * src/lib/MarbleWidget.cpp
    * src/lib/VectorComposer.h
    * src/lib/MarbleWidget.h
    * src/lib/MarbleLayerInterface.h
    * src/lib/VectorMap.cpp
    * src/lib/MarbleMap.cpp
    * src/lib/GeoPainter.cpp
    * src/lib/MarbleModel.h
    * src/lib/PluginManager.cpp
    * src/lib/MarbleModel.cpp

2008-05-04  Torsten Rahn  <rahn@kde.org>

    * src/plugins/marble/test/MarbleTestPlugin.{cpp,h}:

    - Getting our very first plugin to work -- wooooohoooo!

    * src/lib/MeasureTool.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/VectorComposer.{cpp,h}:
    * src/lib/MarbleLayerInterface.h:
    * src/lib/VectorMap.{cpp,h}:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/GridMap.{cpp,h}:

    - Using GeoPainter instead of ClipPainter everywhere.

    * src/lib/PluginManager.{cpp,h}:
    * src/lib/GeoPainter.h:
    * src/lib/LayerManager.{cpp,h}:

    - Doing a temporary solution to get the plugin to work
      without a real LayerManager class.

2008-05-04  Torsten Rahn  <rahn@kde.org>

    * src/plugins/designer/navigator/CMakeLists.txt:
    * src/plugins/marble/test/MarbleTestPlugin.{cpp,h}:
    * src/plugins/marble/test/MarbleTestPlugin.h:
    * src/plugins/marble/test/CMakeLists.txt:

    - Adding our first test plugin - it doesn't do anything yet.

2008-05-04  Torsten Rahn  <rahn@kde.org>

    * src/lib/GeoPainter.{cpp,h}:

    - Started to work on the GeoPainter implementation for later usage 
      in plugins (drawPoint, drawText, drawEllipse).

    * src/lib/AbstractProjection.h:
    * src/lib/EquirectProjection.{cpp,h}:
    * src/lib/MercatorProjection.{cpp,h}:
    * src/lib/SphericalProjection.{cpp,h}:
    * src/lib/PlaceMarkLayout.cpp:
    * src/lib/CMakeLists.txt:
    * src/lib/ViewportParams.{cpp,h}:

    - Removed planetAxisMatrix as a parameter from ScreenCoordinates 
      as it was ugly and as there was a workaround without performance penalty.

2008-05-04  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleLayerInterface.h:

    - Minor changes and API docs for the Marble Layer Plugin Interface

2008-05-04  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs.{cpp,h}:

    - Adding     

        QStringList entryList( const QString& relativePath, QDir::Filters filters  );

      TODO: This could also be useful in MapThemeManager if enhanced.

    * src/lib/MarbleLayerInterface.h:

    - New Plugin Interface to create new layer rendering backends for Marble

    * src/lib/PluginManager.{cpp,h}:

    - Added new plugin manager that searches for new plugins and loads them

    * src/lib/LayerManager.{cpp,h}:
    * src/lib/MarbleModel.cpp:

    - Added a stub for the new LayerManager class.

    * src/lib/CMakeLists.txt:

2008-05-04  Torsten Rahn  <rahn@kde.org>

    * src/plugins/designer/marblewidget/CMakeLists.txt:
    * src/plugins/designer/navigator/CMakeLists.txt:
    * src/plugins/designer/CMakeLists.txt:
    * src/plugins/marblewidget/MarbleWidgetPlugin.cpp:
    * src/plugins/marblewidget/MarbleWidgetPlugin.h:
    * src/plugins/marblewidget/CMakeLists.txt:
    * src/plugins/navigator/MarbleNavigatorPlugin.h:
    * src/plugins/navigator/CMakeLists.txt:
    * src/plugins/navigator/MarbleNavigatorPlugin.cpp:
    * src/plugins/CMakeLists.txt:

    - Moving the designer plugins into their own directory.

2008-05-03  Torsten Rahn  <rahn@kde.org>

    * src/lib/TileCreator.{cpp,h}:
    * src/tilecreator/CMakeLists.txt:

    - Fixing bug #161474

    - the problem was that Patrick had unconsciously assumed
      that the install map would be located in its final place
      already.

2008-05-03  Torsten Rahn  <rahn@kde.org>

    * src/lib/TileCreator.{cpp,h}:
    * src/tilecreator/CMakeLists.txt:

    - Fixing bug #161474

    - the problem was that Patrick had unconsciously assumed
      that the install map would be located in its final place
      already.

2008-05-02  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleLegendBrowser.{cpp,h}:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/ViewParams.{cpp,h}:
    * src/lib/MarbleMap_p.h::
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:
    * data/maps/earth/citylights/citylights.dgml:
    * data/maps/earth/plain/plain.dgml:
    * data/maps/earth/srtm/srtm.dgml:
    * data/maps/earth/bluemarble/bluemarble.dgml:
    * data/legend.html:
    * src/lib/VectorMap.cpp:
    * src/lib/PlaceMarkLayout.cpp:
    * src/lib/TileLoaderHelper.cpp:
    * src/lib/TextureColorizer.cpp:
    * src/lib/MapThemeManager.cpp:
    * src/lib/MarbleModel.cpp:
    * src/lib/VectorComposer.cpp:
    * src/lib/MarbleControlBox.cpp:

    - Getting rid of the bool members in ViewParams and moving
      properties over to GeoSceneDocument.

2008-05-02  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TextureTile.cpp

    Fix warning.

2008-05-02  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/parser/GeoParser.cpp
    * src/lib/geodata/CMakeLists.txt

    Now that there is a GeoDocument.cpp we can remove the definition
    of static variable GeoDocument::s_leakProtector from GeoParser.cpp.

2008-05-02  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/MergedLayerDecorator.h
    * src/lib/AbstractScanlineTextureMapper.h
    * src/lib/TileLoader.h
    * src/lib/MergedLayerDecorator.cpp
    * src/lib/TextureTile.cpp
    * src/lib/TileLoaderHelper.cpp
    * src/lib/TextureTile.h
    * src/lib/TileLoader.cpp
    * src/lib/MarbleModel.h
    * src/lib/MarbleModel.cpp
    * src/lib/geodata/parser/GeoDocument.cpp
    * src/lib/TileLoaderHelper.h
    * src/tilecreator/CMakeLists.txt

    Part 2 of groundwork for OpenStreetMap texture tiles.
    - Rework setMapTheme: pass GeoSceneTexture pointer instead of string
      and rename to setTextureLayer.
    - Small fix in MarbleModel: set texture layer of tile loader before
      calling setProjection.
    - Inclusion of GeoDocument.cpp so that we can remove the definition of
      class variable GeoDocument::s_leakProtector from GeoParser.cpp.

2008-05-02  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/TextureColorizer.cpp (colorize): Cleaning and comments

	Cleaning in preparation for other, new stuff
	* src/lib/VectorMap.cpp (sphericalCreatePolyLine): Cleaning
	(rectangularCreatePolyLine): Cleaning

2008-05-02  Torsten Rahn  <rahn@kde.org>

    - Getting toggling the border feature working again - this time via the
      DGML2 "framework". Fixing lots of bugs on the way there.
    - introducing lots of qDebug statements (sorry!) for now.

    * src/lib/MarbleLegendBrowser.{cpp,h}:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneGroup.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.cpp:
    * src/lib/MarbleWidget.cpp:
    * src/lib/MarbleControlBox.cpp:
    * src/lib/VectorComposer.cpp:
    * src/lib/geodata/scene/GeoSceneProperty.cpp:

2008-05-02  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/scene/GeoSceneGroup.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:

    - Adding setters and getters to change the value of a  particular
      property throughout the hierarchy.

    * src/lib/ViewParams.{cpp,h}:
    * src/lib/MarbleModel.cpp:

    - Spring Cleanup: remove old members like m_oldProjection, added FIXMEs

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleMap.cpp:
    * src/lib/MarbleLegendBrowser.{cpp,h}:
    * src/lib/MarbleControlBox.cpp:

    - Further connect the MarbleControlBox to the settings.

    * data/maps/earth/plain/plain.dgml:
    * data/maps/earth/srtm/srtm.dgml:

    - Changed boundaries -> borders for now.

2008-05-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapThemeManager.cpp:
    * src/lib/MarbleMap.cpp:
    * src/lib/MarbleControlBox.cpp:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneHead.cpp:

    - Cleanup: remove redundant mini/maximumZoom from MarbleModel,
      remove qDebugs, fixing the mapThemeId, some minor regressions and 
      bugs.

2008-05-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleMap.cpp:
    * src/lib/MarbleModel.{cpp,h}:

    - Fixing changing of projections using yet another workaround 
      before we introduce the LayerManager.

2008-05-01  Torsten Rahn  <rahn@kde.org>

    * src/MarbleTest.cpp:
    * src/QtMainWindow.cpp:
    * src/lib/MarbleControlBox.cpp:  
    * src/lib/MarbleLegendBrowser.{cpp,h}:  
    * src/lib/MarbleMap.{cpp,h}:  
    * src/lib/MarbleModel.{cpp,h}:  
    * src/lib/MarbleWidget.{cpp,h}:  
    * src/lib/ViewParams.{cpp,h}:  
    * src/lib/geodata/scene/GeoSceneHead.{cpp,h}:  
    * src/lib/geodata/scene/GeoSceneLayer.{cpp,h}:  
    * src/marble_part.cpp: 

    - mapTheme -> mapThemeId
    - mapThemeObject -> mapTheme
    - Instantiating the GeoSceneDocument object in Viewparams now.
    - Afterwards its pointer gets passed to MarbleModel (later: LayerManager)
      to feed the parameters to the backends.

    * src/lib/VectorMap.{cpp,h}:  
    - performance fix in VectorMap::getDetailLevel by Pino Toscano ...


2008-05-01  Inge Wallin  <inge@lysator.liu.se>

	// Paint the background for the mercator projection.
	* src/lib/VectorMap.{h,cpp} (mercatorPaintBase): New function
	* src/lib/VectorMap.cpp (paintBase): Call mercatorPaintBase

2008-05-01  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.cpp
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.cpp
    * src/lib/geodata/handlers/dgml/DgmlStorageLayoutTagHandler.h
    * src/lib/geodata/scene/GeoSceneTexture.cpp
    * src/lib/geodata/scene/GeoSceneTexture.h
    * src/lib/geodata/CMakeLists.txt
    * docs/dgml2.dtd

    Add storageLayout element to DGML in order to support different
    storage layouts. This is needed for OpenStreetMap.

2008-04-30  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/geodata/handlers/dgml/DGMLSourceFileTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLHeadTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlVectorTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlInstallMapTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLAuxillaryDictionary.cpp
    * src/lib/geodata/handlers/dgml/DgmlAuxillaryDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlMinimumTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLMinimumTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLNameTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLValueTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLMapTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLMaximumTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlDescriptionTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLDescriptionTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLTargetTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLIconTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlSourceDirTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLSourceFileTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlInstallMapTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLMaximumTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLMapTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLDocumentTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLPenTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlTextTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLNameTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlPenTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLDiscreteTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLThemeTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.h
    * src/lib/geodata/handlers/dgml/DGMLSectionTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlDiscreteTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlThemeTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLVectorTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlElementDictionary.cpp
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlBrushTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlTextTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlHeadingTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLSourceDirTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlSourceFileTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLSettingsTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlHeadTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLVisibleTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLHeadingTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlAuxillaryDictionary.cpp
    * src/lib/geodata/handlers/dgml/DGMLSectionTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlNameTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlMinimumTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLAvailableTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlValueTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlMaximumTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLZoomTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLTargetTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlDescriptionTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlTargetTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLVisibleTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlIconTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.cpp
    * src/lib/geodata/handlers/dgml/DGMLLegendTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlItemTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLSettingsTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlTextureTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlSourceFileTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlLayerTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlMapTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlMaximumTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlDocumentTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlPenTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLBrushTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLAvailableTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlNameTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLZoomTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLGroupTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLVectorTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlThemeTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlDiscreteTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLInstallMapTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlSectionTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlVectorTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLMinimumTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLAuxillaryDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlLayerTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLDescriptionTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlSourceDirTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLGroupTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlVisibleTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLSourceDirTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlHeadingTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlSectionTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLInstallMapTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLDocumentTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLTextTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlTargetTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLPenTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlVisibleTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLLegendTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlItemTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlAttributeDictionary.cpp
    * src/lib/geodata/handlers/dgml/DgmlLegendTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.h
    * src/lib/geodata/handlers/dgml/DgmlSettingsTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLHeadTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLDiscreteTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLThemeTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLValueTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlBrushTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlPropertyTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DgmlAvailableTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.cpp
    * src/lib/geodata/handlers/dgml/DGMLIconTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLBrushTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlZoomTagHandler.h
    * src/lib/geodata/handlers/dgml/DGMLTextTagHandler.h
    * src/lib/geodata/handlers/dgml/DgmlGroupTagHandler.cpp
    * src/lib/geodata/handlers/dgml/DGMLHeadingTagHandler.cpp
    * src/lib/geodata/parser/GeoSceneParser.cpp
    * src/lib/geodata/scene/GeoSceneMap.cpp
    * src/lib/geodata/CMakeLists.txt

    Naming convention: DGML -> Dgml.

2008-04-27  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/ViewParams.cpp:

    - Getting rid of "parent" in MarbleModel::setMapTheme() ...

    * src/lib/geodata/scene/GeoSceneLayer.cpp:

    - mem leak fix in GeoSceneLayer.

    * src/lib/MarbleLegendBrowser.{cpp,h}:

    - Initial change towards getting properties connected to 
      the LegendBrowser.

2008-04-27  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleLegendBrowser.cpp:
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler.cpp:
    * src/lib/ViewParams.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneGroup.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneDocument.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneProperty.{cpp,h}:

    - QObjectifiying GeoSceneDocument, Settings, Group and Property.
    - Adding valueChanged( QString property, bool enabled ) signals.
    - Adding GeoSceneDocument style mapTheme setters and getters to 
      ViewParams ...

2008-04-27  Inge Wallin  <inge@lysator.liu.se>

	Add a maxLat() method to all projections.
	* src/lib/AbstractProjection.h (maxLat): New method
	(m_maxLat): new member
	* src/lib/MercatorProjection.cpp (MercatorProjection): Set
	m_maxLat to 85.05113 degrees (the max allowed value)
	(geoCoordinates): Make calculation clearer.
	* src/lib/SphericalProjection.cpp (MercatorProjection): Set
	m_maxLat to 90.0 degrees.
	* src/lib/EquirectProjection.cpp (MercatorProjection): Set
	m_maxLat to 90.0 degrees.
	
2008-04-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/Quaternion.h:

    Remove empty destructor.

2008-04-26  Torsten Rahn  <rahn@kde.org>

    * src/lib/TextureColorizer.cpp:

    - cleanup of TextureColorizer::generatePalette(), faster startup

2008-04-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/Quaternion.h:

    Make Quaternion non-virtual, that gives me a 4,5% better
    performance with --timedemo.

2008-04-26  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MergedLayerDecorator.h:
    * src/lib/MergedLayerDecorator.cpp:

    Fix include statements for Qt header: add Qt module.

2008-04-26  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLGroupTagHandler.{cpp,h}:
    * src/lib/geodata/GeoDataTest.cpp:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneGroup.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:

    - Introducing the group tag for settings properties.
      This tag is just for categorizing the properties
      and doesn't have a role concerning the 
      legend view. However if one were to develop 
      an alternative treeview which would just be 
      created around the properties themselves then
      this element can be used to categorize the properties.
      Additionally it will get used for saving the 
      values of the properties inside the rc-files in 
      the future.

2008-04-25  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileId.cpp:
    * src/lib/TileId.h:

    Remove operator< for TileId because it is not needed.

2008-04-25  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileId.cpp:
    * src/lib/TileId.h:

    Fix performance regression of the TileId patch of 2008-04-24.
    - make operators and hash function friends of TileId so they can
      access the members directly.
    - improve hash function, no more QString usage here.
    - fix for operator<, comparison of m_tileX was wrong.

    --timedemo results for my machine, average of 5 runs each:
    before TileId patch: 13722 ms, 14,575 fps
    with TileId patch:   18103 ms, 11,048 fps (32% regression)
    with TileId fixed:   13788 ms, 14,506 fps (0,5% regression)

2008-04-25  Inge Wallin  <inge@lysator.liu.se>

	Crazy issue 13: Proper include directives
	* src/marble_part.cpp: duplicate include
	* src/tilecreator/tccore.h: add include guard

	Crazy issue 25: Spelling errors
	* src/lib/geodata/scene/GeoSceneMap.h: Spelling fixes
	
	Crazy issue 6: Single char QStrings better written as a QChar
	* src/lib/MapThemeManager.cpp (createMapThemeRow): 

2008-04-25  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLSectionTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLValueTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLEnabledTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.{cpp,h}:
    * src/lib/geodata/GeoDataTest.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneItem.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSection.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneProperty.{cpp,h}:
    * data/maps/earth/srtm/srtm.dgml:

    - Changing the "Enabled" element to "Value"
    - Introducing the "Connect(To)" attribute in the legend's items and sections.

2008-04-24  Torsten Rahn  <rahn@kde.org>

    * src/MarbleTest.cpp:

    - Reverting patch from Jordi Polo which rather seems to
      fix symptoms than the actual issue.
    - Making sure Marble will always execute the test at 
      normal MapQuality and using the SRTM map. 

2008-04-24  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/TileId.cpp:
    * src/lib/MergedLayerDecorator.h:
    * src/lib/TileId.h:
    * src/lib/MergedLayerDecorator.cpp:
    * src/lib/TextureTile.cpp:
    * src/lib/TileCache.cpp:
    * src/lib/TextureTile.h:
    * src/lib/TileLoader.cpp:
    * src/lib/TileCache.h:
    * src/lib/CMakeLists.txt:

    Add class TileId because int is not sufficient for higher zoom levels.

2008-04-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/XmlHandler.cpp:
    * src/lib/MarbleLegendBrowser.cpp:
    * src/lib/GpxFileViewItem.h:
    * src/lib/ViewParams.cpp:
    * src/lib/BoundingBox.cpp:
    * src/lib/kml/KMLObject.cpp:
    * src/lib/SunControlWidget.h:

    Fix include statements for Qt header: add Qt module.

2008-04-23  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/gps/GpxFile.cpp:
    * src/lib/gps/Track.cpp:
    * src/lib/gps/TrackContainer.cpp:
    * src/lib/gps/GpsElement.h:
    * src/lib/gps/GpxSax.cpp:
    * src/lib/gps/GpsTracking.cpp:
    * src/lib/gps/GpxFileModel.cpp:
    * src/lib/gps/TrackSegment.cpp:
    * src/lib/gps/GmlSax.cpp:
    * src/lib/AbstractLayer/AbstractLayerContainer.cpp:
    * src/lib/AbstractLayer/AbstractLayerData.cpp:
    * src/lib/geodata/handlers/kml/KMLFolderTagHandler.cpp:
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLHeadTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLVectorTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLMapTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLDocumentTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLSectionTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLLegendTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLSettingsTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLZoomTagHandler.cpp:
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler.cpp:
    * src/lib/geodata/handlers/gpx/GPXgpxTagHandler.cpp:
    * src/lib/geodata/GeoDataTest.cpp:
    * src/lib/geodata/data/GeoDataDocument.h:
    * src/lib/geodata/data/GeoDataObject.cpp:
    * src/lib/geodata/parser/GeoDataParser.cpp:
    * src/lib/geodata/parser/GeoTagHandler.cpp:
    * src/lib/geodata/parser/GeoSceneParser.cpp:
    * src/lib/geodata/parser/GeoParser.cpp:
    * src/lib/geodata/parser/GeoTagHandler.h:
    * src/plugins/marblewidget/MarbleWidgetPlugin.cpp:
    * src/plugins/marblewidget/MarbleWidgetPlugin.h:
    * src/plugins/navigator/MarbleNavigatorPlugin.h:
    * src/plugins/navigator/MarbleNavigatorPlugin.cpp:
    * src/plasmoid/latloneditplugin.cpp:
    * src/plasmoid/latlonedit.cpp:
    * src/plasmoid/worldclock.cpp:
    * src/plasmoid/latlonedit.h:
    * tools/svg2pnt/svgxmlhandler.cpp:
    * tools/svg2pnt/svg2pnt.cpp:
    * tools/svg2pnt/svgxmlhandler.h:
    * tests/GeoPolygonTest.cpp:
    * tests/MarbleWidgetTest.cpp:

    Fix include statements for Qt header: add Qt module.

2008-04-22  Torsten Rahn  <rahn@kde.org>

    * src/marble_part.{cpp,h,rc}:
    * src/QtMainWindow.cpp:
    * src/marble.kcfg:
    * src/marbleui.rc:
 
    - Adding Clouds, Atmosphere and Copy Coordinates to 
      the KDE interface.

2008-04-22  Torsten Rahn  <rahn@kde.org>

    * ChangeLog:
    * src/QtMainWindow.cpp:
    * src/lib/MarbleWidgetPopupMenu.cpp:
    * src/lib/geodata/data/GeoDataPoint.cpp:

    - Don't forget that GeoDataPoint makes the altitude parameter
      mandatory when choosing units ... Fixes wrong coordinates 
      being copied.
    - Fixing missing colons in Patrick's and Jens' Changelog
      entries. ( prevents proper highlightning in Kate ) :-)

2008-04-22  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidgetPopupMenu.{cpp,h}:

    - Small m_p-> m_ cleanup, "Copy Coordinates" Action on LMB.

    * src/QtMainWindow.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/ViewParams.{cpp,h}:
    * src/lib/MarbleModel.cpp:
    * src/lib/geodata/data/GeoDataPoint.cpp:

    - Adding Atmosphere and Clouds Cover to the Qt frontend menu.
    - Adding "Edit->Copy Coordinates" Action to the Qt frontend.

2008-04-22  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.h:
    * src/lib/MapThemeManager.cpp:

    Use QFileSystemWatcher in MapThemeManager.
    On the signal directoryChanged the list of watched paths gets
    updated and MapThemeModel gets updated using updateMapThemeModel.
    On the signal fileChanged the corresponding item of the model
    gets removed or updated.
    There is some potential to optimize left. For example in case of
    directoryChanged we could update only the corresponding part of
    the model if any.

2008-04-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.cpp:

    - Remove unused local variable.
    - Remove pointless delete.

2008-04-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.cpp:

    - Don't allocate local GeoSceneParser variable dynamically.
    - Remove useless null check.

2008-04-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.cpp:
    * src/lib/TileCreator.cpp:
    * src/marble_part.cpp:

    Remove extra semicolons.

2008-04-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.h:
    * src/lib/MapThemeManager.cpp:

    Move code from MapThemeManager::findMapThemes that is duplicated
    for local (.marble) and system (kde/share/apps/marble) directories
    to overloaded helper method.

2008-04-21  Jens-Michael Hoffmann  <jensmh@gmx.de>

    * src/lib/MapThemeManager.cpp:
    * src/lib/MapThemeManager.h:

    This patchs removes the parameter of MapThemeManager::findMapThemes because it 
    is constant ("maps/"). Removes redundant occurrence of literal "maps/" 
    inside, too.

2008-04-20  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt:
    * src/tilecreator/CMakeLists.txt:
    
    - make the option useful (it was behind the actual code using it)
    - fix one typo
    
2008-04-20  Patrick Spendrin    <ps_ml@gmx.de>

    * CMakeLists.txt:
    * data/CMakeLists.txt:
    * src/tilecreator/CMakeLists.txt:
    
    * src/lib/MarbleDirs.cpp:
    * src/tilecreator/tccore.cpp:
    
    - add an option to create the tiles of srtm data at compiletime
      this should make it possible to ship marble with it
    - use QCoreApplication for the tilecreators sake
    
    
2008-04-20  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme.{cpp,h}:

    - Replaced by GeoSceneDocument and MapThemeManager.

    * src/lib/MarbleLegendBrowser.cpp:
    * src/lib/MapThemeManager.cpp:
    * src/lib/MarbleControlBox.h:
    * src/lib/MarbleThemeSelectView.cpp:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/MarbleControlBox.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/marble_part.cpp:
    * data/maps/earth/citylights/citylights.dgml:
    * data/maps/earth/plain/plain.dgml:
    * data/maps/earth/srtm/srtm.dgml:
    * data/maps/earth/srtm/srtm.dgm2:
    * data/maps/earth/bluemarble/bluemarble.dgml:
    * data/CMakeLists.txt:

    - Replacing all of the DGML code by DGML2 code
    - Delayed Initialization for MapThemeModel
    - Ported DGML files to DGML2 format.

2008-04-20  Patrick Spendrin    <ps_ml@gmx.de>

    * src/tilecreator/main.cpp:
    * src/tilecreator/CMakeLists.txt:
    
    - add a first layout how to run the tilecreator in cmake

2008-04-19  Torsten Rahn  <rahn@kde.org>

    Now everything has been ported to emulate the old
    behaviour. Only the dgml-maps are missing.
    For the full port to DGML we need to add the 
    Layermanagement class now ...

    Switch the four DGML2 defines to 1 to see the
    (not that visible) difference.

    * src/ControlView.cpp:
    * src/lib/MapThemeManager.cpp:
    * src/lib/MarbleControlBox.{cpp,h}:

    - Make the MarbleControlBox work with DGML2

2008-04-19  Patrick Spendrin    <ps_ml@gmx.de>

    * AbstractScanlineTextureMapper.cpp:  
    * CMakeLists.txt:
    * MergedLayerDecorator.cpp:
    * TextureTile.cpp:
    * TextureTile.h:
    * TileCreator.cpp:
    * TileLoader.cpp:
    * TileLoader.h:
    * TileLoaderHelper.cpp:
    * global.h:

    - use TileLoaderHelper helper functions now 
    - move the TileDigits constant to global.h

2008-04-19  Patrick Spendrin    <ps_ml@gmx.de>

    * src/lib/TileLoaderHelper.h:
    * src/lib/TileLoaderHelper.cpp:
    
    Move some tile independent functions out of TileLoader so they 
    can be used from TileLoader and TileCreator
    
2008-04-19  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/MarbleModel.cpp: cleaning
	(destructor): delete m_mapTheme

2008-04-19  Torsten Rahn  <rahn@kde.org>

    * lib/MarbleWidget.cpp:
    * lib/AbstractScanlineTextureMapper.h:
    * lib/MergedLayerDecorator{cpp,h}:
    * lib/TextureTile.h:
    * lib/TileLoader{cpp,h}:
    * lib/MarbleModel{cpp,h}:
    * lib/CMakeLists.txt:
    * lib/MergedLayerPainter{cpp,h}:

    - Renaming MergedLayerPainter -> MergedLayerDecorator

2008-04-19  Torsten Rahn  <rahn@kde.org>

    * src/lib/AbstractScanlineTextureMapper.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/SunLocator{cpp,h}::
    * src/lib/TileLoader.h:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/TextureTile.{cpp,h}:
    * src/lib/TileLoader.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/MergedLayerPainter.{cpp,h}:

    Patch by David Roberts:

    - Patch to move the Merged Layer Painter into the TextureMapper class.
    - Removes all those strange occurances of SunLocator, etc. from 
      TileLoader and TextureTile.
    - Makes it possible to switch clouds and Tile IDs on and off later on ...

2008-04-19  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapThemeManager.{cpp,h}:
    * src/lib/MapTheme.h:
    * src/lib/geodata/scene/GeoSceneSection{cpp,h}::

    - Some initial work on MapThemeManager

2008-04-18  Patrick Spendrin  <ps_ml@gmx.de>

    * src/tilecreator/tccore.h
    * src/tilecreator/tccore{cpp,h}:
    
    - remove the unused destructor of the wrapper class
    
2008-04-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleModel{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLVectorTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLPenTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLBrushTagHandler.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneVector{cpp,h}:
    * src/lib/geodata/scene/GeoSceneLayer{cpp,h}:
    * data/maps/earth/srtm/srtm.dgm2:

    - Adding Pen and Brush tag to vector tag. 
    - Emulating old behaviour concerning colors with new DGML2 stuff.

2008-04-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLSourceFileTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLVectorTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneVector.{cpp,h}:
    * data/maps/earth/srtm/srtm.dgm2:

    - Adding vector data structure to DGML2, so we can port over 
      the colors of the vector features.

2008-04-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleLegendBrowser{cpp,h}::
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLSectionTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneSection{cpp,h}::
    * data/maps/earth/srtm/srtm.dgm2:

    - Bare port of LegendBrowser to DGML2
    - Compile DGMLHeadingHandler, too ...
    - Getting srtm.dgml2 closer to the real deal.

2008-04-17  Inge Wallin  <inge@lysator.liu.se>

	Remove unused member
	* src/lib/MarbleModel{cpp,h}: (MarbleModelPrivate::m_projection): removed

2008-04-17  Patrick Spendrin <ps_ml@gmx.de>

    * lib/TileCreator.h
    * tilecreator/CMakeLists.txt
    * main{cpp,h}:
    * tilecreator/tccore{cpp,h}:
    * tilecreator/tccore.h

    first try to make the tilecreator 

2008-04-17  Patrick Spendrin <ps_ml@gmx.de>

    Patch by: Claudiu Covaci
    
    * lib/ExtDateTime{cpp,h}:
    * lib/ExtDateTime.h
    * lib/MergedLayerPainter{cpp,h}:
    * lib/MergedLayerPainter.h
    * lib/SunLocator{cpp,h}:
    * lib/SunLocator.h
    * lib/geodata/GeoDataTest{cpp,h}:
    * lib/geodata/scene/GeoSceneZoom{cpp,h}:
    * lib/kml/KMLLabelStyleParser{cpp,h}:
    * plasmoid/latlonedit{cpp,h}:
    * plasmoid/worldclock{cpp,h}:
    * plasmoid/worldclock.h
 
    more Krazy issues
    
2008-04-16  Patrick Spendrin <ps_ml@gmx.de>

    * CMakeLists.txt:
    * lib/CMakeLists.txt:
    * lib/geodata/geodata_export.h:
    * lib/geodata/data/GeoDataContainer.h:
    * lib/geodata/handlers/dgml/DGMLElementDictionary.h:
    * lib/geodata/parser/GeoDataParser.h:
    * lib/geodata/parser/GeoParser.h:
    * lib/geodata/parser/GeoSceneParser.h:
    * lib/geodata/scene/GeoSceneDocument.h:
    * lib/geodata/scene/GeoSceneHead.h:
    * lib/geodata/scene/GeoSceneIcon.h:
    * lib/geodata/scene/GeoSceneProperty.h:
    * lib/geodata/scene/GeoSceneSettings.h:
    * lib/geodata/scene/GeoSceneZoom.h:

    fix geodata library part
    The export should be correct if this library should be used outside of libmarblewidget

2008-04-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleModel{cpp,h}::

    - Porting setMapTheme over to DGML2.
      (Currently #if 0 ed out but almost works already).
      This should later on get replaced altogether by 
      the Layer Management Class based mechanism.

    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLThemeTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLAuxillaryDictionary{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLNameTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLTextTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLSourceDirTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLInstallMapTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLAuxillaryDictionary.h:
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLMapTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLDescriptionTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLTargetTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLIconTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLHeadingTagHandler{cpp,h}::

    - Trimming away leading and trailing white spaces where needed

    * src/lib/geodata/scene/GeoSceneLayer.{cpp,h}:

    - Moving "role" from the AbstractDataset class up to the Layer.
    - Documenting the API 

    * src/lib/geodata/scene/GeoSceneMap.{cpp,h}:

    - Adding hasTextureLayer() and hasVectorLayer.

    * docs/dgml2.txt:
    * data/maps/earth/srtm/srtm.dgm2:

    - Moving "role" from the AbstractDataset class up to the Layer.
    - Bugfixes.

2008-04-17  Torsten Rahn  <rahn@kde.org>

    Patch by: Claudiu Covaci

    * src/lib/MarbleNavigationSettingsWidget.ui:
    * src/lib/MarbleViewSettingsWidget.ui:
    * src/lib/AbstractLayer/AbstractLayerData.h:
    * src/lib/SunLocator.h:
    * src/lib/ExtDateTime.h:
    * src/lib/geodata/GeoDataTest{cpp,h}::
    * src/lib/geodata/scene/GeoSceneZoom{cpp,h}::

    Krazy-compliance:
    - typo corrections
    - "use your own header first" fixes

2008-04-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler.h:
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.h:
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary{cpp,h}::
    * src/lib/geodata/scene/GeoSceneTexture.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneLayer.{cpp,h}:

    - Changing attribute names: plugin -> backend, type -> role;
    - Introduction of a type for each dataSet.
    - Type checking for dataSets against layer backend.

2008-04-17  Torsten Rahn  <rahn@kde.org>

    * data/maps/earth/srtm/srtm.dgm2:

    - Some DGML2 sample data.

2008-04-16  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapThemeManager.{cpp,h}:

    - we don't need MapThemeManager::open ...

    * src/lib/geodata/handlers/kml/KMLFolderTagHandler{cpp,h}::
    * src/lib/geodata/handlers/kml/KMLDocumentTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLHeadTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLSectionTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLLegendTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLSettingsTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLMapTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLDocumentTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLZoomTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler{cpp,h}::
    * src/lib/geodata/handlers/gpx/GPXgpxTagHandler{cpp,h}::
    * src/plasmoid/latloneditplugin{cpp,h}::
    * src/plasmoid/latlonedit{cpp,h}::
    * src/plasmoid/worldclock{cpp,h}::

    Patch by: Jens-Michael Hoffmann

    - Include own header first!

2008-04-16  Torsten Rahn  <rahn@kde.org>
    * src/lib/MapThemeManager.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/ControlView.h:

    Welcome MapThemeManager, welcome GeoSceneDocument!
    This is going to replace the MapTheme-kludge now
    and furthermore preparing for the new layer management

    - Adding MapThemeManager stub to ControlView
    - Parsing a dummy DGML2 file in the
      MarbleModel::setMapTheme() method as an initial 
      introduction of the whole GeoScene model

    * data/CMakeLists.txt:
    Adding a test dgml file. This needs to get renamed
    from .dgm2 to .dgml later on again once everything works
    as expected.

2008-04-11  Torsten Rahn  <rahn@kde.org>
    * docs/dgml2.txt:

    - A few adjustments to the DGML2 format.

    * src/lib/HttpDownloadManager{cpp,h}::
    * src/lib/MarbleModel{cpp,h}::
    * src/plasmoid/worldclock{cpp,h}::

    - Patch by Jens-Michael Hoffmann:
    Remove redundant null pointer checks

    * src/lib/geodata/handlers/dgml/DGMLTextureTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLSourceDirTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLInstallMapTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLLayerTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLTextTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.{cpp,h}:
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneTexture.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneLayer.{cpp,h}:

    - Basically completing work on DGML2 parser
    (except for Vector and Geodata tags which we'll take care of later on ..)

    * src/lib/geodata/data/GeoDataContainer{cpp,h}::
    * src/lib/geodata/data/GeoDataFeature.h:

    - Moving public Ctor for Abstract class to protected section ...

2008-04-03  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/scene/GeoSceneItem.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSection.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLIconTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLItemTagHandler{cpp,h}::
    * src/lib/geodata/scene/GeoSceneLegend{cpp,h}::
    * src/lib/geodata/scene/GeoSceneHead.h:
    * docs/dgml2.txt:

    - Completing parsing for GeoSceneItem and GeoSceneSection.

2008-04-03  Torsten Rahn  <rahn@kde.org>

    * src/lib/global.h:
    * src/marble.kcfg:
    * src/marble_part{cpp,h}::

    - Implemented the setting which enables the user to let
    Marble remember the last position on quit 
    (or uses the Home Location on startup instead).

2008-04-01  Torsten Rahn  <rahn@kde.org>

    * data/placemarks/cities.txt:
    * data/placemarks/cityplacemarks.cache:
    * data/placemarks/cityplacemarks.kml:

    - Corrected polish cities accents/letters by Médéric Boquien.

2008-04-01  Torsten Rahn  <rahn@kde.org>

    * data/placemarks/cities.txt:
    * data/placemarks/cityplacemarks.cache:
    * data/placemarks/cityplacemarks.kml:

    - Corrected polish cities accents/letters by Médéric Boquien.

2008-04-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleViewSettingsWidget.ui:
    * src/marble.kcfg:
    * src/marble_part{cpp,h}::

    - Enabling Quality Settings in the KDE Marble settings
    dialog.

2008-04-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleWidgetInputHandler{cpp,h}::

    - Added Quality Settings and a ViewContext to Marble Widget
    - Removed setQuickDirty(true) and quickDirty() as those 
      can now be perfectly emulated by choosing MapQuality::Low.
    - Honoring viewContexts for the middle mouse button / wheel

    * examples/example2.ui:

    - Removed "Quick Dirty" checkbox from the 2nd example.

    * src/lib/ViewParams.{cpp,h}:
    * src/lib/MarbleMap{cpp,h}::
    * src/lib/MarbleControlBox{cpp,h}::
    * src/lib/MarbleModel{cpp,h}::
    * src/lib/GlobeScanlineTextureMapper{cpp,h}::
    * src/lib/VectorComposer{cpp,h}::

    - Added Quality Settings to Marble Map

2008-03-26  Inge Wallin  <inge@lysator.liu.se>

	Remove some old FIXMEs.
	* src/lib/MarbleMap_p{cpp,h}: (m_modelIsOwned): new member
	* src/lib/MarbleMap{cpp,h}: (constructors): keep track of if the model
	is owned.
	(destructor): only delete model if it's owned.
	(update): removed
	(updateGps): Don't call update()
	(paint): removed
	(doPaint): renamed into paint()
	* src/lib/MarbleWidget{cpp,h}: (construct): Disabled a few connect()s
	* src/lib/MarbleTool{cpp,h}:: fixed some comments
	* src/lib/MercatorProjection{cpp,h}:(screenCoordinates): removed FIXME
	* src/lib/SunLocator.{h,cpp} (shading): use lon/lat instead of lat/lon
	* src/lib/MergedLayerPainter{cpp,h}: (paintSunShading): use new convention
	* src/lib/TextureTile{cpp,h}: (loadTile): Indent
	* src/lib/ViewParams{cpp,h}:: Remove 2 FIXMEs
	
	Remove unnecessary function
	* src/lib/MarbleWidget.{h,cpp} (paint): removed

	Remove some unneeded members.
	* src/lib/MeasureTool.h (m_visibleArea, m_centerLat, m_centerLon,
	m_radius): remove

	Fix repetition of drawing of the measure tool in some
	projections. Also change some function names.
	* src/lib/MeasureTool{cpp,h}: (drawDistancePath): Draw repetition
	(paintMeasurePoints)      -> paint
	(paintDistancePoints)     -> drawDistancePoints
	(paintMark)               -> drawMark
	(paintTotalDistanceLabel) -> drawTotalDistanceLabel
	(testbug)                 -> testBug
	* src/lib/MarbleMap{cpp,h}: (doPaint): call paint() instead of old name

2008-03-25  Torsten Rahn  <rahn@kde.org>

    * src/lib/global.h:
    - introducing several enums which are needed for settings. 
    (DistanceUnit, AngleUnit, MapQuality, LabelLocalization, 
     etc.)

    * src/marble_part.{cpp,h}:
    * src/lib/MarbleControlBox.ui:
    * src/lib/geodata/data/GeoDataPoint.h:
    * src/marble.kcfg:
    * src/marble_part.h:
    * src/ControlView.h:
    * src/settings.kcfgc:

    - kcfg-izing the settings. 
    - Making the volatileTileCacheLimit setting work.

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleMap.{cpp,h}:
    * src/lib/TileLoader.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:

    - fixed wrong assumption that the cache is measured in bytes
      internally. Just like QPixmapCache it gets measured 
      in kiloBytes instead. Beware: the UI specifies things in
      MegaByte.

    * src/lib/MarbleViewSettingsWidget.ui:
    * src/lib/MarbleNavigationSettingsWidget.ui:
    * src/lib/MarbleCacheSettingsWidget.ui:

    - Splitted up the settings ui and kcfg-ized it.
    - made some strings more user readable.

2008-03-19  Inge Wallin  <inge@lysator.liu.se>

	Get rid of unnecessary member
	* src/lib/VectorMap.{h,cpp}: Remove unnecessary member m_imgradius

	Get rid of unnecessary members.
	* src/lib/VectorMap.{h,cpp}: Remove unnecessary members
	m_rad2Pixel, m_planetAxis and make them local variables instead.

	Krazy fixes:Check for contractions in strings 
	* src/lib/geodata/handlers/dgml/DGMLMinimumTagHandler{cpp,h}:, 
	* src/lib/geodata/handlers/dgml/DGMLMaximumTagHandler{cpp,h}::
	Fix

	Get rid of unnecessary members.
	* src/lib/VectorMap.{h,cpp}: Remove unnecessary members
	m_boundary, m_centerLon and m_centerLat and make them local
	variables instead.

	Get rid of an unnecessary member.
	* src/lib/VectorMap.{h,cpp}: Get rid of m_radius and take a
	ViewportParams* as parameter where necessary.
	* src/lib/VectorComposer{cpp,h}: (paintBaseVectorMap): Use new calling
	conventions

2008-03-17  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/VectorMap.{h,cpp} (createPolyLine): Take ViewportParams
	instead of Projection.
	(getDetailLevel): Take radius parameter instead of using m_radius.

2008-03-13  Inge Wallin  <inge@lysator.liu.se>

	Improve API for VectorMaps (start of projection independence):
	* src/lib/VectorMap.{h,cpp}: Take a ViewportParams instead of
	ViewParams everywhere
	* src/lib/VectorComposer{cpp,h}: (paintVectorMap): Use new call
	conventions for the VectorMap

	Make drawPlaceMarks() projection independent.
	* src/lib/PlaceMarkPainter{cpp,h}: (drawPlaceMarks): 
	  - Make it projection independent
	  - Take a ViewportParams instead of a ViewParams.
	* src/lib/PlaceMarkPainter.h (drawPlaceMarks): Take a
	ViewportParams instead of a ViewParams.
	* src/lib/PlaceMarkLayout{cpp,h}: (paintPlaceFolder): Call
	drawPlaceMarks() using new signature.

	Krazy fixes: Check for proper include directives:
	* src/lib/gps/Track{cpp,h}:,
	* src/lib/kml/KMLContainer{cpp,h}:,
	* src/lib/geodata/data/GeoDataContainer{cpp,h}:,
	* src/lib/geodata/data/GeoDataPlacemark{cpp,h}:,
	* src/lib/geodata/parser/GeoDataParser{cpp,h}:,
	* src/lib/geodata/parser/GeoTagHandler{cpp,h}:,
	* src/lib/geodata/parser/GeoSceneParser{cpp,h}:,
	* src/lib/geodata/parser/GeoParser{cpp,h}::
	Fix include files

2008-03-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.{cpp,h}:
    * src/lib/geodata/GeoDataTest{cpp,h}::
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLAvailableTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLEnabledTagHandler.{cpp,h}:

    Basic Property parsing: name, available, enabled.

2008-03-11  Inge Wallin  <inge@lysator.liu.se>

	Finalize the Projection'ification of the Measuretool:
	*src/lib/MeasureTool{cpp,h}: (paintDistancePoints): Call
	paintDistancePoints
	(paintDistancePoints): new function
	(sphericalPaintMeasurePoints): removed
	(rectangularPaintMeasurePoints): removed
	(paintMark): Make it repeat in X if the projection allows it
	(rectangularPaintMark): removed
	
2008-03-10  Inge Wallin  <inge@lysator.liu.se>

	Get rid of a few unneeded members:
	* src/lib/MeasureTool.{h,cpp} (m_totalDistance): removed
	(m_rad2Pixel): removed
	(m_empty): removed
	(me_linecolor): removed

	Fix Krazy issues: proper include directives:
	/src/lib/MarbleWidget.h,
	/src/lib/FileStoragePolicy{cpp,h}:,
	/src/lib/MarbleMap{cpp,h}:,
	/src/lib/StoragePolicy.h,
	/src/lib/MarbleMap_p.h,
	/src/lib/TileCreatorDialog{cpp,h}:,
	/src/lib/MarblePlacemarkModel{cpp,h}:,
	/src/lib/CacheStoragePolicy{cpp,h}:,
	/src/lib/MarbleMap.h,
	/src/lib/DiscCache{cpp,h}:,
	/src/marble_part{cpp,h}::
	Fix include directives

2008-03-10  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/handlers/dgml/DGMLPropertyTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLSettingsTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLAttributeDictionary.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneIcon.h:
    * src/lib/geodata/scene/GeoSceneHead.h:
    * src/lib/geodata/scene/GeoSceneSettings.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneProperty.{cpp,h}:

    Starting to get properties parsed correctly.

2008-03-10  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/GeoDataTest{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.h:
    * src/lib/geodata/handlers/dgml/DGMLDiscreteTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLMaximumTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLMinimumTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLVisibleTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLZoomTagHandler.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneHead.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneZoom.{cpp,h}:

    Adding <visible>, <zoom>, <discrete>, <minimum> and <maximum>.

2008-03-09  Inge Wallin  <inge@lysator.liu.se>

	Use pre incrementation of iterators.
	* src/lib/MeasureTool{cpp,h}: (paintMeasurePoints),
	(sphericalPaintMeasurePoints),
	(rectangularPaintMeasurePoints),
	* src/lib/PlaceMarkManager{cpp,h}: (saveFile),
	(updateCacheIndex),
	* src/lib/PlaceMarkLayout{cpp,h}: (whichPlacemarkAt): 
	 pre increment iterator

	Unify painting of Measure Paths.  Now also works on Mercator.
	* src/lib/MeasureTool{cpp,h}: (paintMeasurePoints): use projection
	independent code to paint the paths
	(sphericalPaintMeasurePoints): remove code to draw paths
	(rectangularPaintMeasurePoints): remove code to draw paths
	
	Unify GridMap::createCircles.  Not fully projection'ed yet.
	* src/lib/GridMap.{h,cpp} (createCircles): New unified code
	(sphericalCreateCircles): removed
	(rectangularCreateCircles): removed
	(rectangularCreateCircle): handle full circles instead of half

2008-03-09  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLThemeTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLElementDictionary.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLTargetTagHandler.{cpp,h}:
    * src/lib/geodata/handlers/dgml/DGMLIconTagHandler.{cpp,h}:
    * src/lib/geodata/GeoDataTest{cpp,h}::
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneHead.{cpp,h}:

    Adding Theme, Target and Icon tag.

2008-03-09  Inge Wallin  <inge@lysator.liu.se>

	Store if a projection repeats in X direction in the Projection.
	* src/lib/AbstractProjection.h (repeatX): new function
	(setRepeatX): new function
	* src/lib/EquirectProjection{cpp,h}: (EquirectProjection): Set repeatX
	to true
	* src/lib/MercatorProjection{cpp,h}: (MercatorProjection): Set repeatX
	to true

	Improve Mercator layout esp. of placemarks significantly.
	* src/lib/MercatorProjection{cpp,h}: (screenCoordinates): Fix code
	layout
	* src/lib/MercatorProjection{cpp,h}: (screenCoordinates): Make
	projection calculations look alike over the projections
	* src/lib/MercatorProjection{cpp,h}: (screenCoordinates): Fix
	projection calculation

	Continue towards pure Projection usage.
	* src/lib/MeasureTool.{h,cpp} (drawPath): Remove function

	Get rid of unnecessary members in GridMap.
	* src/lib/GridMap.{h,cpp} (resizeMap): remove function
	(m_imageWidth, m_imageHeight, m_imageRadius): remove members
	* src/lib/MarbleModel{cpp,h}: (resize): Don't call Gridmap::resizeMap

2008-03-08  Inge Wallin  <inge@lysator.liu.se>

	Simplify the GridMap
	* src/lib/GridMap.{h,cpp}:
	 - Remove private members m_radius, m_precision and m_planetAxis
	 - Use ViewportParams instead of ViewParams everywhere.
	 - send a precision parameter to all CreateCircle functions.
	* src/lib/MarbleModel{cpp,h}:: Use new call conventions (ViewportParams)
	
2008-03-08  Torsten Rahn  <rahn@kde.org>

    * src/lib/geodata/handlers/dgml/DGMLHeadTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLDocumentTagHandler{cpp,h}::
    * src/lib/geodata/handlers/dgml/DGMLNameTagHandler{cpp,h}::
    * src/lib/geodata/GeoDataTest{cpp,h}::
    * src/lib/geodata/parser/GeoParser{cpp,h}::
    * src/lib/geodata/CMakeLists.txt:
    * src/lib/geodata/scene/GeoSceneHead.{cpp,h}:
    * src/lib/geodata/scene/GeoSceneSettings.h:
    * src/lib/geodata/scene/GeoSceneDocument.{cpp,h}:

    Adding Name and Description tag - description tag doesn't get 
    recognized properly due to parent identification not working 
    correctly yet ...

2008-03-07  Inge Wallin  <inge@lysator.liu.se>

	Enable the new projection based measuretool.
	* src/lib/MeasureTool{cpp,h}: (drawDistancePath): use drawPath()
	instead of individual functions.
	(drawPath): draw a red line instead of white crosses.
	* src/lib/MercatorProjection{cpp,h}: (screenCoordinates): Bugfix for
	the +- issue

2008-03-06  Torsten Rahn  <rahn@kde.org>

	Fix transformation bugs where + and - were mixed up.
	* src/lib/SphericalProjection{cpp,h}: (screenCoordinates): bugfix
	* src/lib/EquirectProjection{cpp,h}: (screenCoordinates): bugfix

2008-03-07  Inge Wallin  <inge@lysator.liu.se>

	Introduce new parameter to the Projections: type of coordinates
	* src/lib/AbstractProjection.h (CoordinateType): New enum type
	* src/lib/SphericalProjection.{h,cpp} (screenCoordinates): new
	parameter CoordinateType
	* src/lib/EquirectProjection.{h,cpp} (screenCoordinates): new
	parameter CoordinateType
	* src/lib/MercatorProjection.{h,cpp} (screenCoordinates): new
	parameter CoordinateType
	* src/lib/MeasureTool{cpp,h}: (drawPath): Use new call conventions

2008-03-06  Torsten Rahn  <rahn@kde.org>

    * Translation issue as reported by icwiener.
    

2008-03-06  Inge Wallin  <inge@lysator.liu.se>

	Krazy fixes (Check for spelling errors):
	* src/lib/AbstractLayer/AbstractLayerData.h (AbstractLayerInterface),
	* src/lib/geodata/parser/GeoParser.h (class GeoParser),
	* src/lib/geodata/handlers/gpx/GPXElementDictionary{cpp,h}::
	Fix spelling errors

	Krazy fixes (Check for single char QStrings).
	* src/lib/geodata/parser/GeoParser{cpp,h}: (dumpParentStack): Use chars

2008-03-05  Inge Wallin  <inge@lysator.liu.se>

	Let all projections take angles in radians instead of degrees
	* src/lib/SphericalProjection{cpp,h}: (screenCoordinates),
	* src/lib/EquirectProjection{cpp,h}: (screenCoordinates),
	* src/lib/MercatorProjection{cpp,h}: (screenCoordinates): Take angles
	in radians
	* src/lib/MarbleMap{cpp,h}: (screenCoordinates): Convert to radians
	* src/lib/MeasureTool{cpp,h}: (drawPath): Don't convert to degrees.

	Commit unfinished code.
	* src/lib/MeasureTool.{h,cpp} (drawPath): New function, not yet called.

2008-03-04  Inge Wallin  <inge@lysator.liu.se>

	Bugfix
	* src/lib/MercatorProjection{cpp,h}: (screenCoordinates): Convert both
	lon and lat from degrees to radians.

	Apidox
	* src/lib/AbstractProjection.h: Document all functions and
	parameters
	
	Cleaning
	* src/lib/Quaternion{cpp,h}:: Follow coding standards

2008-03-02  Inge Wallin  <inge@lysator.liu.se>

	Cleaning
	* src/lib/MeasureTool.{h,cpp}: cleaning

	Prepare the Measuretool for use of the Projection classes.
	* src/lib/MeasureTool.{h,cpp}: Take ViewportParams everywhere
	instead of ViewParams.
	* src/lib/MarbleMap{cpp,h}: (doPaint): Send ViewportParams parameter.

2008-03-01  Inge Wallin  <inge@lysator.liu.se>

	Place placemarks using the new projection classes
	* src/lib/AbstractProjection.{h,cpp} (screenCoordinates),
	* src/lib/SphericalProjection.{h,cpp} (screenCoordinates),
	* src/lib/EquirectProjection.{h,cpp} (screenCoordinates),
	* src/lib/MercatorProjection.{h,cpp} (screenCoordinates): 
	New overloaded function
	* src/lib/PlaceMarkLayout{cpp,h}: (locatedOnScreen): Use
	currentProjection->screenCoordinates instead of own code.

2008-02-28  Torsten Rahn  <rahn@kde.org>

    * LICENSE.txt:
    * ChangeLog:

    - License Change: LGPL2 -> LGPL2+ 
      as communicated with all other developers.

2008-02-26  Torsten Rahn  <rahn@kde.org>

    * docs/paintingmaps.txt:
    * src/lib/GeoPainter.h:
    - Initial "draft" for GeoPainter.
      TODO: Implement the case for isGeoProjected = false 
      first and ignore the case true until the LMC is in 
      place. 
      See docs/paintingmaps.txt for details. 

2008-02-26  Torsten Rahn  <rahn@kde.org>

    * src/lib/geoscene/GeoSceneTest{cpp,h}::
    * src/lib/geoscene/parser/GeoSceneTagHandler{cpp,h}::
    * src/lib/MarblePlacemarkModel{cpp,h}::
    * src/lib/geodata/GeoDataTest{cpp,h}::
    * docs/dgml2.txt:

    - Minor fixes and typos

    * src/lib/geodata/parser/GeoDataParser{cpp,h}::
    * src/lib/geodata/parser/GeoDataParser.h:

    - Fixes by Nikolas Zimmermann after I had 
      pointed out some issues with the previous API.

2008-02-25  Inge Wallin  <inge@lysator.liu.se>

	Krazy fixes:
	* src/lib/TileLoader.h,
	* src/lib/MarbleModel{cpp,h}:,
	* src/lib/geodata/handlers/kml/KMLElementDictionary{cpp,h}:,
	* src/lib/geodata/handlers/gpx/GPXElementDictionary{cpp,h}:,
	* src/lib/geodata/parser/GeoDataParser{cpp,h}:,
	* src/lib/geodata/parser/GeoDataParser.h,
	* src/lib/geodata/GeoDataTest{cpp,h}:,
	* src/lib/geoscene/handlers/dgml/DGMLElementDictionary{cpp,h}:,
	* src/lib/geoscene/parser/GeoSceneParser{cpp,h}:,
	* src/lib/geoscene/parser/GeoSceneParser.h,
	* src/lib/geoscene/GeoSceneTest{cpp,h}::
	  Fix spelling errors

2008-02-24  Inge Wallin  <inge@lysator.liu.se>

	Krazy fixes:
	* src/lib/HttpFetchFile.h,
	* src/lib/MarblePlacemarkModel.h,
	* src/lib/TilereatorDialog.h,
	* src/lib/TileLoader.h,
	* src/lib/geodata/data/GeoDataIconStyle.h:
	  Check for C++ ctors that should be declared 'explicit'

	Krazy fixes:
	* src/lib/MapTheme{cpp,h}:,
	* src/lib/TinyWebBrowser{cpp,h}:,
	* src/lib/DiscCache{cpp,h}:,
	* src/lib/FileStoragePolicy{cpp,h}:,
	* src/lib/geoscene/data/GeoSceneMapTheme{cpp,h}:: 
	  Check for single char QStrings better written as a QChar

2008-02-17  Inge Wallin  <inge@lysator.liu.se>

	Move current projection to ViewportParams from MarbleMap.
	* src/lib/MarbleMap{cpp,h}: (MarbleMapPrivate): Remove all projections 
	(construct): Don't init.
	(setProjection): Don't set currrentProjection;
	(geoCoordinates, screenCoordinates): new calling conventions
	* src/lib/ViewParams{cpp,h}: (currentProjection): New function
	* src/lib/ViewportParams.{h,cpp} (currentProjection): New function
	(setProjection): initialize m_currentProjection
	(s_*Projection): new static members
	
	Follow the coding standards
	* src/lib/PlaceMarkLayout{cpp,h}:: cleaning

2008-02-16  Inge Wallin  <inge@lysator.liu.se>

	Clean up a bit
	* src/lib/MarbleMap{cpp,h}: (geoCoordinates): remove #if'ed out code
	 (screenCoordinates): remove #if'ed out code
	
2008-02-15  Carlos Licea  <carlos.licea@kdemail.net>
    *PlaceMarkPainter{cpp,h}:: Fix my previous verbosiness, thanks Jeremy!.

2008-02-15  Carlos Licea  <carlos.licea@kdemail.net>
    Let there be placemarks.
    *PlaceMarkPainter: weird, for some reason OR doesn't work
     in a switch.

2008-02-16  Inge Wallin  <inge@lysator.liu.se>

	Clean up after the last few changes.
	* src/lib/MarbleWidget{cpp,h}: (setMapTheme): Clean up
	* src/lib/MarbleMap.{h,cpp} (misc): Clean up
	(repaint): removed
	(update):  removed
	* src/lib/ViewParams{cpp,h}: (ViewParams, centerCoordinates): Clean up

	Activate the Projection classes!
	* src/lib/ViewParams.{h,cpp} (viewport): new function
	* src/lib/ViewportParams.{h,cpp} (centerCoordinats): is now const
	* src/lib/MarbleMap{cpp,h}: (MarbleMapPrivate): Add 3 projection
	members and one pointer currentProjection.
	(construct): init currentProjection
	(setProjection): set currentProjection
	(screenCoordinates): use current projection class
	(geoCoordinates): use current projection class
	* src/lib/AbstractProjection.h (screenCoordinates): make params const
	* src/lib/SphericalProjection.{h,cpp} (screenCoordinates): make params const
	(geoCoordinates): make params const
	* src/lib/EquirectProjection.{h,cpp} (screenCoordinates): make params const
	(geoCoordinates): make params const
	* src/lib/MercatorProjection.{h,cpp} (screenCoordinates): make params const
	(geoCoordinates): make params const

2008-02-15  Inge Wallin  <inge@lysator.liu.se>

	Add the two last projections.
	* src/lib/EquirectProjection.{h,cpp}: new files
	* src/lib/MercatorProjection.{h,cpp}: new files
	* src/lib/CMakeLists.txt: include the new files
	
	Control the Sun settings in the KDE GUI.
	Patch by Christian Banik.  Thanks!
	* src/marble_part.h (showSun): new function
	* src/marble_part{cpp,h}: (showSun): new function
	(copyMap): activate the show_sun action.
	* src/marble_part.rc (show_sun): new action
	* src/marbleui.rc (show_sun): new action

	First shot at new projection classes.
	* src/lib/AbstractProjection.{h,cpp}: new files
	* src/lib/SphericalProjection.{h,cpp}: new files
	* src/lib/CMakelists.txt: add new files

	Use ViewportParams everywhere
	* src/lib/ViewportParams.{h,cpp} (planetAxis): Used to be axis
	* src/lib/ViewParams.{h,cpp} (m_viewport): New member
	(projection, radius, planetAxis): new getters/setters
	* src/lib/AbstractLayer/AbstractLayer{cpp,h}:,
	* src/lib/AbstractLayer/AbstractLayerData{cpp,h}:,
	* src/lib/AbstractScanlineTextureMapper{cpp,h}:,
	* src/lib/FlatScanlineTextureMapper{cpp,h}:,
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:,
	* src/lib/GridMap{cpp,h}:,
	* src/lib/MarbleMap{cpp,h}:,
	* src/lib/MarbleModel{cpp,h}:,
	* src/lib/MeasureTool{cpp,h}:,
	* src/lib/PlaceMarkLayout{cpp,h}:,
	* src/lib/PlaceMarkPainter{cpp,h}:,
	* src/lib/TextureColorizer{cpp,h}:,
	* src/lib/VectorComposer{cpp,h}:,
	* src/lib/VectorMap{cpp,h}::
	Use the new calls in ViewParams.

	Actually implement the methods.
	* src/lib/ViewportParams.h (ViewportParams::m_size): new member
	* src/lib/ViewportParams{cpp,h}:: Implement all functions	

	New class ViewportParams that will be used in the new
	AbstractProjection
	* src/lib/ViewportParams.h: New file
	* src/lib/ViewportParams{cpp,h}:: New file
	* src/lib/CMakeLists.txt: Include the new files

2008-02-13  Carlos Licea  <carlos.licea@kdemail.net>
    Added the Mercator Projection to the placemarks.
    *src/lib/PlaceMarkPainter{cpp,h}:: added Mercator to the switch.
    *src/lib/PlaceMarkLayout{cpp,h}:: added Mercator case to the switch
     to calculate the position of a given placemark.
    *src/lib/MarbleMap{cpp,h}:: corrected the calculation of the y in
     screenCoordinates function.

2008-02-14  Torsten Rahn  <rahn@kde.org>

    * data/placemarks/HOWTO-cities.txt:
      Added a small HOWTO for creating the kml/cache files.
    * data/placemarks/cityplacemarks.cache:
      Imported the latest czech changes.
    * data/placemarks/cityplacemarks.kml:
      generated an updated KML file from cities.txt
    * src/lib/XmlHandler{cpp,h}::
      fixed a bug in XmlHandler which didn't honor 
      MarblePlacemarks after its introduction some time ago ("d'oh").

2008-02-13  Carlos Licea  <carlos.licea@kdemail.net>
    * src/lib/MeasureTool{cpp,h}:: continue trying to fix the interpolation of the
    measure of two points which crosses the dateline. Not solved yet,
    although I still have to deeply analize it.
    * src/lib/MarbleMap{cpp,h}:: added Mercator case to screenCoordinates and
    geoCoordinates.
    * src/lib/TextureColorizer{cpp,h}:: make it work for the Mercator projection.
    * src/lib/FlatScanlineTextureMapper{cpp,h}:: let it work in the mercator projection
    checking what projection are we painting, Mercator or Equirectangular.
    * global.h: add Mercator projection to the enum Projection.
    * src/lib/MarbleModel{cpp,h}:: added the Mercator projection as an option
    for the texture.

2008-02-12  Inge Wallin  <inge@lysator.liu.se>

	Fix class documentation after the split widget -> widget + map
	* src/lib/MarbleWidget.h: Fix class documentation
	* src/lib/MarbleMap.h: Fix class documentation
	The split is now completely DONE.
	
	Only show tile creation dialog in the Widget, not the Map
	* src/lib/marbleMap.h (creatingTilesstart): removed
	* src/lib/MarbleMap{cpp,h}: (construct): Initialize width, height here
	(construct): Remove connect() for signal creatingTilesStart 
	(creatingTilesStart): removed

2008-02-11  Torsten Rahn  <rahn@kde.org>

    * data/CMakeLists.txt:
    * src/lib/TextureColorizer.{cpp,h}:
    * src/lib/texturepalette{cpp,h}:: deleted

    Patch by Ismael Asensio to make marble use the .leg files 
    instead of using the hardcoded values in texturepalette{cpp,h}:.

2008-02-10  Inge Wallin  <inge@lysator.liu.se>

	Fix issue with integer overflow and some cleaning
	* src/lib/GlobeScanlineTextureMapper{cpp,h}: (mapTexture): Use qint64
	* src/lib/TextureColorizer{cpp,h}: (colorize): Use qint64
	* src/lib/MarbleMap{cpp,h}: (drawFog): call globeCoversImage
	* src/lib/VectorMap{cpp,h}: (sphericalCreateFromPntMap): use doubles
	(sphericalPaintBase): use doubles
	* src/lib/PlaceMarkLayout{cpp,h}:: cleaning

2008-02-09  Inge Wallin  <inge@lysator.liu.se>

	API change, and remove irritating qDebug()s
	* src/lib/MarbleWidget.{h,cpp} (setProjection): Take Projection
	argument
	(zoomView): Fix bug ==  ->  =
	(*): Disable irritating qDebug()s.
	* src/lib/MarbleMap.{h,cpp} (setProjection): Take Projection
	argument
	(*): Disable irritating qDebug()s.
	(enableInput, disableInput): removed
	* src/marble_part{cpp,h}:: Call with Projection parameters
	* src/lib/MarbleModel{cpp,h}: (*): Disable irritating qDebug()s.
	* src/lib/MarbleControlBox.{h,cpp}: projection signals and slots
	take a Projection
	* src/lib/PlaceMarkLayout{cpp,h}:: Remove irritating qDebug()s.
	* src/lib/TileLoader{cpp,h}:: Remove irritating qDebug()s.

	Fix all zoom issues.
	* src/lib/MarbleWidget{cpp,h}: (zoomView): Use MarbleMap correctly
	(zoomIn, zoomOut): call functions in MarbleMap.
	* src/lib/MarbleMap{cpp,h}: (zoomView): Do the correct thing.

	Fix resizing and projection changes for real
	* src/lib/MarbleWidget{cpp,h}: (resizeEvent): Use MarbleMap correctly
	(setProjection):  Use MarbleMap correctly
	* src/lib/MarbleMap{cpp,h}: (doResize): Do the correct thing.
	(setProjection): Do the correct thing.
	(drawAtmosphere): Use globeCoversImage
	(globeCoversImage): New function
	* src/lib/MarbleMap.h (globeCoversImage): New function

	Make the Measure Tool work again.
	* src/lib/MarbleMap.{h,cpp} (measureTool): New function
	* src/lib/MarbleWidget{cpp,h}:: Remove all traces of the local
	MeasureTool.

	Draw fog is only relevant in the Map.
	* src/lib/MarbleWidget.{h,cpp} (drawFog): Only call drawFog in the map. 
	* src/lib/MarbleMap{cpp,h}: (drawFog): Clean

2008-02-08  Inge Wallin  <inge@lysator.liu.se>

	Active Region is only relevant in the Widget
	* src/lib/MarbleMap.{h,cpp}: remove activeRegion from here
	* src/lib/MarbleWidget.{h,cpp}: move activeRegion here

	Remove unnecessary code.
	* src/lib/MarbleWidget.{h,cpp} (setActiveRegion): deleted
	(setBoundingBox): deleted
	* src/lib/MarbleMap{cpp,h}:: cleaning
	* src/lib/AbstractLayer/AbstractLayer{cpp,h}:: cleaning

	Make flat projection work
	* src/lib/MarbleWidget{cpp,h}:: Don't use local m_viewParams for
	projection.
	* src/lib/MarbleMap.{h,cpp} (viewParams): New method

	More preparation
	* src/lib/MarbleWidget{cpp,h}:: Clean away intermediate code from the
	Widget/Map separation.

2008-02-07  Inge Wallin  <inge@lysator.liu.se>

	More preparation
	* src/lib/ViewParams{cpp,h}:: Cleaning

	Cleaning and preparation for next step.
	* src/lib/ClipPainter.{h,cpp}: Cleaning and documentation.

	Next step in separation of MarbleWidget.
	* src/lib/MarbleWidget{cpp,h}:: Make the legend work again by making
	all the setters and getters call the equivalent function in
	MarbleMap. 

2008-02-07  Torsten Rahn  <rahn@kde.org>

    * Messages.sh:
    - Fix for untranslatable string by Burkhard Lück

2008-02-05  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/MarbleWidget{cpp,h}:: Continue adapting MarbleWidget to the
	new MarbleMap.

	Fix the pan bug that was left from previous commits so that tackat
	can work again.
	* src/lib/MarbleWidget{cpp,h}: (rotateTo): Delegate to MarbleMap
	* src/lib/MarbleMap{cpp,h}:: cleaning
	* src/lib/MarbleWidgetInputHandler{cpp,h}:: cleaning

2008-02-04  Inge Wallin  <inge@lysator.liu.se>

	Hopefully fix the crash in goHome in the qt only version.
	* src/lib/MarbleWidget{cpp,h}: (class MarbleWidgetPrivate): Disable
	m_homePoint and m_homeZoom.
	(home, setHome*2, goHome): Immediately call same in MarbleMap.
	

	* src/lib/MarbleMap{cpp,h}: (construct): Don't connect to
	enableInput() since that slot is only relevant to the widget.

	More fixes in the MarbleWidget / MarbleMap split.
	* src/lib/MarbleMap.h: Make MarbleWidget a friend of MarbleMap
	* src/lib/MarbleWidget{cpp,h}:: More fixes for MarbleWidget to use
	MarbleMap.
	* src/lib/MarbleWidgetInputHandler{cpp,h}:: indent better

2008-02-03  Inge Wallin  <inge@lysator.liu.se>

	Start to use the MarbleMap in MarbleWidget.
	NOTE: THIS DOESN'T FULLY WORK!
	      I have to switch computer now, and I'm really sorry about
	      this.  Navigation with the keyboard works, but not yet with
	      the mouse, as the integration is not yet 100%.	
	* src/lib/MarbleWidget{cpp,h}: (class MarbleWidgetPrivate): Contain a
	MarbleMap.
	(class MarbleWidget): Use the MarbleMap whereever possible.
	* src/lib/MarbleMap.h (doPaint): now a public function.
	* src/lib/MarbleMap{cpp,h}:: some updates for use in MarbleWidget.
	* src/lib/ViewParams{cpp,h}:: Cleaning
	
2008-02-02  Inge Wallin  <inge@lysator.liu.se>

	First step of the new widgetless marble
	* CMakeLists{cpp,h}:: Add MarbleMap.{h,cpp}
	* MarbleMap.{h,cpp}: New files
	* src/lib/MarbleModel.{h,cpp} (MarbleModel): Make parent a QObject
	(setMapTheme): Use a QObject instead of a QWidget

2008-02-01  Inge Wallin  <inge@lysator.liu.se>

	Don't include unnecessary files.
	* src/lib/MarbleWidget.{h,cpp}

	Make all uses of BoundingBox in parameters references.
	* src/marble_part{cpp,h}::
	* src/MarbleTest{cpp,h}:
	* src/lib/BoundingBox{cpp,h}:
	* src/lib/FileViewModel.{h,cpp}
	* src/lib/MarbleControlBox{cpp,h}:
	* src/lib/MarbleLegendBrowser{cpp,h}:
	* src/lib/MarbleModel.{h,cpp}
	* src/lib/AbstractLayer/AbstractLayer.{h,cpp}
	* src/lib/AbstractLayer/AbstractLayerContainer.{h,cpp}
	* src/lib/AbstractLayer/AbstractLayerData.{h,cpp}
	* src/lib/AbstractLayer/AbstractLayerInterface.h
	* src/lib/gps/GpsLayer.{h,cpp}
	* src/lib/gps/GpxFile.{h,cpp}
	* src/lib/gps/GpxFileModel.{h,cpp}
	* src/lib/gps/Route.{h,cpp}
	* src/lib/gps/RouteContainer.{h,cpp}
	* src/lib/gps/Track.{h,cpp}
	* src/lib/gps/TrackContainer.{h,cpp}
	* src/lib/gps/TrackSegment.{h,cpp}
	* src/lib/gps/WaypointContainer.{h,cpp}
	Bounding boxes are now referenses.

2008-02-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme{cpp,h}::
    * src/lib/MarbleWidget{cpp,h}::
    * src/lib/TileCreator{cpp,h}::
    * src/lib/MarbleControlBox{cpp,h}::
    * src/lib/MarbleModel{cpp,h}::
    * data/maps/earth/citylights/citylights.dgml:
    * data/maps/earth/plain/plain.dgml:
    * data/maps/earth/srtm/srtm.dgml:
    * data/maps/earth/bluemarble/bluemarble.dgml:

    - Instead of searching through "maps/earth"
      we are searching through "maps" now.

    If you created your own maps this will 
    require you to set the "prefix" in the 
    .dgml file e.g. to "earth/bluemarble"

2008-01-29  Torsten Rahn  <rahn@kde.org>

    * src/lib/FlatScanlineTextureMapper{cpp,h}::
    - Fixing valgrind's finding of "invalid write (4 bytes)".

2008-01-29  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme.{cpp,h}:
    * src/lib/AbstractScanlineTextureMapper{cpp,h}::

    - Fixing a few memleaks and uninitialized values

2008-01-29  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme.{cpp,h}:
    * src/lib/MarbleLegendBrowser{cpp,h}::
    * src/lib/FlatScanlineTextureMapper{cpp,h}::
    * data/bitmaps/border_1.png:
    * data/bitmaps/border_2.png:
    * data/bitmaps/river.png:
    * data/bitmaps/lake.png:
    * data/maps/earth/citylights/citylights.dgml:
    * data/maps/earth/plain/plain.dgml:
    * data/maps/earth/srtm/srtm.dgml:
    * data/maps/earth/bluemarble/bluemarble.dgml:
    * data/legend.html:

    - Implementing "name", "checkable" and "spacing"
      attribute for LegendSections.
    - Making existing dgml files use it.
    - Changing the marker to "...:all" to allow 
      for custom placement of each section in the 
      legend.html.

2008-01-28  Carlos Licea  <carlos.licea@kdemail.net>
    * data/credits_authors.html:
    -Changed my e-Mail to carlos.licea@kdemail.net
    * src/lib/FlatScanLineTextureMapper{cpp,h}::
    -Beggin the implementation of the Mercator projection.    

2008-01-28  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme.{cpp,h}:
    * src/lib/MarbleLegendBrowser.{cpp,h}:
    * data/maps/earth/citylights/citylights.dgml:
    * data/maps/earth/bluemarble/bluemarble.dgml:

    - Allowing a completely custom legend.html per theme
    - changing the relative position of the pixmap path
      in the dgml file to allow access to the data/bitmaps
      directory.

2008-01-28  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme.{cpp,h}:
    * src/lib/MarbleLegendBrowser.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/MapTheme.h:
    * data/maps/earth/srtm/srtm.dgml:
    * data/legend.html:
    * data/CMakeLists.txt:

    - Continuing Inge's work and extending the 
    MarbleLegendBrowser to support custom legend items.

2008-01-28  Torsten Rahn  <rahn@kde.org>

    * src/lib/MapTheme{cpp,h}::
    * data/svg/application-x-marble.svg:
    * data/svg/application-x-marble.png:
    * data/CMakeLists.txt:

    - Adding Nuno Pinheiro's Marble Mimetype icon. 
    - Using it as a standard preview icon for map themes.

2008-01-27  Torsten Rahn  <rahn@kde.org>

	* src/lib/MarbleControlBox.ui: set the locationListView's 
	property "uniformItemSizes" "true". This solves the 
	problem of delayed item appearance.
	Thanks to Trolltech's Alessandro Portale for coming up
	with this suggestion.
	
2008-01-27  Inge Wallin  <ingwa@c83-252-211-36.bredband.comhem.se>

	Step 2 for definition of the legend in DGML:
	* src/lib/MarbleLegendBrowser.{h,cpp} (MarbleLegendBrowser):
	Insert generated HTML into the legend
	(setMarbleWidget): New function
	(genSectionsHtml): New function
	All: follow coding standards
	* src/lib/MarbleControlBox{cpp,h}: (addMarbleWidget): Set the marble
	widget for the legend browser
	* data/legend.html: Add a marker where generated contents should
	be inserted
	
2008-01-26  Inge Wallin  <inge@lysator.liu.se>

	Start of definition of the Legend in DGML.
	* src/lib/MapTheme{cpp,h}: (class LegendSection): new class
	(class LegendItem): new class
	(open): parse legend as well
	(parseLegend): new function
	(parseLegendSection): new function
	(parseLegendItem): new function

2008-01-25  Torsten Rahn  <rahn@kde.org>

    * src/lib/CompassFloatItem{cpp,h}::
      - Some slight fix to the compass after the issue 
        got pointed out by Jason Harris
    * src/lib/SunLocator{cpp,h}::
      - Some shifting magic by Frederik Hoeglund
    * src/lib/MergedLayerPainter{cpp,h}::
      - Patch by David Roberts to let MergedLayerPainter 
        deal with 8bit grayscale cloud images
    * cloudtiles/tile_clouds.pl:
      - Perl script to download the real time cloud image
        and tile it by David Roberts.

2008-01-24  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget{cpp,h}::
        - Fixing embarassing bug which resulted in a 
          severe slowdown from tile level 9 up.
    * src/lib/MapScaleFloatItem{cpp,h}::
        - Some dirty fix for the below-1km issue with the 
          scale bar (this class needs better documentation).
    * src/lib/MergedLayerPainter{cpp,h}::
        - Status: FIX->TODO

2008-01-22  Torsten Rahn  <rahn@kde.org>

    * src/lib/MergedLayerPainter.{cpp,h}:
    - Shading speedup by linear interpolation.
      I'd estimate it's about four times as fast - 
      of course at expense of clear code :-/ 

2008-01-22  Inge Wallin  <inge@lysator.liu.se>

	Make files follow coding standards again:
	* src/lib/ExtDateTime.{h,cpp}
	* src/lib/MarbleWidget{cpp,h}:
	* src/lib/MergedLayerPainter.{h,cpp}
	* src/lib/SunControlWidget{cpp,h}:
	* src/lib/SunLocator{cpp,h}:
	* src/lib/TextureTile.{h,cpp}
	* src/lib/TileLoader{cpp,h}:
	
2008-01-22  Torsten Rahn  <rahn@kde.org>

    * src/lib/SunLocator.{cpp,h}:
    * src/lib/TextureTile.{cpp,h}:
    * src/lib/SunControlWidget.{ui,cpp,h}: 
    * src/lib/ExtDateTime.{cpp,h}:
    * src/lib/MergedLayerPainter.{cpp, h}:
    * src/lib/MarbleWidget{cpp,h}:
    * src/lib/TileLoader{cpp,h}:
    * src/lib/CMakeLists.txt
    
    - Another great patch set by David Roberts:
        - Speed Control implementation, buttons -> slider
        - Factored out MergedLayerPainter
        - ExtDateTime now actively updates itself, and in turn all 
          centering / painting updates are triggered from it (i.e. no more 
          QTimers in SunLocator or SunControlWidget). 
        - SunLocator also updates its own position as needed now, rather than 
          updatePosition() being called externally.

2008-01-21  Torsten Rahn  <rahn@kde.org>

    * docs/layermanagement.txt: 
	
    - Adding some more concepts:
        - DGML 1.2: basic structure and an example
        - rendering order

2008-01-21  Torsten Rahn  <rahn@kde.org>

    * docs/layermanagement.txt: 

    - Initial overview over planned layer management class ("LMC") concept.

    * src/lib/MarbleWidget.{cpp,h}:

    - Deprecated method to create fog (it's unfortunately too slow 
      as is, but I commit it to get it taken into consideration for the LMC).

    * src/lib/MarbleWidget.h:
    * src/lib/SunLocator.{cpp,h}:

    - Patch by David Roberts to disable InputHandler

2008-01-21  Torsten Rahn  <rahn@kde.org>

    * src/QtMainWindow.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/TileLoader.{cpp,h}:
    * src/lib/SunLocator.{cpp,h}:
    * src/lib/SunControlWidget.{ui,cpp,h}:
    * src/lib/ExtDateTime.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/MarblePlacemarkModel{cpp,h}::
    * src/lib/TextureTile{cpp,h}::
    * src/lib/PlaceMarkLayout{cpp,h}::
    * src/ControlView.h:

    More patches by David Roberts:
    - code cleanup, moved some more stuff into SunLocator.
    - implemented the date/time setting in the sun control. Added a "now" 
      button to allow the user to return to the current time. 
    - changed the center sun to actively follow the sun rather than just 
      as a one time centering. 

2008-01-21  Inge Wallin  <inge@lysator.liu.se>

	Remove warnings.
	* src/lib/MarbleWidget.{h,cpp} (construct): Don't take a widget.
	* src/lib/TileCreator{cpp,h}:: use uint where appropriate, 
	* src/lib/GridMap{cpp,h}: (sphericalCreateCircle): use Q_UNUSED

	Cleaning
	* src/lib/SunLocator{h,cpp}: Follow coding standards
	* src/lib/SunControlWidget.{h,cpp}: Follow coding standards
	* src/lib/TileCreator{cpp,h}:: Cleaning
	
	Make the BoundingBox usable.
	* src/lib/BoundingBox{cpp,h}: (BoundingBox::init): Fix all bugs.

2008-01-20  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/SunControlWidget.{cpp,h,ui}:
    * src/ControlView.h:
    * src/QtMainWindow.h:

    - Making the SunControlWidget dialog 
    non-modal, so the user can switch settings while
    panning the globe.
    - Adding a combobox that controls the actual 
    sun shading. The "Show" button in the dialog
    has the purpose to show a "sun position icon"
    in the future. "Center" centers the globe on 
    that position.
    - Renaming some methods and properties
    accordingy (showSun -> showSunShading).

2008-01-20  Inge Wallin  <inge@lysator.liu.se>

	Fix bug with max/min zoom, by moving a check.
	* src/lib/MarbleWidget{cpp,h}: (MarbleWidgetPrivate): Remove
	m_minimumzoom, m_maximumzoom
	(MarbleWidget::zoomView): Check for over- and underflow, cleaning
	(MarbleWidget::zoomViewBy): Simplify by removing check.
	(misc functions): cleaning
	* src/lib/MarbleWidgetInputHandler{cpp,h}: (Misc functions): cleaning

2008-01-20  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/SunLocator.{cpp,h}:
    * src/lib/TextureTile.{cpp,h}:
    * src/lib/TileLoader.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/lib/SunControlWidget.ui:
    * src/ControlView.h:

    All patches by David Roberts:
    - Adding Torsten Rahn's .ui file to the UI
    - Implementation of "Center" and "Show" button functionality.
    - Moved SunLocator out of the TileLoader ("yipee!") 
    - Moved QTimer out of MarbleWidget into SunLocator ("yipee!")
    - Disabling clouds for Level >= 2.

    Now we really need the Layer Management class - I'll create a document 
    that will cover its basic concepts.

2008-01-19  Torsten Rahn  <rahn@kde.org>

    * src/lib/SunLocator.{cpp,h}:

    - Changing name of the "penumbra" to "twilight zone"
    and the value to 18 degrees (h=0.1) which seems a bit more 
    realistic to me according to the definition of twilight.

2008-01-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/SunLocator.{cpp,h}:
    * src/lib/TextureTile.{cpp,h}:

    - Another awesome patch by our "weather man" 
    David Roberts. This one adds: 
    - the (internal) option to let the citylights 
    map show up on the night side of the satellite view.

    - clouds (only show up if you create cloud tiles
    in the maps/earth/clouds directory which doesn't happen 
    automatically yet. But it works well already.

2008-01-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/SunControlWidget.ui:

    - Adding Sun control widget for David Roberts.

2008-01-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/TextureTile.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/SunLocator.{cpp,h}:
    * src/lib/TileLoader.{cpp,h}:
    * src/lib/TextureTile{cpp,h}:

    - More patches by David Roberts to fix and speed-up
    the sun shading. 
    Only issues left: 
    - There shouldn't be any timers in MarbleWidget
    - TileLoader shouldn't be aware of things like
    "sunshading".

2008-01-18  Torsten Rahn  <rahn@kde.org>

    * src/lib/TextureTile.{cpp,h}:
    - Visualize Tile loading by displaying filename tags
      on the globe.
    - Ŕight now you need to set

      bool tileIdVisible = true;

    in TextureTile{cpp,h}:, line 174 to see the effect. Really cool
    and makes tile loading pretty clear if you haven't understood
    it yet.

2008-01-17  Inge Wallin  <inge@lysator.liu.se>

	Cleaning
	* src/lib/MarbleModel{cpp,h}: ():Follow coding standards
	* src/lib/TileCreator{cpp,h}: ():Follow coding standards
	
2008-01-17  Torsten Rahn  <rahn@kde.org>

    * src/QtMainWindow.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/SunLocator.{cpp,h}:
    * src/lib/ExtDateTime.{cpp,h}:
    * src/lib/TileLoader.{cpp,h}:
    * src/lib/TextureTile.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/CMakeLists.txt:
    * src/ControlView.h:

    - "Let The Sunshine In"

    ("You Are The Sunshine Of My Life" could be misunderstood ... ;-)

    Patch by David Roberts that enables Sunshading for
    24bpp maps (e.g. the Satellite map). Still needs a
    bit of work to make it work properly and fast 
    (like avoiding setPixel(), etc.).

2008-01-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/TextureColorizer{cpp,h}::
	- Optimizations.
    * src/lib/AbstractScanlineTextureMapper.{cpp,h}:
    * src/lib/MarbleWidget.{cpp,h}:
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/GlobeScanlineTextureMapper{cpp,h}::
    * src/lib/FlatScanlineTextureMapper{cpp,h}::
	- First steps towards tile preloading
	- Removing the headingTowards stuff as I don't need it.

    * src/lib/MarbleSettingsWidget.ui:
	- minor change

2008-01-16  Inge Wallin  <inge@lysator.liu.se>

	Fix bug that made min/max zoom in .dgml files not work.
	* src/lib/MapTheme{cpp,h}: (open): Compare against lower cased
	names minimumzoom and maximumzoom.

2008-01-16  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleSettingsWidget.ui:

    - Committing Settings Widget for KDE 4.1. This 
    mockup-stage .ui file shows about what I have in mind
    in terms of features being supported for KDE 4.1 and 
    how they should get offered in the settings dialog.

2008-01-15  Inge Wallin  <inge@lysator.liu.se>

	Complete min/maximumZoom in .dgml files.
	* src/lib/MapTheme{cpp,h}: (open): Provide default values for
	minimumZoom and maxmimumZoom
	(open): bug fix in parsing.
	* src/lib/MarbleModel.h (setMinimumZoom, setMaximiumZoom): removed
	* src/lib/MarbleModel{cpp,h}: (minimumZoom, maximumZoom): Use values
	from MapTheme
	* src/lib/MarbleWidget{cpp,h}: (minimumZoom, maximumZoom): Use values
	from MarbleModel
	* src/lib/MarbleControlBox{cpp,h}: (MarbleControlBoxPrivate::m_minimumZoom):  removed
	(minimumZoom): use value from the widget.
	(changeZoom): don't use m_minimumzoom
	* src/ControlView{cpp,h}: (ControlView): Remove initialization of
	minimum zoom in the widget.

2008-01-14    Inge Wallin  <inge@lysator.liu.se>

	Continue with min and max zoom in .dgml files
	* src/lib/MapTheme.h (minimumZoom, maximumZoom): New methods
	* src/lib/MapTheme{cpp,h}: (open): New default for minimumZoom
	* src/lib/MarbleWidget.{h,cpp} (minumumZoom, maximumZoom,
	setMaximumZoom): new methods
	* src/lib/MarbleControlBox (selectTheme): dig out minimumZoom and
	maximumZoom from the widget.
	
2008-01-13    Inge Wallin  <inge@lysator.liu.se>

	Support minimumZoom and maximumZoom in .dgml files.
	* src/lib/MapTheme.h (m_minimumZoom, m_maximumZoom): new members
	* src/lib/MapTheme{cpp,h}: (open): Support miminumZoom and maximumZoom
	in .dgml files
	(open): use else if instead of only if's
	* src/lib/MarbleModel{cpp,h}: (setMapTheme): cleaning
	
2008-01-13  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarblePlacemarkModel.{h,cpp}:
    * src/lib/PlaceMarkLayout.{h,cpp}:

    - Patch by Claudiu Covaci to get satellite displayed on the far-off hemisphere.

    - Performance fix to keep speed when zooming in from slowing down.
      This addresses a regression due to the Model-View-refactorization which 
      made the speed going down by 50%. 

    * src/lib/MarbleWidget.{h,cpp}:
    * src/lib/MarbleModel.{h,cpp}:

    - We don't need to reinvent setAutoFillBackground ...
    - We don't want to draw the atmosphere on close-up zoom
    - Introduction of direction detection
    - clean-up

    * src/lib/GridMap{cpp,h}:: Small performance fix
    * src/MarbleTest{cpp,h}:: Fixing default coordinates

2008-01-07  Torsten Rahn  <rahn@kde.org>

    * src/lib/ViewParams.h:
    * src/lib/MarbleWidget.{h, cpp}:
    * src/lib/MarbleModel{cpp,h}::

    - Fixed blue tint of space and added setBackgroundTransparency method as part of the fix.
    - Don't draw the whole screen if the globe doesn't cover it completely.
    - Fixed Atmosphere not getting drawn when changing projection.

    * src/lib/MarbleControlBox{cpp,h}::
    * src/lib/MarbleControlBox.ui:

    - Getting rid of scrollbars under normal conditions.

    * data/vectorsource/lakes.svg:
    * data/mwdbii/PLAKE.PNT:

    - Fixing lake placement bug as described in easyLINUX (TM) magazine.

2008-01-06  Torsten Rahn  <rahn@kde.org>

    - Bumping up version number.

    - Fixed up-down direction of toolbar arrow buttons and screen arrow buttons.

    - Fixed: Free tileloader cache if we switch to plain map 

    - Fixed: In flat projection if you move the map way up or down in total view then the compass rose will show an "S" at the top. 


2008-01-03  Torsten Rahn  <rahn@kde.org>

    * ChangeLog:
    * src/lib/gps/Track{cpp,h}::
    * src/lib/gps/Track.h:
    * src/lib/gps/GpxSax{cpp,h}::
    * src/lib/gps/GpsTracking{cpp,h}::
    * src/lib/gps/WaypointContainer{cpp,h}::
    * src/lib/gps/GpxSax.h:
    * src/lib/gps/GpxFileModel{cpp,h}::
    * src/lib/AbstractLayer/AbstractLayerData{cpp,h}::
    * src/lib/HttpFetchFile.h:
    * src/lib/HttpDownloadManager{cpp,h}::
    * src/lib/global.h:
    * src/lib/MarbleControlBox{cpp,h}::
    * src/lib/MarbleModel{cpp,h}::
    * src/lib/HttpFetchFile{cpp,h}::

    - Fixed mem leaks in the DownloadManager. 
    - Bumping up the version number to 0.5
    - Fixing Andrew's gpx/GPS functionality

2008-01-03  Torsten Rahn  <rahn@kde.org>

    * src/lib/GlobeScanlineTextureMapper{cpp,h}::
    - Fix precise rendering around north pole

    - Fix for [Bug 154916] Crash on startup in MarbleWidget::resizeEvent
      Still needs verification.

2008-01-02  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget{cpp,h}::
    * src/lib/MarbleModel.{cpp,h}:
    * src/lib/ViewParams{cpp,h}::

    - Getting rid of m_downloadManager in MarbleWidget to simplify code.
    - Thereby fixed a mem leak concerning the same issue.

2008-01-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget{cpp,h}::
    * src/lib/ViewParams{cpp,h}::
    Initialize m_canvasimg before the model gets instantiated.

2008-01-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleModel{cpp,h}:: Initialize.

2008-01-01  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleModel{cpp,h}:: more paranoid check whether the 
      .dgml file has been opened successfully.

2007-12-31  Torsten Rahn  <rahn@kde.org>

    * src/lib/PlaceMarkLayout.{cpp,h}:
    * src/lib/MarbleModel{cpp,h}::
    * src/lib/VisiblePlaceMark{cpp,h}::

    - Fixing a crash reported by Claudiu Costin.

2007-12-31    Inge Wallin  <inge@lysator.liu.se>

	* src/ControlView.h (marbleControl): New function
	* src/lib/MarbleControlBox.{h,cpp} (updateMapThemes): New function
	(constructor): call updateMapThemes().
	* src/marble_part{cpp,h}: (showNewStuffDialog): update the map themes 
	list in the controlbox.
	(misc): cleaning
	* src/lib/MapTheme{cpp,h}:: cleaning
	* src/lib/MarbleModel{cpp,h}:: cleaning	

2007-12-31  Torsten Rahn  <rahn@kde.org>

    * src/plugins/navigator/CMakeLists.txt:
    - Fix MarbleNavigator Plugin

    Icons for projection combobox:
    * src/marble.qrc:
    * src/lib/MarbleControlBox.ui:
    * src/icons/map-flat.png:
    * src/icons/map-globe.png:


2007-12-31  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.h:
    * src/lib/MarbleModel.{cpp, h}:
    - Fixing the missing selection in the map view tab once
      the map setting gets restored. + Adding related API docs.

2007-12-31  Torsten Rahn  <rahn@kde.org>

    * lib/MeasureTool{cpp,h}:: Fixed partial disappearance of the 
      measureline east to the date line. 

2007-12-30  Torsten Rahn  <rahn@kde.org>

    * src/lib/VectorMap{cpp,h}:: Fixed last "turns-white" bug

2007-12-30    Inge Wallin  <inge@lysator.liu.se>

	Save and restore the current map theme in the settings.
	* src/marble.kcfg: add mapTheme as a setting of type string.
	* src/marble_part{cpp,h}: (readSettings): Read mapTheme
	(writeSettings): Write mapTheme
	* src/QtMainWindow{cpp,h}: (readSettings): Read mapTheme
	(writeSettings): Write mapTheme

2007-12-30  Torsten Rahn  <rahn@kde.org>

    - Fixed order of Feature appearance (still could
      have some fine tuning)
    - Changed QDataStream format to 4_2

    * src/lib/PlaceMarkLayout{cpp,h}:
    * src/lib/PlaceMarkContainer{cpp,h}:
    * src/lib/MarblePlacemarkModel{cpp,h}:
    * src/lib/PlaceMarkManager{cpp,h}:
    * src/lib/geodata/data/GeoDataFeature{cpp,h}:
    * data/placemarks/baseplacemarks.cache
    * data/placemarks/elevplacemarks.cache
    * data/placemarks/otherplacemarks.cache
    * data/placemarks/boundaryplacemarks.cache
    * data/placemarks/cityplacemarks.cache

2007-12-29  Torsten Rahn  <rahn@kde.org>

    Instead of saving VisualCategories, Popularity and
    PopularityIndex we create them on the fly.
    Reduces file size and reduces my headaches a bit. 

    * src/lib/MarblePlacemarkModel.h
    * src/lib/XmlHandler{cpp,h}:
    * src/lib/MarblePlacemarkModel{cpp,h}:
    * src/lib/PlaceMarkManager{cpp,h}:
    * src/lib/VectorMap{cpp,h}:
    * src/lib/XmlHandler.h
    * src/lib/GeoPolygon{cpp,h}:
    * data/placemarks/baseplacemarks.cache
    * data/placemarks/elevplacemarks.cache
    * data/placemarks/otherplacemarks.cache
    * data/placemarks/boundaryplacemarks.cache
    * data/placemarks/cityplacemarks.cache

2007-12-28  Inge Wallin  <inge@lysator.liu.se>

	Save projection too in KDE version.
	* src/marble.kcfg: Added projection to variables.
	* src/marble_part{cpp,h}: (writeSettings): Write projection
	(readSettings): read projection

	Fix includes so that using the widget from an external program
	works again.
	* src/CMakeLists.txt: Add AbstractLayer and geodata/data as
	include directories
	* src/lib/CMakeLists.txt:
	 - Add AbstractLayer and geodata/data as include directories
	 - Install plenty more include files.
	* src/lib/AbstractLayer/AbstractLayer.h,
	* src/lib/AbstractLayer/AbstractLayerData.h,
	* src/lib/AbstractLayer/AbstractLayerInterface.h,
	* src/lib/AbstractScanlineTextureMapper.h,
	* src/lib/GridMap{cpp,h}:,
	* src/lib/KMLFileViewItem{cpp,h}:,
	* src/lib/MarbleControlBox.h,
	* src/lib/MarblePlacemarkModel{cpp,h}:,
	* src/lib/MarbleWidget.h,
	* src/lib/MeasureTool.h,
	* src/lib/PlaceMarkContainer.h,
	* src/lib/PlaceMarkLayout{cpp,h}:,
	* src/lib/PlaceMarkLayout.h,
	* src/lib/PlaceMarkPainter{cpp,h}:,
	* src/lib/VisiblePlaceMark{cpp,h}:: Always include just "foo.h" and
	not "lib/foo.h" or "geodata/data/foo.h" or anything similar

2007-12-28  Torsten Rahn  <rahn@kde.org>

    * src/lib/VectorMap{cpp,h}::
    * src/lib/GeoPolygon.{cpp,h}:

    - Partially fix dateline issue with Bounding Box

2007-12-27  Torsten Rahn  <rahn@kde.org>

    - Save Projection in Qt interface
    - Update Projection ComboBox accordingly
    - Partially fix dateline issue with Bounding Box
    - Fix area visibility mapped to Legend

2007-12-25  Torsten Rahn  <rahn@kde.org>

    * src/lib/MeasureTool.{cpp, h}:
    * src/lib/MarbleWidget{cpp,h}::

    More ViewParam-ization.

2007-12-25  Torsten Rahn  <rahn@kde.org>

	* VectorMap.{cpp,h}:
	* TextureColorizer{cpp,h}::
	* VectorComposer{cpp,h}::

	More ViewParam-ization.

2007-12-25  Torsten Rahn  <rahn@kde.org>

	* Fix coordinate system 
          ( North is + and South is - , West is - and East is +
            in the internal radian based coordinate system now)
	* More usage of centerCoordinates(lon, lat);
	* Speed-ups in flat projection code
	* code cleanup, better naming

2007-12-15  Inge Wallin  <inge@lysator.liu.se>

	Fix more warnings
	* src/lib/gps/Track{cpp,h}:,
	src/lib/gps/Gpslayer.h,
	src/lib/geodata/data/GeoDataFeature{cpp,h}:,
	src/lib/GridMap{cpp,h}:: Fix warnings
	
	Fix unnecessary warnings:
	* MarbleWidget{cpp,h}:,
	TileCreator{cpp,h}:,
	AbstractLayer/AbstractLayerData.h,
	AbstractLayer/AbstractLayerContainer{cpp,h}:,
	AbstractLayer/AbstractLayerData{cpp,h}:,
	TileLoader{cpp,h}:,
	PlaceMarkLayout{cpp,h}:,
	XmlHandler{cpp,h}:,
	PlaceMarkManager{cpp,h}:,
	FileViewModel{cpp,h}:,
	TextureColorizer{cpp,h}:,
	geodata/data/GeoDataIconStyle.h,
	geodata/data/GeoDataPoint{cpp,h}:,
	geodata/data/GeoDataFeature{cpp,h}:,
	geodata/data/GeoDataPoint.h,
	geodata/data/GeoDataLabelStyle{cpp,h}:,
	gps/Route{cpp,h}:,
	gps/RouteContainer{cpp,h}:,
	gps/Track{cpp,h}:,
	gps/RouteContainer.h,
	gps/GpsTracking{cpp,h}:,
	gps/TrackContainer.h,
	gps/WaypointContainer{cpp,h}:,
	gps/Waypoint.h,
	gps/GpxFileModel{cpp,h}:,
	gps/WaypointContainer.h:  Fix most warnings.
	
	Bugfix: 
	* src/lib/geodata/data/GeoDataIconStyle{cpp,h}: (setHotSpot): use (x, y)
	instead of (x, x):
	
	Mini fixes
	* src/lib/MarbleWidget.h: Fix apidox typo.
	* src/lib/geodata/data/GeoDataIconStyle.h: Add ingwa as copyright holder

2007-13-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/PlaceMarkLayout.{h,cpp}: Speed-up and better code

2007-12-11  Torsten Rahn  <rahn@kde.org>

    One single major bug left for the flat map and 
    the flat map is now as fast as the globe.

    * src/lib/MeasureTool{cpp,h}:: degX,Y -> lon, lat

    * src/lib/MarbleWidget{cpp,h}::
       - Some fix by Jan Becker about screenCoordinates(...)
       - degX,Y -> lon, lat
    * src/lib/VectorMap.{h,cpp}:
       - Speedup by avoiding Quaternion representation for
         rectangular projection
       - degX,Y -> lon, lat
    * src/lib/PlaceMarkLayout{cpp,h}::
       - Fixing "two few placemarks" bug for rect. projection
       - Speedup by avoiding Quaternion representation for
         rect. projection
       - degX,Y -> lon, lat

2007-12-11  Torsten Rahn  <rahn@kde.org>

    Patch set by Jan Becker <tahoma@gmx.de>:
    * src/lib/MeasureTool{cpp,h}::
      Bugfix to make Measuretool mostly work in 
      Equirectangular projection (tiny small issues
      which aren't relevant for now still remain)
    * src/lib/MarbleWidget.{h,cpp}:
      virtual void customPaint() and bugfix for
      considering equirectangular projection in 
      screenCoordinates(...)
    * src/lib/ClipPainter.{h,cpp}: 
      Introduction of setClipping(bool) and hasClipping()

2007-12-10  Torsten Rahn  <rahn@kde.org>

    * Renaming the class "GeoPoint" -> "GeoDataPoint"

2007-12-06  Torsten Rahn  <rahn@kde.org>

    Very nice patch set by Jan Becker <tahoma@gmx.de>. From his own description:

    * TextureMappers does not create/own a TileLoader, they use one
    * MarbleWidgetInputHandler has been stripped down to an interface and 
MarbleWidgetDefaultInputHandler derives from it and is the InputHandler 
default implementation
    * TileLoader does not create/own a DownloadManager, it uses one
    * MarbleModel manages a TileLoader and passes it to the TextureMappers it 
creates
    * MarbleWidget manages now the DownloadManager and passes it to its model
    * MarbleModel has two additional methods to set the InputHandler and 
DownloadManager
    * Added "download.kde.org/..." url to MarbleWidget in ControlView

    One of his patches still needs to be discussed due to CacheStoragePolicy not having been taken
    into account conceptually:

    * The FileStoragePolicy instance passed to the HttpDownloadManager is now 
owned by the HttpDownloadManager (I do not know the reasons to just use it 
there, are their any dependencies to other code regarding this ownership?)

2007-12-06  Torsten Rahn  <rahn@kde.org>
    
    * Sorting out performance problems related to QVariant usage
    * Adding alignment capability for labels to satisfy ingwa's complains ;)
    * adding data for english country names (translation of displayed data 
      is scheduled for 4.1)
    * Some minor fixes and added source comments.

    The appearance of features per zoom level still needs trivial fine tuning 
    which I'll do later today.

2007-12-05  Torsten Rahn  <rahn@kde.org>
    
    * src/lib/AbstractScanlineTextureMapper{cpp,h}:: Small fix by Jan Becker
    * src/lib/MarbleControlBox{cpp,h}:: Fix by Casper Boeman for QToolBox issue
    * src/lib/MarbleModel{cpp,h}:: "Fix" to improve Marble speed

    All changes are trivial.

2007-11-13  Torsten Rahn  <rahn@kde.org>
    
    * src/lib/PlaceMarkPainter.{h,cpp}: Fix black labels on dark maps
    * src/lib/MarbleModel{cpp,h}:: Fix black labels on dark maps

    This is just a quick and dirty workaround that needs to get removed
    later on.

2007-11-13  Torsten Rahn  <rahn@kde.org>
    
    * src/lib/TileCreator.{h,cpp}: Fix TileCreator bug
    * src/lib/TileCreatorDialog.{h,cpp}: Fix TileCreator bug
    * src/lib/MarbleModel{cpp,h}:: Fix TileCreator bug

2007-11-12  Inge Wallin  <inge@lysator.liu.se>

	APIDOX
	* src/lib/geodata/data/GeoDataLabelStyle.h: Add APIDOX

	APIDOX
	* src/lib/geodata/data/GeoDataColorStyle.h: Add APIDOX

	APIDOX
	* src/lib/geodata/data/GeoDataStyle.h: Add APIDOX

	APIDOX
	* src/lib/geodata/data/GeoDataStyleSelector.h: Add APIDOX

2007-11-11  Inge Wallin  <inge@lysator.liu.se>

	Rename PlaceMarkModel --> MarblePlacemarkModel
	* PlaceMarkModel.h   -->  MarblePlacemarkModel.h
	* PlaceMarkModel{cpp,h}: -->  MarblePlacemarkModel{cpp,h}:
	* PlaceMarkModel_P.h -->  MarblePlacemarkModel_P.h
	* MarbleModel.{h,cpp},
	* MarbleWidget{cpp,h}:,
	* PlaceMarkManager.{h,cpp},
	* PlaceMarkLayout{cpp,h}:,
	* PlaceMarkPainter{cpp,h}:,
	* VisiblePlaceMark.{h,cpp},
	* PlaceMarkInfoDialog{cpp,h}:,
	* CMakeLists.txt: Reflect this namechange.

	APIDOX:
	* src/lib/MarbleWidget.h: More APIDOX

	Fix geodata classes according to KML spec and APIDOX:
	* src/lib/geodata/data/GeoDataFolder.h: (addFolder): removed
	(m_folderVector): removed
	(class GeoDataFolder): Added APIDOX.
	* src/lib/geodata/data/GeoDataFolder{cpp,h}:: (~GeoDataFolder): make
	empty
	(addFolder): removed
	* src/lib/geodata/data/GeoDataDocument.{h,cpp}: (class
	GeoDataDocument): Base on GeoDataContainer instead of GeoDataFolder
	(getStyle): renamed to style
	(folders): return QVector instead of QVector&
	(class GeoDataDocument): added APIDOX
	* src/lib/geodata/data/GeoDataContaner.h: Added APIDOX

	Make the GeoDataContainer follow the KML spec.
	* src/lib/geodata/data/GeoDataContainer.h (class
	GeoDataContainer): Contain GeoDataFeatures instead of
	GeoDataPlacemarks.
	* src/lib/geodata/data/GeoDataContainer{cpp,h}:: follow changes.

2007-11-09  Inge Wallin  <inge@lysator.liu.se>

	Fix documentation:
	* lib/geodata/data/GeoDataDocument.h,
	  lib/geodata/data/GeoDataContainer.h,
	  lib/geodata/data/GeoDataFeature.h:
	Reference GeoDataPlacemark
	
	Rename PlaceMark into Placemark
        * lib/geodata/data/GeoDataPlaceMark.h    -> GeoDataPlacemark.h
        * lib/geodata/data/GeoDataPlaceMark{cpp,h}:  -> GeoDataPlacemark{cpp,h}:
        * lib/CMakeLists.txt: Mirror namechange above
        * lib/MarbleWidgetPopupMenu{cpp,h}:,
          lib/PlaceMarkContainer{cpp,h}:,
          lib/PlaceMarkContainer.h,
          lib/PlaceMarkLayout{cpp,h}:,
          lib/PlaceMarkLayout.h,
          lib/PlaceMarkManager{cpp,h}:,
          lib/PlaceMarkPainter.h,
          lib/XmlHandler{cpp,h}:,
          lib/XmlHandler.h,
          lib/geodata/CMakeLists.txt,
          lib/geodata/data/GeoDataContainer{cpp,h}:,
          lib/geodata/data/GeoDataContainer.h,
          lib/geodata/data/GeoDataDocument{cpp,h}:,
          lib/geodata/data/GeoDataFeature.h:
	Use new names
	
2007-11-05 Andrew Manson <g.real.ate@gmail.com>
    Fixed bug that prevented Waypoints from a gpx file being
    displayed on the view. 

2007-11-04  Inge Wallin  <inge@lysator.liu.se>

	APIDOX
	* src/lib/geodata/data/GeoDataFeature.h,
	* src/lib/geodata/data/GeoDataPlaceMark.h: More apidox
	
	APIDOX
	* src/lib/geodata/data/GeoDataFeature.h: More apidox

	Warnings--
	* src/kdemain{cpp,h}:,
	* src/lib/PlaceMarkContainer{cpp,h}:,
	* src/lib/geodata/data/GeoDataFeature{cpp,h}::
	Improve comments, remove warnings, clean code

	APIDOX
	* src/lib/PlaceMarkContainer.h: Add apidox

	APIDOX
	* src/lib/geodata/data/GeoDataObject.h,	
	* src/lib/geodata/data/GeoDataFeature.h,	
	* src/lib/geodata/data/GeoDataPlaceMark.h:
	Add apidox.  GeoDataObject and GeoDataPlaceMark are finished,
	GeoDataFeature not really yet.

2007-11-04 Andrew Manson <g.real.ate@gmail.com>
    Altered the gps layer update scheme to stop it 
    updating anything if the gps location has not changed.

2007-11-01  Torsten Rahn  <rahn@kde.org>
    
    * src/lib/PlaceMarkInfoDialog{cpp,h}:
    * src/lib/XmlHandler{cpp,h}:
    * src/lib/MarbleModel{cpp,h}:
    * src/lib/geodata/data/GeoDataFeature{cpp,h}:
    * src/lib/geodata/data/GeoDataFeature.h
    * ChangeLog
    * data/placemarks/COPYRIGHT
    * data/placemarks/boundaryplacemarks.kml
    * data/placemarks/boundaryplacemarks.cache

    - Adding Oceans.

2007-10-31  Torsten Rahn  <rahn@kde.org>
    
    * src/lib/geodata/data:

    - Changed lots of base classes to internally enable
    real styles (in the spirit of KML) for placemarks.

2007-10-31  Torsten Rahn  <rahn@kde.org>
    
    * src/lib/geodata/data:

    - Added some data about continents with 
      points of geodetic centers / inaccessibility.

2007-09-26  Torsten Rahn  <rahn@kde.org>
	
	* data/placemarks/boundaryplacemarks.kml:

	- Added some data about continents with 
	  points of geodetic centers / inaccessibility.

2007-09-26  Inge Wallin  <inge@lysator.liu.se>

	Make some files follow the coding standards better.
	* src/lib/gps/GpxFile.h,
	* src/lib/gps/RouteContainer.h,
	* src/lib/gps/Track.h,
	* src/lib/gps/WaypointContainer{cpp,h}:,
	* src/lib/gps/Waypoint.h,
	* src/lib/gps/GpxFileModel{cpp,h}:,
	* src/lib/gps/WaypointContainer.h,
	* src/lib/gps/GpxFileModel.h:
	Follow coding standards
	
	APIDOX
	* src/lib/MarbleModel.h: More apidox
	* src/lib/MarbleModel{cpp,h}:: Improve comments
	
2007-09-26  Torsten Rahn  <rahn@kde.org>
	
	- Correct legend terms (deeply sorry for the translation team).
	  Added shipwreck category.

	* src/lib/MarbleWidget.{h,cpp}:
	* src/lib/PlaceMarkLayout{cpp,h}::
	* src/lib/XmlHandler{cpp,h}::
	* src/lib/PlaceMarkContainer{cpp,h}::
	* src/lib/MarbleLegendBrowser.{h,cpp}:
	* src/lib/PlaceMarkManager{cpp,h}::
	* src/lib/ViewParams.h:
	* src/lib/PlaceMarkInfoDialog{cpp,h}::
	* src/lib/MarbleControlBox{cpp,h}::
	* src/lib/PlaceMark{cpp,h}::
	* data/placemarks/baseplacemarks.cache:
	* data/placemarks/elevplacemarks.cache:
	* data/placemarks/otherplacemarks.kml:
	* data/placemarks/otherplacemarks.cache:
	* data/legend.html:

2007-09-26  Torsten Rahn  <rahn@kde.org>

	* src/lib/TextureColorizer{cpp,h}::
	* src/lib/texturepalette{cpp,h}::
	* src/lib/MarbleModel.h:
	* tools/palettegen/palettegen{cpp,h}::
	- Highlights for mountains
	- Fixed bug introduced by ingwa

2007-09-26  Torsten Rahn  <rahn@kde.org>

	* src/lib/PlaceMarkLayout.{h,cpp}:
	- Adding placeMarksOnScreenLimit()

	* src/lib/TextureColorizer{cpp,h}::
	- Optimization

2007-09-25  Torsten Rahn  <rahn@kde.org>

	* src/lib/PlaceMarkLayout{cpp,h}::
	* src/lib/PlaceMarkPainter.{h,cpp}:
	- More polishing in the layout/painter 
	  classes.

	* src/lib/TextureColorizer{cpp,h}::
	* src/lib/texturepalette{cpp,h}::
	* src/lib/ClipPainter{cpp,h}::
	* tools/palettegen/palettegen{cpp,h}::
	- Fixing tiny bug to improve render quality.
	- preparing further improved relief rendering.

2007-09-25  Inge Wallin  <inge@lysator.liu.se>

	APIDOX
	* src/lib/MarbleModel.h: Add apidox
	* src/lib/MarbleModel{cpp,h}:: Improve comments
	
	Make BUGS file actually usable.
	* BUGS: Format better to make it readable
	
2007-09-25  Torsten Rahn  <rahn@kde.org>

	* src/lib/PlaceMarkModel.{h,cpp}:
	* src/lib/PlaceMarkPainter.{h,cpp}:
	* src/lib/PlaceMarkLayout.{h,cpp}:
	* src/lib/VisiblePlaceMark.{h,cpp}:
	* src/lib/CMakeLists.txt:
	* src/lib/ViewParams.h:

	- Seperating PlaceMarkPainter from 
	  the new PlaceMarkLayout class.
	- Better filtering.
	- tidied up VisiblePlaceMark

2007-09-24  Torsten Rahn  <rahn@kde.org>

	* src/lib/TileCreator{cpp,h}::
	- Hopefully fixed Ingwa's bug?

	* src/lib/PlaceMarkPainter{cpp,h}::
	- Tidying up PlaceMarkPainter{cpp,h}: a bit.

2007-09-23  Torsten Rahn  <rahn@kde.org>

	* src/lib/PlaceMarkPainter{cpp,h}:: 
	- Regretfully sorting out a frequently featured 
	  Feature regression

2007-09-23  Torsten Rahn  <rahn@kde.org>

	* src/lib/PlaceMarkPainter{cpp,h}:: 
	Partially fix the position of the label.

2007-09-20  Inge Wallin  <inge@lysator.liu.se>

	Add a View menu to the KDE application.
	* src/marbleui.rc: Add a View menu.

2007-09-20  Tobias Koenig <tokoe@kde.org>

  Major refactoring of the PlaceMark handling.

2007-09-20  Torsten Rahn  <rahn@kde.org>

	* data/flags/flag_gr.svg:
	- Fix greek flag (Bug 150033)

2007-09-18  Torsten Rahn  <rahn@kde.org>

	* src/kdemain{cpp,h}::
	* src/qtmain{cpp,h}::
	* src/lib/MarbleWidget.{cpp,h}:
	* src/lib/AutoSettings.{h,cpp}:
	* src/lib/CMakeLists.txt:

	- Added "--fps" comḿand line option to display framerate
	  on the fly as a preparation for the AutoSettings class.
	- Added stub for AutoSettings class

	* src/marble_part{cpp,h}::
	* src/QtMainWindow{cpp,h}::

	- Fixed bug as pointed out by murdok.lnx@gmail.com

	* src/lib/ClipPainter{cpp,h}::
	* src/lib/MarbleControlBox{cpp,h}::
	* src/lib/TextureColorizer{cpp,h}::

	- Fixed minor issues

	* data/CMakeLists.txt:
	* data/bitmaps/airport.png:
	* data/bitmaps/shipwreck.png:
	* data/svg/shipwreck.svg:

	- Adding new shipwreck symbol for the legend


2007-09-17  Inge Wallin  <inge@lysator.liu.se>

	More work on APIDOX: 
	* src/lib/MarbleWidget{cpp,h}:: Fix errors with parameters.
	* src/lib/MarbleWidget.h,
	* src/lib/MarbleControlBox.h,
	* src/lib/MarbleNavigator.h: Much more APIDOX
	
	More work on APIDOX: 
	* src/lib/MarbleNavigator.h: Fix apidox and remove warnings
	* src/lib/MarbleNavigator{cpp,h}: (MarbleNavigator): Fix indentation

	APIDOX
	* src/lib/MarbleNavigator.h: Finish apidox
	
	APIDOX
	* src/lib/MarbleWidget.h (northPoleY, northPoleZ): Document
	(zoomView): improve docs
	* src/lib/MarbleControlBox.h (addMarbleWidget): Document
	* src/lib/MarbleNavigator.h: Document file and class.

	Cleaning
	* src/lib/MarbleWidget{cpp,h}:: 
	* src/lib/MarbleWidgetInputHandler{cpp,h}: (eventFilter): 
	Follow coding standards
	
	Add a main page to the APIdox.
	* src/Mainpage.dox: New file

2007-09-16  Inge Wallin  <inge@lysator.liu.se>

	Add instruction about how to install into a non-standard prefix
	* INSTALL (-DCMAKE_INSTALL_PREFIX): add instructions

2007-09-15  Torsten Rahn  <rahn@kde.org>

	* src/lib/MarbleControlBox.{h,cpp}:
	- Disable ZoomIn/Out Buttons at range limit
	Patch by Frederik Schwarzer.

2007-09-15  Torsten Rahn  <rahn@kde.org>

	* src/lib/PlaceMarkInfoDialog{cpp,h}::
	- Data Sheet -> Marble Info Center, as mentioned in the Marble
	  Quality Check.
	* BUGS:
	  Make ingwa happy.

2007-09-15  Torsten Rahn  <rahn@kde.org>

	- Add the icon for the menu in the Qt version ;-(

	* data/icons
	* data/icons/hi32-app-marble.png
	* data/icons/hi16-app-marble.png
	* data/icons/hi64-app-marble.png
	* data/icons/hi128-app-marble.png
	* data/icons/hi48-app-marble.png

2007-09-12  Torsten Rahn  <rahn@kde.org>

	- Various fixes related to finding and
	fixing possible memory leaks.

	* src/lib/gps/GpxFileModel.{h,cpp}
	* src/lib/TileLoader.{h,cpp}
	* src/lib/MarbleLegendBrowser.{h,cpp}
	* src/lib/CompassFloatItem.{h,cpp}
	* src/lib/MarbleControlBox.{h,cpp}
	* src/lib/PlaceMarkManager.{h,cpp}
	* src/lib/VectorComposer.{h,cpp}
	* src/lib/MapTheme{cpp,h}:
	* src/lib/MarbleWidget{cpp,h}:
	* src/lib/PlaceMarkModel{cpp,h}:
	* src/lib/MarbleModel{cpp,h}:
	* src/lib/TextureTile{cpp,h}:
	* src/lib/GeoPolygon{cpp,h}:

2007-09-12  Torsten Rahn  <rahn@kde.org>

	* src/QtMainWindow{cpp,h}::
	* src/marble_part{cpp,h}::
	- "Distance" -> "Altitude"
	as it got mixed up with the measure tool

2007-09-12  Torsten Rahn  <rahn@kde.org>

	* src/lib/ClipPainter{cpp,h}::
	- Cut off on screen.

	* src/marble.qrc:
	* src/icons/wikipedia.png:
	* src/lib/PlaceMarkInfoDialog.ui:
	- Added a Wikipedia icon and a pointer towards the entry.

	* src/lib/TinyWebBrowser{cpp,h}::
	- Make it compile on Qt 4.2, too.

2007-09-09  Torsten Rahn  <rahn@kde.org>

	* src/lib/MarbleWidgetInputHandler{cpp,h}::
	- Give visual feedback if the mouse hovers placemarks.
	- Give visual feedback if the mouse drags the planet.

	* src/QtMainWindow{cpp,h}::
	* src/marble_part.{h,cpp}:
	- Position and Distance display in StatusBar for KDE frontend.

2007-09-09  Torsten Rahn  <rahn@kde.org>

	* src/QtMainWindow.{h,cpp}
	* src/lib/MarbleWidget.{h,cpp}
	* src/lib/MapScaleFloatItem{cpp,h}:
	* src/lib/global.h
	* src/lib/MarbleWidgetInputHandler{cpp,h}:
	* src/marble_part.h

	- Added Statusbar items to the Qt-Marble frontend.
	Now we need the same ones for the KDE-Version.

	* src/lib/TinyWebBrowser{cpp,h}::
	- Fixed Sluggishness and JavaScript code

2007-09-08  Torsten Rahn  <rahn@kde.org>

	* src/lib/GeoPoint.{h,cpp}:
	- Introducing different Notations: Decimal and Sexagesimal (DMS).

	* src/QtMainWindow.{h,cpp}:
	* src/lib/MarbleWidget.{h,cpp}:
	* src/lib/MarbleWidgetInputHandler{cpp,h}::
	- Fix for displaying the position in the statusbar.

	* src/plugins/marblewidget/CMakeLists.txt:
	* src/plugins/navigator/CMakeLists.txt:
	* examples/example2.ui:
	- Clean up as somebody broke the MarbleNavigator plugin.
	  Still needs to be fixed.

2007-09-07  Tobias Koenig  <tokoe@kde.org>

  - Put tile creation into a worker thread and
	  adopted the TileCreationDialog

  - Improved HttpFetchFile by encoding the path
	  url correctly, adding User-Agent and support
		for HTTP redirect, now all city names are loaded
		correctly from WikiPedia

  - Read the HTML pages as UTF-8, now the webpages
	  look a lot better

  - Guess the wikipedia domain to use by examine the
	  $LANG variable, so 'LANG=sv marble' will use the
		swedish wikipedia site ;)

2007-09-07  Torsten Rahn  <rahn@kde.org>

	* src/lib/DiscCache.{h,cpp}:
	- Coding-Style & compile with Qt 4.2, too. 

2007-09-06  Tobias Koenig  <tokoe@kde.org>

  Refactored HttpDownloadManager and HttpFetchFile by introducing
	StoragePolicy.

	Fixed the TinyHttpBrowser to show images and load style sheets.

2007-09-05  Tobias Koenig  <tokoe@kde.org>

  Add DiscCache class

2007-09-05  Tobias Koenig  <tokoe@kde.org>

	KPartified Marble.

2007-09-05  Inge Wallin  <inge@lysator.liu.se>

	Simplify code.
	* src/lib/PlaceMarkPainter{cpp,h}: (*PaintPlaceFolder): Simplify code
	structure.

2007-09-03  Torsten Rahn  <rahn@kde.org>

	- "Fixed" last "jump" issue in the flat projection. 
	- Tidied up the naming of the euler angles a but
	- "Fixed" issue in the plain map which made the 
	  ocean water not being in sync with the rest.
	Well, all this needs to be tidied up, still.

	* src/lib/MeasureTool{cpp,h}:
	* src/lib/MarbleWidget{cpp,h}:
	* src/lib/Quaternion{cpp,h}:
	* src/lib/PlaceMarkPainter{cpp,h}:
	* src/lib/VectorMap{cpp,h}:
	* src/lib/TextureColorizer{cpp,h}:
	* src/lib/VectorMap.h
	* src/lib/VectorComposer{cpp,h}:
	* src/lib/GridMap{cpp,h}:
	* src/lib/MarbleWidgetInputHandler{cpp,h}:
	* src/lib/FlatScanlineTextureMapper{cpp,h}:

2007-09-02  Torsten Rahn  <rahn@kde.org>

	- Fixed "jumpy" flat projection. Still needs work to 
	  fix the "jump" for the case where the centerLat
	  exceeds +/- M_PI which has other causes:

	* MeasureTool{cpp,h}:
	* MarbleWidget{cpp,h}:
	* Quaternion{cpp,h}:
	* PlaceMarkPainter{cpp,h}:
	* VectorMap{cpp,h}:
	* TextureColorizer{cpp,h}:
	* GridMap{cpp,h}:
	* MarbleWidgetInputHandler{cpp,h}:
	* FlatScanlineTextureMapper{cpp,h}:

	* TileCreator{cpp,h}::
	- More fixes for non-standard source texture sizes

2007-09-01  Inge Wallin  <inge@lysator.liu.se>

	Krazy issue 22: spelling errors	* src/lib/AbstractLayer/AbstractLayerContainer.h: fix spelling
	* src/lib/kml/KMLStyleParser{cpp,h}: (startElement): fix spelling

	Krazy issue 21: signals and slots
	* src/lib/PlaceMarkManager.h (class PlaceMarkManager): signals ->
	Q_SIGNALS

	Krazy issue 13: proper include directives
	* src/lib/gps/GpxFile{cpp,h}:: Own include file first and dupl. includes
	* src/lib/TextureColorizer.h: Fix include guard

	Krazy issue 3: contractions in strings
	* src/lib/MarbleModel{cpp,h}: (MarbleModel): couldn't -> could not
	* src/lib/GeoPolygon{cpp,h}: (load): can't -> cannot
	* src/lib/TileCreator{cpp,h}: (createTiles): doesn't -> does not
	* tools/dateline/dateline{cpp,h}: (main): doesn't -> does not

	Get rid of large and annoying status message while configuring
	* src/lib/CMakeLists.txt: Remove status messages

	Make projection choice clearer to the user
	* src/lib/MarbleControlBox.ui: "Map" -> "Flat Map"

2007-08-30  Torsten Rahn  <rahn@kde.org>
	Larger commit of issues that came up while 
	waiting for KDE4 Beta2:

	* src/lib/gps/TrackSegment{cpp,h}::
	* src/lib/MarbleModel{cpp,h}::
	- OpenSolaris fixes by Stefan Telemann

	* src/QtMainWindow{cpp,h}::
	* src/lib/global.h:
	
	* src/lib/MarbleWidgetPopupMenu.h:
	* src/lib/MarbleWidgetPopupMenu{cpp,h}::
	- Disable "Remove all Measure points" 
	  menu item if there hasn't been any 
	  measure point added yet.

	* src/lib/MarbleControlBox{cpp,h}::
	- Enable flat projection

	* src/lib/CMakeLists.txt:
	* src/CMakeLists.txt:
	- Removing obsolete and broken ui file install as
	reported by Ferdinand Gassauer. 

	* marble.nsi:
	- Fix by Christian Ehrlicher for Windows Build.

	* src/lib/XmlHandler{cpp,h}::
	* data/bitmaps/volcano_1.png:
	* data/bitmaps/mountain_1.png:
	* data/CMakeLists.txt:
	* src/lib/PlaceMarkPainter{cpp,h}::
	* src/lib/PlaceMark{cpp,h}::
	- Fixes for known issue "KML files don't display
	at low zoom"

	* debian:
	- Remove Debian directory on request of the debian packager

2007-08-29  Murad Tagirov  <tmurad@gmail.com>

    Implemented parsing of icons. Currently support only
    "file://" url scheme. Use MarbleDirs to locate icon.
    * src/lib/kml/KMLIconStyleParser.{h,cpp}
    * docs/projects/kml/KMLClasses.xmi

2007-08-27  Torsten Rahn  <rahn@kde.org>
	* src/lib/MarbleWidget.{h,cpp}:
	* src/lib/MarbleControlBox.{h,cpp}:
	If FLATPROJ_GSOC is defined then enable
	switching between projections ...

	Now I need to fix the "jumping projection" bug ...

2007-08-27  Torsten Rahn  <rahn@kde.org>
	* src/lib/HttpFetchFile{cpp,h}::
	  - Fixing tile loading bug introduced by Danimo's
	    last Windows fix
	* src/lib/GlobeScanlineTextureMapper{cpp,h}::
	  - Fixing crash due to different tile depths
	    reported by Frederik Schwarzer.
	* src/lib/TileCreator{cpp,h}::
	  - Faster tile creation
	  - Making it easier to track bugs from cli output

2007-08-26  Inge Wallin  <inge@lysator.liu.se>

	Krazy issue 18: inappropriate pass-by-value function args
	* src/lib/kml/KMLColorStyle{cpp,h}: (setColor): Take const QColor&
	* src/lib/kml/KMLStyleSelector{cpp,h}: (setStyleId): Take const QString&
	* src/lib/kml/KMLIconStyle{cpp,h}: (setIcon): Take const QPixmap&

2007-08-25  Carlos Licea  <carlos_licea@hotmail.com>
    *MarbleWidget: solved the trace bug. As I expected the
     problem was an exception for the Spherical projection
     tha wasn't needed in the flat projection.

2007-08-24  Murad Tagirov  <tmurad@gmail.com>

    - Parse IconStyle related tags.
      TODO: load pixmap specified in <href> tag
    * src/lib/kml/KMLIconStyle.{h,cpp}
    * src/lib/kml/KMLIconStyleParser.{h,cpp}
    * src/lib/kml/KMLColorStyleParser{cpp,h}:

    - Implemnted parsing of <IconStyle> tag
    * src/lib/kml/KMLStyle.{h,cpp}
    * src/lib/kml/KMLStyleParser.{h,cpp}

    - Display time spent to draw opened kml documents
    * src/lib/MarbleModel{cpp,h}:

2007-08-24  Carlos Licea  <carlos_licea@hotmail.com>
    *TextureColorizer: removed the differences of Spherical
     and Rectangular methods, now there's only 1 class for
     both.

2007-08-23  Murad Tagirov  <tmurad@gmail.com>

    Added new parsing classes
    * src/lib/kml/KMLColorStyleParser.{h,cpp} : new class
    * src/lib/kml/KMLLabelStyleParser.{h,cpp} : new class
    * src/lib/kml/KMLIconStyleParser.{h,cpp}  : new class

    Added KMLStyleParse class to parse KMLStyle objects.
    Minor fixes in previously introduced styles
    related classes.
    * src/lib/kml/KMLDocumentParser.{h,cpp}
    * src/lib/kml/KMLContainerParser{cpp,h}:
    * src/lib/kml/KMLStyleSelector.{h,cpp}
    * src/lib/kml/KMLStyleParser.{h,cpp}: new class
    * src/lib/kml/KMLDocument.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser{cpp,h}:
    * src/lib/CMakeLists.txt

    - Class diagram updated
    * docs/projects/kml/KMLClasses.xmi

2007-08-23  Torsten Rahn  <rahn@kde.org>

	- More cleanup in TextureMapper classes and
	better code documentation. Now it should be
	possible for other people to fully
	understand it.
	* src/lib/AbstractScanlineTextureMapper.{cpp,h}
	* src/lib/TileLoader.h
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:
	* src/lib/FlatScanlineTextureMapper{cpp,h}:
	* ChangeLog

2007-08-23  Murad Tagirov  <tmurad@gmail.com>

    - Added new classes for basic kml styles support
    * src/lib/kml/KMLStyle.c{h,cpp}:     new class
    * src/lib/kml/KMLColorStyle.{h,cpp}: new class
    * src/lib/kml/KMLLabelStyle.{h,cpp}: new class
    * src/lib/kml/KMLStyleSelector.h:    new class
    * src/lib/kml/KMLIconStyle.{h,cpp}:  new class
    * src/lib/kml/KMLDocument.{h,cpp}
    * src/lib/PlaceMarkManager{cpp,h}:
    * src/lib/CMakeLists.txt

    - KML styles related classes updated in a class diagram
    * docs/projects/kml/KMLClasses.xmi

2007-08-23  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/MarbleWidget.h: Added some apidox

2007-08-22  Torsten Rahn  <rahn@kde.org>

	Cleaning up the TextureMapper classes a bit.
	More to follow.

	* src/lib/AbstractScanlineTextureMapper{cpp,h}:: Cleanup
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:: Cleanup
	* src/lib/TileLoader.h: Introducing globalWidth()/Height()

2007-08-22  Murad Tagirov  <tmurad@gmail.com>

    Display time spent to parse kml file.
    * src/lib/PlaceMarkManager{cpp,h}:

    Pack/Unpack placemark's coordinates
    * src/lib/PlaceMark{cpp,h}:

    Class diagram updated
    * docs/projects/kml/KMLClasses.xmi

2007-08-22  Murad Tagirov  <tmurad@gmail.com>

    Added new class KMLFileViewItem. FileViewItem
    now shows loaded kml documents. It's possible to
    show or hide them. TODO: save/close kml documents
    * src/lib/MarbleWidget{cpp,h}:
    * src/lib/MarbleModel.{h,cpp}
    * src/lib/FileViewModel.{h,cpp}
    * src/lib/MarbleControlBox{cpp,h}:
    * src/lib/PlaceMarkManager.{h,cpp}
    * src/lib/GpxFileViewItem.h
    * src/lib/CMakeLists.txt
    * src/lib/KMLFileViewItem.{h,cpp}: new class

2007-08-22  Inge Wallin  <inge@lysator.liu.se>

	Daily Krazy issues. This time: Spelling errors
	* src/lib/gps/GpsTracking{cpp,h}: (GpsTracking):      Fix spello
	* src/lib/AbstractLayer/AbstractLayer.h:          Fix spello
	* src/lib/AbstractLayer/AbstractLayerContainer.h: Fix spello

2007-08-21  Torsten Rahn  <rahn@kde.org>

	* src/lib/CMakeLists.txt:
	- Library Version number: 0.4.0

2007-08-21  Inge Wallin  <inge@lysator.liu.se>

	Rename files according to the coding standards: TinyWebBrowser
	* src/lib/tinywebbrowser{cpp,h}:: renamed into TinyWebBrowser{cpp,h}:
	* src/lib/tinywebbrowser.h:   renamed into TinyWebBrowser.h
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/PlaceMarkInfoDialog.ui: use new name

	Rename files according to the coding standards: VectorComposer
	* src/lib/vectorcomposer{cpp,h}:: renamed into VectorComposer{cpp,h}:
	* src/lib/vectorcomposer.h:   renamed into VectorComposer.h
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleModel.h: use new name
	* src/lib/ViewParams{cpp,h}:: use new name

	Rename files according to the coding standards: VectorMap
	* src/lib/vectormap{cpp,h}:: renamed into VectorMap{cpp,h}:
	* src/lib/vectormap.h:   renamed into VectorMap.h
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleModel{cpp,h}:: use new name
	* src/lib/VectorComposer{cpp,h}:: use new name

2007-08-21  Torsten Rahn  <rahn@kde.org>

	* CMakeLists.txt:
	- Fixing the multilib issue for real.

2007-08-21  Torsten Rahn  <rahn@kde.org>

	* src/lib/CMakeLists.txt:
	  texcolorizer->TextureColorizer
	  Fix "elseif".
	* src/lib/texcolorizer.{cpp,h}:
	  texcolorizer->TextureColorizer

2007-08-21  Inge Wallin  <inge@lysator.liu.se>

	Rename files according to the coding standards: XmlHandler
	* src/lib/xmlhandler{cpp,h}:: renamed into XmlHandler{cpp,h}:
	* src/lib/xmlhandler.h:   renamed into XmlHandler.h
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleModel{cpp,h}:: use new name
	* src/lib/PlaceMarkManager{cpp,h}:: use new name

	Fix errors on Windows.
	* src/lib/gps/GpxFile{cpp,h}: (add*): Use dynamic casts instead of
	C-style casts

	Remove obsolete class: SearchComboBox
	* src/lib/searchcombobox{cpp,h}:: remove
	* src/lib/searchcombobox.h: remove
	* src/lib/CMakeLists.txt:  Reflect removal

2007-08-21  Murad Tagirov  <tmurad@gmail.com>

    Created class GpxFileViewItem. Moved almost all functioanality
    from GpxFileModel to FileViewModel and GpxFileViewItem. Currently
    some part of code is ifdefed with "#if 0" in MarbleWidget and
    MarbleControlBox to keep existing functionality.
    * src/lib/MarbleWidget.{h,cpp}
    * src/lib/MarbleModel.{h,cpp}
    * src/lib/FileViewModel.{h,cpp}: new class
    * src/lib/GpxFileViewItem.{h,cpp}
    * src/lib/MarbleControlBox{cpp,h}:
    * src/lib/CMakeLists.txt
    * src/lib/AbstractFileViewItem.h

    Introduced FileViewModel class and AbstactFileViewItem class
    with pure virtual methods (saveFile(), closeFile()). We could
    create KMLFileViewItem, GpxFileViewItem and implement this methods
    in order to show opened files in FileView without touching model.
    * src/lib/FileViewModel.{h,cpp}: new class
    * src/lib/AbstractFileViewItem.h: new class
    * src/lib/MarbleControlBox{cpp,h}:
    * src/lib/FileViewModel{cpp,h}:
    * src/lib/CMakeLists.txt
    * docs/projects/kml/KMLClasses.xmi


2007-08-21  Murad Tagirov  <tmurad@gmail.com>

    Inherit KMLPlaceMark -> PlaceMark -> KMLFeature like
    in kml class diagram.
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLPlaceMark.{h,cpp}
    * src/lib/PlaceMark.{h,cpp}


2007-08-20  Carlos Licea  <carlos_licea@hotmail.com>
    *MarbleWidget: added a test to see if the point given
     to geocoordinates in flat projection it's outside the map.
     Also solved a clip problem in paintEvent.
    *VectorMap: added just a clarification to the code.

2007-08-20  Murad Tagirov  <tmurad@gmail.com>

    Inherit PlaceMark from Serializable to be
    able to pack/unpack it's content
    * src/lib/kml/KMLFeature{cpp,h}:
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}
    * src/lib/PlaceMarkPainter{cpp,h}:
    * src/lib/PlaceMark.{h,cpp}

    Added destructor to PlaceMarkManager to delete m_documentList.
    Delete d->m_placeMarkManager in MarbleModel's destructor instead of
    d->m_placeMarkContainer.
    * src/lib/MarbleModel{cpp,h}:
    * src/lib/PlaceMarkManager.{h,cpp}

    Set placemark symbol like in xmlhandler. Added
    parsing of CountryNameCode tag
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}

2007-08-19  Torsten Rahn  <rahn@kde.org>

        * CMakeLists.txt: Install License.txt

2007-08-19  Inge Wallin  <inge@lysator.liu.se>

	Rename files according to the coding standards: PlaceMarkInfoDialog
	* src/lib/placemarkinfodialog{cpp,h}:: renamed into PlaceMarkInfoDialog{cpp,h}:
	* src/lib/placemarkinfodialog.h:   renamed into PlaceMarkInfoDialog.h
	* src/lib/placemarkinfodialog.ui:  renamed into PlaceMarkInfoDialog.ui
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleWidgetpopupMenu{cpp,h}:: use new name

	Name changes according to the coding standards:
	 - PlaceMarkModel
	 - PlaceMarkPainter
	 - PlaceMarkManager
	* src/lib/placemarkmanager{cpp,h}:: renamed into PlaceMarkManager{cpp,h}:
	* src/lib/placemarkmanager.h:   renamed into PlaceMarkManager.h
	* src/lib/placemarkmodel{cpp,h}::   renamed into PlaceMarkModel{cpp,h}:
	* src/lib/placemarkmodel.h:     renamed into PlaceMarkModel.h
	* src/lib/placemarkpainter{cpp,h}:: renamed into PlaceMarkPainter{cpp,h}:
	* src/lib/placemarkpainter.h:   renamed into PlaceMarkPainter.h
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleModel{cpp,h}:: use new names
	* src/lib/MarbleModel.h:   use new names

	Name changes according to the coding standards for MapTheme and
	PlaceMark.
	* src/lib/maptheme{cpp,h}:: renamed into MapTheme{cpp,h}:
	* src/lib/maptheme.h:   renamed into MapTheme.h
	* src/lib/placemark{cpp,h}:: renamed into PlaceMark{cpp,h}:
	* src/lib/placemark.h:   renamed into PlaceMark.h
	* src/lib/CMakeLists.txt: Reflect name changes.
	* src/lib/MarbleControlBox{cpp,h}:,
	* src/lib/MarbleModel{cpp,h}:,
	* src/lib/MarbleWidgetPopupMenu{cpp,h}:,
	* src/lib/MeasureTool.h,
	* src/lib/PlaceMarkContainer.h,
	* src/lib/kml/KMLFeature.h,
	* src/lib/placemarkinfodialog{cpp,h}:,
	* src/lib/placemarkpainter.{h,cpp},
	* src/lib/xmlhandler{cpp,h}::
	use new names

	Krazy issues: make constructors explicit, use Q_SLOTS macro.
	* src/KdeMainWindow.h (MainWindow): Make explicit and use Q_SLOTS
	* src/QtMainWindow.h (MainWindow):  Make explicit and use Q_SLOTS
	* src/lib/MarbleAboutDialog.h: Q_SLOTS

	Rename SearchListView into MarbleSearchListView
	* src/lib/searchlistview{cpp,h}:: rename into MarbleSearchListView{cpp,h}:
	(MarbleSearchListView): initialize d.
	* src/lib/searchlistview.h:   rename into MarbleSearchListView.h
	(d): new member
	* src/lib/MarbleControlBox.ui: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	Also introduce d-pointer at the same time.


================================================================
	Marble 0.4.0 released: revision 701563
================================================================


2007-08-18  Carlos Licea  <carlos_licea@hotmail.com>

	Removed the Projection function from MarbleModel.
	Aded m_lastProjection to MarbleWidget.

2007-08-18  Inge Wallin  <inge@lysator.liu.se>

	d-pointerify MarbleDirs
	* src/lib/MarbleDirs.{h,cpp}: add d-pointer

	d-pointerify MarbleThemeSelectView
	* src/lib/MarbleThemeSelectView.{h,cpp} (MarbleThemeSelectView):
	add d-pointer

	Fix Krazy issue 23: spelling errors
	* src/lib/MarbleDirs.h: spelling fixes

2007-08-18  Torsten Rahn  <rahn@kde.org>

    Changing the INSTALL file to feature
    the last working version number
    (of Marble 0.4.0 ) and added
    a description for adjusting MarbleDataPath

    * INSTALL

2007-08-18  Torsten Rahn  <rahn@kde.org>

    Removing Debug calls for release and
    Bumping up version number to

    Marble 0.4.0

    * src/KdeMainWindow{cpp,h}:
    * src/kdemain{cpp,h}:
    * src/QtMainWindow{cpp,h}:
    * src/lib/AbstractScanlineTextureMapper{cpp,h}:
    * src/lib/TileLoader{cpp,h}:
    * src/lib/HttpDownloadManager{cpp,h}:
    * src/lib/MarbleAboutDialog.ui
    * src/lib/MarbleDirs{cpp,h}:
    * src/lib/HttpFetchFile{cpp,h}:
    * src/lib/TextureTile{cpp,h}:
    * src/lib/placemarkmodel{cpp,h}:

2007-08-18  Torsten Rahn  <rahn@kde.org>

    * src/qtmain{cpp,h}::
    * src/kdemain{cpp,h}::
	Added --marbleDataPath command line option.

    * src/KdeMainWindow.{cpp,h}:
    * src/QtMainWindow.{cpp,h}:
	Added ability to read marbleDataPath setting
	(if present).

    * src/lib/MarbleWidget.{cpp,h}:
	Removed redundant setters and getters for
	MarbleDataPath (d'oh).

    * src/lib/CompassFloatItem.{cpp,h}:
	Added setSourceFile method
	(while I was on the wrong track fixing).

2007-08-18  Andrew Manson   <g.real.ate@gmail.com>

	Attempted to Correct a small glitch with the drawing of the gps
	Tracking object.
	* src/lib/gps/GpsTracking{cpp,h}: : altertered drawing procedure

    Added the implementation of saving and closing a file to the
    GpxFileModel.
    * src/lib/gps/GpxFileModel{cpp,h}: : save and close file

    Fixed a crash due to null pointer BoundingBox
    * src/lib/gps/TrackSegment{cpp,h}: :
    * src/lib/BoundingBox{cpp,h}: :
    * src/lib/AbstractLayer/AbstractLayerContainer{cpp,h}:} :

    Added an implementation for getting pixel position withought need
    for the "double radius" to "int radius" cast.
    * src/lib/AbstractLayer/AbstractLayerData.{h,cpp} : double math

    Added a new slot "enableFileViewActions()" and connected the
    relivant signals from the File View selection model. Also
    connected the button signals to the GpxFileModel save and close
    implementations.
    * src/lib/MarbleControlBox{cpp,h}: :

    Added info on how to build marble with debug info.
    * INSTALL : debug info

2007-08-18  Torsten Rahn  <rahn@kde.org>

	Trying to make MARBLE_DATA_PATH work for real.
	* CMakeLists.txt
	* data/CMakeLists.txt

2007-08-18 Carlos Licea <carlos_licea@hotmail.com>
    *MarbleModel: changed m_lastProjection to m_projection,
     also added a projection() which returns m_projection.
    *MarbleWidget: corrected setMapTheme so that it changes the
     mapTheme if either the theme or the projection have changed.
    *MeasureTool: changed the rectangularDrawDistancePath so that
     the paths are arcs and not lines anymore.

2007-08-18  Inge Wallin  <inge@lysator.liu.se>

	Rename KAtlasFlag into DeferredFlag:
	* src/lib/katlasflag{cpp,h}:: rename into DeferredFlag{cpp,h}:
	* src/lib/katlasflag.h:   rename into DeferredFlag.h
	* src/lib/placemarkinfodialog.{h,cpp}: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

2007-09-18  Frederik Schwarzer  <schwarzerf@gmail.com>

	Let the zoom slider get to the limits using the buttons.
	* src/lib/MarbleWidget{cpp,h}: (ZoomViewBy): Add new checks for the
	endpoints of the slider.

2007-08-18  Torsten Rahn  <rahn@kde.org>

    Load files in About Dialog on request.

    * src/lib/MarbleAboutDialog.{cpp,h,ui}
    * data/credits_data.html
    * data/credits_authors.html
    * data/CMakeLists.txt

2007-08-17  Torsten Rahn  <rahn@kde.org>

    Adding credits files.

    * data/credits_authors.html
    * data/credits_data.html

2007-08-17  Torsten Rahn  <rahn@kde.org>

    Adding Save and Close button for Andrew to
    the FileView.

    * src/lib/MarbleControlBox.ui

2007-08-17  Pino Toscano  <pino@kde.org>

    * src/KdeMainWindow.{cpp,h}
    * src/kdemain{cpp,h}:
    * src/marble.kcfg
    * src/settings.kcfgc
    * src/CMakeLists.txt
    Add KConfigXT settings for the KDE GUI.

2007-08-17  Inge Wallin  <inge@lysator.liu.se>

	Rename KAtlasControl into ControlView:
	* src/katlascontrol{cpp,h}:: rename into ControlView{cpp,h}:
	* src/katlascontrol.h:   rename into ControlView.h
	* src/KdeMainWindow.{h,cpp}: refer to new name
	* src/MainWindowCommon{cpp,h}:: refer to new name
	* src/kdemain{cpp,h}:: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	Note: Tackat will have to do the Qt-only version.

2007-08-17  Torsten Rahn  <rahn@kde.org>

    exposing runTimeMarbleDataPath to MarbleWidget's
    API.

    * src/lib/MarbleWidget.{cpp,h}
    * src/lib/MarbleDirs{cpp,h}:

2007-08-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/measuretool.{cpp,h}
    Renaming to MeasureTool.{cpp,h}

2007-08-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs{cpp,h}::
    Rearranging the code to be more in line with the
    description in MarbleDirs.h.
    Renaming the two marbleDataPaths to something more
    intuitive: compileTimeMarbleDataPath (for the cmake
    version) and runTimeMarbleDataPath (for the version
    that gets modified via the settings).

    * CMakeLists.txt:
    Adjusting the definition of MARBLE_DATA_PATH. -
    Should rather get defined like data_dir gets
    defined in CMakeList.txt in marble/data,
    shouldn't it?

2007-08-17  Torsten Rahn  <rahn@kde.org>

    Making naming of the directory paths more consistent
    with Qt/KDE naming scheme: "Dir" names a QDir,
    "Path" the QString of the respective directory name.

    systemDir --> systemPath, localDir --> localPath

    * src/lib/TileCreator{cpp,h}:
    * src/lib/placemarkmanager{cpp,h}:
    * src/lib/HttpDownloadManager{cpp,h}:
    * src/lib/HttpFetchFile{cpp,h}:
    * src/lib/maptheme{cpp,h}:
    * src/lib/tinywebbrowser{cpp,h}:
    * src/lib/MarbleDirs.{cpp,h}:

    Introduced MarbleDataPath as a "static global".

2007-08-16  Inge Wallin  <inge@lysator.liu.se>

	Make the compass work again
	* data/legend.html: Mention compass instead of windrose
	* data/CMakeLists.txt: install compass.svg instead of windrose.svg

	Rename KAtlasTileCreatorDialog into TileCreatorDialog
	* src/lib/katlastilecreatordialog{cpp,h}:: rename into TileCreatorDialog{cpp,h}:
	* src/lib/katlastilecreatordialog.h:   rename into TileCreatorDialog.h
	* src/lib/katlastilecreatordialog.ui:  rename into TileCreatorDialog.ui
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/MarbleModel{cpp,h}:: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

	Rename KAtlasMapScale into MapScaleFloatItem
	* src/lib/katlasmapscale{cpp,h}:: rename into MapScaleFloatItem{cpp,h}:
	* src/lib/katlasmapscale.h:   rename into MapScaleFloatItem.h
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

	Rename KAtlasWindRose into CompassFloatItem
	* src/lib/katlaswindrose{cpp,h}:: rename into CompassFloatItem{cpp,h}:
	* src/lib/katlaswindrose.h:   rename into CompassFloatItem.h
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/MarbleLegendBrowser.{h,cpp}: refer to new name
	* src/lib/MarbleControlBox{cpp,h}:: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	* data/svg/windrose.svg: rename into compass.svg

	Rename KAtlasCrossHair into CrossHairFloatItem
	* src/lib/katlascrosshair{cpp,h}:: rename into CrossHairFloatItem{cpp,h}:
	* src/lib/katlascrosshair.h:   rename into CrossHairFloatItem.h
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

2007-08-15  Tim Sutton   <tim@linfiniti.com>

 Final piece of the puzzle to have a working mac bundle:
       - install data into Contents/Resources now
       - moved mac path stuff into systemDir()

2007-08-16  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs.h:
    Adding summary of the discussion with Tim Sutton.

2007-08-15  Torsten Rahn  <rahn@kde.org>

    * src/lib/maptheme{cpp,h}::
    * src/lib/MarbleDirs{cpp,h}::
    Making MarbleDirs.h uninlined by adding MarbleDirs{cpp,h}:
    as suggested by Pino Toscano.
    Getting rid of unixDir.

2007-08-15 Carlos Licea <>
    *Integration:
    Finished the integration of the flat projection.

2007-08-15  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs.h:
    Adding some explanations how MarbleDirs is
    meant to work.

2007-08-15  Torsten Rahn  <rahn@kde.org>

    * CODING:
    Following up to Ingwa's recent work rules were
    added when a class should be prefixed "Marble".
    Fell free to add cases I forgot.

2007-08-15  Tim Sutton   <tim@linfiniti.com>

 Added logic to qtmain to search for qjpeg image plugin
 in application bundle.
 Modified 2-release-qt.sh to install qt image plugins
 and also tweaked it so Qt frameworks go into
 @executable_path/../Frameworks/Qt*
 Fixed compiler warnings in :
   src/lib/MarbleWidget{cpp,h}:
   src/lib/TileCreator{cpp,h}:
   src/lib/GeoPolygon{cpp,h}:
 The application now runs from the generated OSX
 bundle but with some issues that need to be resolved.

2007-08-14  Inge Wallin  <inge@lysator.liu.se>

	Rename LegendBrowser into MarbleLegendBrowser
	* src/lib/LegendBrowser{cpp,h}:: rename into MarbleLegendBrowser{cpp,h}:
	* src/lib/LegendBrowser.h: rename into MarbleLegendBrowser.h
	* src/lib/MarbleControlBox.ui: refer to new name
	* src/lib/MarbleControlBox{cpp,h}:: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

	Rename katlasthemeselectview into MarbleThemeSelectView:
	* src/lib/katlasthemeselectview{cpp,h}:: rename into
	MarbleThemeSelectView{cpp,h}::
	* src/lib/katlasthemeselectview.h: rename into
	MarbleThemeSelectView.h:
	* src/lib/MarbleControlBox.ui: refer to new name
	* src/lib/MarbleControlBox{cpp,h}:: refer to new name
	* src/lib/CMakeLists.txt: Reflect name change

	Krazy issue 22: signals and slots
	* src/lib/MarbleNavigator.h (MarbleNavigator): Use Q_SIGNALS and
	Q_SLOTS instead

	Krazy issue 18: inappropriate pass-by-value function args.
	* src/lib/MarbleControlBox{cpp,h}: (selectTheme): Take const QString &

	Krazy issue 13: proper include directives.
	* src/lib/MarbleAboutDialog.h
	* src/lib/kml/KMLPointParser{cpp,h}:
	* src/lib/MarbleWidget.h
	* src/lib/MarbleNavigator.h
	* src/lib/xmlhandler{cpp,h}:
	* src/lib/GeoPoint{cpp,h}:

	Krazy issue 11: Constructors should be declared explicit
	* src/lib/gps/GpsLayer.h (class GpsLayer),
	* src/lib/gps/GpsTracking.h (class GpsTracking): do it.

	Maintain binary forward compatibility through d-pointer
	* src/lib/MarbleControlBox.h: Move private member into private
	class in cpp file.
	* src/lib/MarbleControlBox{cpp,h}: (class MarbleControlBoxPrivate):
	m_mapthememodel: new member

2007-08-14  Torsten Rahn  <rahn@kde.org>

	* src/lib/GeoPolygon{cpp,h}::
	Make Marble work with PowerPC.
	Patch passed on by
	Steffen Joeris <steffen.joeris@skolelinux.de>

2007-08-14  Torsten Rahn  <rahn@kde.org>

	* src/lib/MarbleWidget.{cpp,h}:
        Adding method stub to configure MarbleDataDir

	* src/lib/TileCreator.{cpp,h}:
	Adding lots of more qDebugs to catch some
	possible errors and safer coding.
	Fix for the case where the image is smaller than
	2 * tileSize x tileSize.

2007-08-14  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/TileCreator{cpp,h}: (createTiles): Fix all warnings

	Fix the TileCreator that apparently got destroyed some time ago.
	* src/lib/TileCreator{cpp,h}: (createTiles): Fix infinite loop due to
	test of unsigned number against >= 0.
	(createTiles): fix wrong test of initial tile size.

2007-08-13  Torsten Rahn  <rahn@kde.org>

    * src/lib/TileCreator.{cpp,h}:
    Add a return value to createTiles ...

2007-08-13  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleControlBox.ui:
    Make it compile with Qt 4.2 again.

2007-08-13  Andrew Manson   <g.real.ate@gmail.com>

    Added File View Tab to the Marble Control box as a view to the
    GpxFileModel. The tab is disabled by default and needs command
    line arg --enableFileView to see.
    * src/kdemain{cpp,h}:: cmd line arg
    * src/katlascontrol{cpp,h}: : new method to enable/disable File view
    * src/lib/MarbleControlBox.ui : new tab

    Added a GpxFileModel to MarbleModelPrivate and added nessary
    accessors.
    * src/lib/MarbleWidget{cpp,h}: : accessor
    * src/lib/MarbleModel.h : new member variable and accessors

    Added nessary ModelItem functions to GpxFile
    * src/lib/gps/GpxFile{cpp,h}: : more like a model item

    Added new Class GpxFileModel
    * src/lib/gps/GpxFileModel.{h,cpp} : new class

    Added the use of a GpxFileModel to the GpsLayer
    * src/lib/gps/GpsLayer : used GpxFileModel


2007-08-13  Torsten Rahn  <rahn@kde.org>

	- adding window manager application icon
	- adding What's this icon to the ressource file.

    * src/marble.qrc
    * src/QtMainWindow{cpp,h}:
    * src/icons/marble.png

2007-08-13  Pino Toscano  <pino@kde.org>

    * src/KdeMainWindow:
    * src/marbleui.rc:
        - Make the KDE GUI look more like a KDE application.

2007-08-13  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget{cpp,h}::
    * src/lib/gps/Track{cpp,h}::
    * src/lib/TileCreator{cpp,h}::
    * src/lib/MarbleModel{cpp,h}::
    * src/lib/TextureTile{cpp,h}::
    * src/lib/texcolorizer{cpp,h}::
    * CMakeLists.txt:

        Patch by Tim Sutton of QGIS fame. Introduces
	some fixes and more careful coding to
	TileCreator, some minor fixes and qDebug statements.

2007-08-13  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleModel.{h,cpp}:
    * src/lib/maptheme{cpp,h}::
    * src/lib/katlasthemeselectview{cpp,h}::
        - Selecting the Maptheme icon in the themeview at startup.

    * src/MarbleTest{cpp,h}::
    * src/QtMainWindow{cpp,h}::
    * src/lib/MarbleWidget.{h, cpp}:
    * src/lib/MarbleControlBox.{ui,h,cpp}:
        - Saving and retrieving Home Location in settings.

2007-08-12  Torsten Rahn  <rahn@kde.org>

    * src/lib/gps/GpsTracking.{ cpp } :
	- disabled update method to make Marble compile again.
	Andrew, please fix your code in line 109. :-)

2007-08-11  Inge Wallin  <inge@lysator.liu.se>

	d-pointerify MarbleNavigator (also Krazy issue 8).
	* src/lib/MarbleNavigator.h (MarbleNavigator): Introduce d-pointer
	* src/lib/MarbleNavigator{cpp,h}: (MarbleNavigatorPrivate): new class
	(MarbleNavigator):use d-pointer where appropriate

	Fix some warnings
	* src/lib/gps/GpsTracking{cpp,h}:: Fix warnings

	Move MarbleNavigator from src/plugins/navigator/ to src/lib/
	* src/lib/MarbleNavigator.h,
	* src/lib/MarbleNavigator{cpp,h}:,
	* src/lib/MarbleNavigator.ui: Moved from src/plugins/navigator
	* src/lib/CMakeLists.txt,
	* src/plugins/navigator/CMakeLists.txt: Reflect changes.

	d-pointerify MarbleAboutDialog (also Krazy issue 8).
	* src/lib/MarbleAboutDialog.h (MarbleAboutDialog): Introduce d-pointer
	* src/lib/MarbleAboutDialog{cpp,h}: (MarbleAboutDialogPrivate): new class
	(MarbleAboutDialog):use d-pointer where appropriate

2007-08-11  Andrew Manson   <g.real.ate@gmail.com>

    Altered the updateGps() function in MarbleWidget so that it now
    only updates the region where the the gps marker was and
    currenly is
    * src/lib/MarbleWidget{cpp,h}: : updateGps() now uses regions

    Added a new class that represents a GpsTracking Object. It is
    designed to remove the need for the Gps Layer to know abount gpsd
    or any other methods of getting current location.
    * src/lib/gps/GpsTracking.{ h, cpp } : new class

    Removed anyting that GpsTracking now covers from GpsLayer
    * src/lib/gps/GpsLayer.{h, cpp} : removed tracking code

    Made convince method distance() static in AbstractLayer
    * src/lib/AbstractLayer/AbstractLayer.h : static methods

2007-08-11  Inge Wallin  <inge@lysator.liu.se>

	Rename class KAtlasAboutDialog into MarbleAboutDialog and change
	file names into MarbleAboutDialog.*
	* src/lib/MarbleAboutDialog{cpp,h}:: renamed from katlasaboutdialog{cpp,h}:
	* src/lib/MarbleAboutDialog.h: renamed from katlasaboutdialog.h
	* src/lib/MarbleAboutDialog.ui: renamed from katlasaboutdialog.ui
	* src/lib/MarbleWidgetPopupMenu{cpp,h}: (slotAboutDialog): Use new name
	* src/lib/CMakeLists.txt: Name changes as above.

	Remove warnings
	src/lib/MarbleWidget{cpp,h}: (paint): mark unused with Q_UNUSED()
	src/lib/global.h (Projection): Disable Mercator
	src/lib/texcolorizer{cpp,h}: (rectangularColorizer): comment out unused var

	Make the code clearer by naming things better.
	* src/lib/placemarkpainter.{h,cpp} (testXBug): Renamed from testbug().
	(m_useXWorkaround): renamed from m_useworkaround

	Fix Krazy issue 13: proper include directives.
	* src/lib/TileCreator.h (TILECREATOR_H): Renamed from TILESCISSOR_H

	More cleaning
	* src/lib/MarbleWidget{cpp,h}:: Cleaning and make the code follow the
	coding standards.

	Simplify code in preparation for refactorings
	* src/lib/placemarkpainter{cpp,h}: (sphericalPaintPlaceFolder): Code
	simplifications
	(rectangularPaintPlaceFolder): Code simplifications

2007-08-11  Torsten Rahn  <rahn@kde.org>

    Adding "Set Home Location" to the RMB menu.
    (Wanted to have this in before the message string freeze).
    Something is strange with the sign of the
    longitude stored in Radians .... I have to check that.

    TODO: store in configuration file.

    * src/lib/MarbleWidget{cpp,h}:
    * src/lib/MarbleWidgetPopupMenu.h
    * src/lib/MarbleWidgetPopupMenu{cpp,h}:

2007-08-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
        - Introduce setProjection() and projection()
	- introduce homePoint( double& lon, double& lat )

2007-08-11  Inge Wallin  <inge@lysator.liu.se>

	Added getter for symmetry.
	* src/lib/AbstractLayer/AbstractLayerInterface{cpp,h}: (visible): new
	method.

2007-08-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
        - Some fixes concerning Carlos' introduction of
        projections
        - make all methods accept Degree as a unit by
          default ( geoCoordinates RAD->DEG )
    * src/lib/MarbleWidgetInputHandler{cpp,h}::
    * src/lib/MarbleWidgetPopupMenu.{cpp,h}:
        - make all methods accept Degree as a unit by
          default ( geoCoordinates RAD->DEG )
    * src/lib/Quaternion{cpp,h}::
        - remove DEG2ONE.
        - fix an inaccuracy due to usage of int instead of double
    * src/lib/global.h:
        - remove DEG2ONE.
    * CODING:
        - adding a notion on upper/lower case conventions for
          variable / method names.

2007-08-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{h,cpp} : Introducing RAD2DEG and fixing
      rotate(phi,theta,psi) as well as other methods.

    * src/lib/BoundingBox.{h,cpp} : some minor coding style fixes.

    * src/lib/global.h : RAD2DEG, DEG2RAD, DEG2ONE, RAD2ONE

    Adjustments to the usage of RAD2DEG, etc.:
    * src/lib/vectormap{cpp,h}:
    * src/lib/GeoPoint.h
    * src/lib/kml/KMLPointParser{cpp,h}:
    * src/lib/global.h
    * src/lib/MarbleWidget.h
    * src/lib/MarbleControlBox{cpp,h}:
    * src/lib/xmlhandler{cpp,h}:
    * src/lib/GridMap{cpp,h}:
    * src/lib/GeoPoint{cpp,h}:
    * src/lib/MarbleWidgetInputHandler{cpp,h}:
    * src/qtmain{cpp,h}:

2007-08-10  Andrew Manson   <g.real.ate@gmail.com>

    Added a method to extract the global Quaternion from the Widget
    for the use in Bounding Box. Code was just Coppied from
    MarbleWidget::geoCoordinates.
    Added a method MarbleWidget::setBoundingBox that applies the
    current View's BoundingBox to the bounding box object in
    viewParams.
    * src/lib/MarbleWidget.{h,cpp} : added methods globalQuaternion
                                     and setBoundingBox

     Added the implementation of a GpxFile so that it may be used for
    a file model/view implementation. Just meant to seperate the
    containers from the model.
    * src/lib/gps/GpxFile.{h,cpp} : new class

    Added the simple implementation of the RouteContainer just as a
    completion of the Gps Collection classes.
    * src/lib/gps/RouteContainer.{cpp, h} : new class

    Added implementation of GpxFile to GpxSax
    * src/lib/gps/GpxSax.{cpp,h} : implemented GpxFile

    Added a constructor to TrackPoint that creates a deep copy of
    annother Trackpoint and fixed the drawing of each point.
    * src/lib/gps/TrackPoint.{h,cpp} : new constructor and better
                                       painting.

    Fixed the drawing of current position in GpsLayer and made it draw
    a directional arrow in the direction of travel.
    * src/lib/gps/GpsLayer{cpp,h}: : better current position drawn

    Implemented BoundingBox checking for TrackSegment
    * src/lib/gps/TrackSegment.{cpp, h } :bounding box

    Added a class that represents a bounding box and deals with any
    functions expected of a bounding box class such as intersection
    detection.
    * src/lib/BoundingBox.{h,cpp} : new class

    Added a default implemetation of paintLayer to AbstractLayer and
    added another convience class to measure the istance between two
    QPointF.
    * src/lib/AbstractLayer/AbstractLayer.{h,cpp} : default
                                        implementation of paint and
                                        new convinence class.

    Added a new interface that aviods the need to subclass
    AbstractLayer{data, container} to implement a new layer and
    instead making them only a default implementation.
    * src/lib/AbstractLayer/AbstractLayerInterface.{h, cpp}: new class

    Added a BoundingBox variable to ViewParams
    * src/lib/ViewParams.h : BoundingBox

    Added operator==() to GeoPoint that evaluates the lat and long
    using GeoPoint::geoCoordinates and compares them
    * src/lib/Geopoint.{h,cpp} : operator==()



2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Cleaning
	* src/lib/placemarkpainter{cpp,h}:: Change fontWidth into textWidth,
	because that's what it is.

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Tooltips for Mapthemes ...

        *  src/lib/vectorcomposer{cpp,h}:
        *  src/lib/maptheme{cpp,h}:
        *  src/lib/MarbleControlBox.ui
        *  src/lib/katlasthemeselectview{cpp,h}:

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Putting Findlibgps.cmake back into place
	which wasn't meant to get removed.

        *  Findlibgps.cmake

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Another patch by Tim Sutton of QGis fame.
	Improves Mac integration, introduces
	unit tests and fixes some indentation.

        *  install_mac/1-release-extra.sh
        *  install_mac/2-release-qt.sh
        *  src/lib/vectorcomposer{cpp,h}:
        *  src/lib/maptheme{cpp,h}:
        *  src/lib/TextureTile{cpp,h}:
        *  src/lib/GeoPolygon{cpp,h}:
        *  src/lib/MarbleDirs.h
        *  src/lib/CMakeLists.txt
        *  src/CMakeLists.txt
        *  tests/GeoPolygonTest{cpp,h}:
        *  tests/MarbleWidgetTest{cpp,h}:
        *  tests/CMakeLists.txt
        *  CMakeLists.txt

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Renaming TileScissor class and files to
	TileCreator.

	* src/lib/tilescissor{cpp,h}:
	* src/lib/TileCreator{cpp,h}:
	* src/lib/MarbleModel{cpp,h}:
	* src/lib/CMakeLists.txt
	* src/lib/tilescissor.h
	* src/lib/TileCreator.h
	* src/lib/katlastilecreatordialog{cpp,h}:
	* src/DESIGN
	* src/tilecreator/main{cpp,h}:
	* src/lib/tilescissor{cpp,h}:

2007-08-10  Torsten Rahn  <rahn@kde.org>

	* src/lib/tilescissor{cpp,h}::

	Fixing another issue reported by Luis Silva:

	"The image sizes must really be the correct ones
	otherwise the tiling process just puts the same
	image on both hemispheres."

	Cleaning up the TileScissor class a lot while
	fixing that issue: Renamed variables to be
	more suggestive and made code more elegant.

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Simplify: break out some common code into private methods.
	* src/lib/placemarkpainter{cpp,h}: (roomForLabel): new method
	(labelFontData): new method
	(sphericalPaintPlaceFolder): use new methods
	(rectangularPaintPlaceFolder): use new methods

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Fixing issue reported by Luis Silva by making sure
	that the preview images match the expected size:

	" Also the 'map view' tab gets garbled with previews of
	sizes other than 136x136. The previews go on top of each other."

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Simplify code to make it easier to find common code.
	* src/lib/placemarkpainter{cpp,h}: (sphericalPaintPlaceFolder):
	Simplify code structure.
	(rectangularPaintPlaceFolder): Reindent to follow code structure.
	Also makes it more like sphericalPaintPlaceFolder

	Integrate some changes from the KML SoC project.
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder): Remove
	double definition and #ifdef test
	(sphericalPaintPlaceFolder): Take firstTime parameter
	(rectangularPaintPlaceFolder): Take firstTime parameter
	(paintPlaceFolder): Use new call signatures.

	Fix Krazy issue 18: check for inappropriate pass-by-value args
	* src/lib/placemarkmanager.{h,cpp} (loadDocumentFromCache): Take
	QString& parameter.

2007-08-10  Torsten Rahn  <rahn@kde.org>

    - renaming katlasdirs.h -> MarbleDirs.h

     * ChangeLog
     * src/lib/tilescissor{cpp,h}:
     * src/lib/AbstractScanlineTextureMapper{cpp,h}:
     * src/lib/katlasdirs.h
     * src/lib/gps/Waypoint{cpp,h}:
     * src/lib/gps/TrackSegment{cpp,h}:
     * src/lib/placemarkpainter{cpp,h}:
     * src/lib/TileLoader{cpp,h}:
     * src/lib/katlasaboutdialog{cpp,h}:
     * src/lib/placemarkmanager.{h,cpp}
     * src/lib/placemarkinfodialog{cpp,h}:
     * src/lib/placemark{cpp,h}:
     * src/lib/LegendBrowser{cpp,h}:
     * src/lib/HttpDownloadManager{cpp,h}:
     * src/lib/vectorcomposer{cpp,h}:
     * src/lib/MarbleControlBox{cpp,h}:
     * src/lib/MarbleModel{cpp,h}:
     * src/lib/HttpFetchFile{cpp,h}:
     * src/lib/GlobeScanlineTextureMapper{cpp,h}:
     * src/lib/maptheme{cpp,h}:
     * src/lib/TextureTile{cpp,h}:
     * src/lib/tinywebbrowser{cpp,h}:
     * src/lib/MarbleDirs.h
     * src/lib/katlaswindrose{cpp,h}:
     * src/lib/CMakeLists.txt
     * src/lib/katlasflag{cpp,h}:
     * src/lib/placemarkmodel{cpp,h}:
     * src/lib/MarbleWidgetInputHandler{cpp,h}:
     * src/lib/FlatScanlineTextureMapper{cpp,h}:
     * src/DESIGN

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Move definition of enum Projection from class ViewParams to
	global.h
	* src/lib/global.h: Add definition of Projection
	* src/lib/ViewParams.h (ViewParams): Remove definition
	* src/lib/ViewParams{cpp,h}: (ViewParams): Move init of projection

2007-08-09  Inge Wallin  <inge@lysator.liu.se>

	Rename utils.h to global.h since it better describes what it is.
	* src/lib/utils.h: rename to global.h
	* GridMap{cpp,h}:,          GridMap.h,
	* MarbleModel{cpp,h}:,      MarbleModel.h,
	* MarbleWidget{cpp,h}:,
	* MarbleWidgetInputHandler{cpp,h}:,
	* placemarkpainter{cpp,h}:,
	* texcolorizer{cpp,h}:,
	* vectormap{cpp,h}:,        vectormap.h:
	include global.h instead of utils.h
	* src/lib/CMakeLists.txt: Add global.h to include files.

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - Fixed CID 4021:
      line 56: HttpJob  *job = new HttpJob();
      if acceptJob (line 63) returns false, job is leaked

2007-08-09  Inge Wallin  <inge@lysator.liu.se>

	Start of a unification of the projections.
	* src/lib/vectormap{cpp,h}: (createFromPntMap): Remove a difference
	between flat and mercator projections
	* src/lib/vectormap{cpp,h}:: Cleaning
	* src/lib/GeoPolygon{cpp,h}:: Cleaning

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - Introduce support for Radian/Degree in MarbleWidget.

    - Patch by Tim Sutton of QGIS fame: Make katlasdirs.h
	use MARBLE_DATA_PATH / CMAKE_INSTALL_PREFIX

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - Ladies and gentlemen, we introduce the
	International Date Line.
      Cross it from east to the west to enjoy
      a peek 24-hours ahead into the future of KDE 4.

     Our IDL includes the Kiribati line.

     More info at:
http://en.wikipedia.org/wiki/International_Dateline

     * tools/dateline/dateline.pro
     * tools/dateline/dateline{cpp,h}:
     * data/mwdbii/DATELINE.PNT
     * data/CMakeLists.txt

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - The guy's name is not Marcator but
	http://en.wikipedia.org/wiki/Gerardus_Mercator
	The same is true for the projection.

	Corrected Projections->Projection
	as it's not ints, bools, etc. either ;-)
    - Some changes related to the dateline.

    * src/lib/ViewParams.h
    * src/lib/vectorcomposer{cpp,h}:

2007-08-08  Murad Tagirov  <tmurad@gmail.com>

    - Added method to write cache index file.
    PlaceMarkManager will restore already loaded documents
    based on this index file. Added base methods to pack/unpack kml documents
    * src/lib/placemarkmanager.{h,cpp}

    - Added copyright information.
    * src/lib/kml/Serializable.h

2007-08-08  Torsten Rahn  <rahn@kde.org>

    - Fixing #endif and adding the missing icon for the Mac

    * src/CMakeLists.txt
    * src/mac/Contents/Resources/Marble.icns

2007-08-08  Torsten Rahn  <rahn@kde.org>

    - Initial support for the International Dateline

    * src/lib/vectorcomposer.{h,cpp}

    - Big Patch by Tim Sutton of QGIS fame:
	- lots of cmake changes mostly specific to the Mac
	  that remove the need for the BuildOnOSX.sh script
	- some minor fixes in the GPS and KML stuff

    * src/plugins/CMakeLists.txt
    * src/mac/CMakeLists.txt
    * src/mac/Contents/Resources/CMakeLists.txt
    * src/mac/Contents/CMakeLists.txt
    * src/lib/MarbleWidget{cpp,h}:
    * src/lib/gps/Route{cpp,h}:
    * src/lib/gps/Track{cpp,h}:
    * src/lib/kml/KMLDocumentParser{cpp,h}:
    * src/lib/kml/Serializable.h
    * src/lib/MarbleWidget.h
    * src/lib/CMakeLists.txt
    * src/CMakeLists.txt
    * cmake_templates/svnscript.cmake.in_cmake
    * cmake_templates/marblesvnversion.h.in_cmake
    * cmake_templates/cmake_uninstall.cmake.in
    * BuildOnOSX.sh
    * Findlibgps.cmake
    * data/CMakeLists.txt
    * CMakeLists.txt

    Hope this doesn't break too much ;-)

2007-08-07  Torsten Rahn  <rahn@kde.org>

    Please use lon-lat order in Marble (not lat-lon).

    - Cleaned up the MarbleWidget class: Added API docs,
      moved all occurences of lat-lon to lon-lat order.

    * src/lib/MarbleWidget.{h,cpp}
    * src/lib/MarbleWidgetInputHandler.{h,cpp}
    * src/lib/MarbleControlBox{cpp,h}:
    * src/MarbleTest{cpp,h}:
    * CODING

    Added lon-lat order to the CODING standards

2007-08-07  Torsten Rahn  <rahn@kde.org>

    - Added Settings saving for the GUI to the Qt4 frontend

    * src/QtMainWindow.{h,cpp}

2007-08-06  Murad Tagirov  <tmurad@gmail.com>

    Added initial support of serialization of kml
    objects to memory stream. In order to serialize any
    object class must be inherited from Serializable abastract class
    * src/lib/kml/Serializable.h: new file
    * src/lib/placemarkmanager{cpp,h}:
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLObject.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser{cpp,h}:
    * src/lib/kml/KMLContainer.{h,cpp}

2007-08-06  Torsten Rahn  <rahn@kde.org>

    - Cleaned up some "GPS" method names that are not really
      limited to GPS usage after question from Prashanth Udupa.
    - removed "timeout" signal from MarbleWidget as it seems
      to have been moved to MarbleModel.
      Andrew: I hope you're fine with these changes - otherwise
      tell me :-)

    * example2.ui
    * src/MarbleControlBox.{h,cpp}
    * src/lib/MarbleWidget.{h,cpp}
    * src/lib/MarbleWidgetInputHandler.{h,cpp}

2007-08-06  Torsten Rahn  <rahn@kde.org>

    - Clean up GlobeScanlineTextureMapper class
    - Use memcpy for interlaced mode

    * src/lib/GlobeScanlineTextureMapper.{h,cpp}

2007-08-06  Murad Tagirov  <tmurad@gmail.com

    Parse Marble's placemark specific fields
    "role" and "pop". Should use schema instead in feature
    * src/lib/kml/KMLDocumentParser{cpp,h}:
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLPointParser{cpp,h}:
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}

2007-08-05  Torsten Rahn  <rahn@kde.org>

    Starting to add "View" menu entry to Marble:
    - Show Navigation Panel, Full Screen, Status Bar
    Currently only available for the Qt4 version.
    TODO for tonight:
    - Add QSetting to save QMainWindow settings
    - Port the changes to the KDE version of Marble
    * src/katlascontrol.{h,cpp}
    * src/QtMainWindow.{h,cpp}

2007-08-05  Inge Wallin  <inge@lysator.liu.se>

	Compile!
	* src/lib/kml/KMLFeatureParser{cpp,h}: (characters): remove a variable.
	At least gcc 4.1.2 didn't like the previous code.

2007-08-05  Murad Tagirov  <tmurad@gmail.com>

    KMLContainer now returns PlaceMarkContainer which
    contains only placemarks that are inside visible area
    * src/lib/kml/KMLPlaceMarkParser{cpp,h}:
    * src/lib/kml/KMLContainer.{h,cpp}
    * src/lib/MarbleModel{cpp,h}:

2007-08-05  Inge Wallin  <inge@lysator.liu.se>

	Some trivial cleaning that I did while looking through the code to
	understand it better.
	* lib/AbstractScanlineTextureMapper{cpp,h}:,
	* lib/MarbleWidget{cpp,h}:,
	* lib/placemarkpainter{cpp,h}:,
	* lib/TileLoader{cpp,h}:,
	* lib/GlobeScanlineTextureMapper.h,
	* lib/placemarkpainter.h,
	* lib/TileLoader.h,
	* lib/GlobeScanlineTextureMapper{cpp,h}:,
	* lib/TextureTile{cpp,h}:,
	* lib/TextureTile.h,
	* lib/FlatScanlineTextureMapper{cpp,h}::
	Cleaning

2007-08-05  Murad Tagirov  <tmurad@gmail.com>

    Added "m_visible" to KMLFeature class. MarbleModel now
    paints only folders which are visible.
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/MarbleModel{cpp,h}:

    Updated class diagram and kml related task list
    * projects/kml/kml-tasks
    * projects/kml/KMLClasses.xmi

2007-08-05  Murad Tagirov  <tmurad@gmail.com>

    Added new "bool firstTime" parameter to
    PlaceMarkPainter::paintPlaceFolder method.
    * src/lib/placemarkpainter.{h,cpp}
    * src/lib/MarbleModel.{h,cpp}

2007-08-05  Torsten Rahn <rahn@kde.org>

	- Applied patch from "Prashanth Udupa" <prashanth.udupa@gmail.com>
	Thanks for the patch and for the awesome blog entry at:
	http://prashanthudupa.livejournal.com/

2007-08-04  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 14: inline methods in public classes.
	* src/lib/placemarkmodel.{h,cpp}: Move all inline methods to {cpp,h}:
	file
	* src/lib/PlaceMarkContainer.{h,cpp}: Move all inline methods to
	{cpp,h}: file

	Fix Krazy issue 12: validity of i18n calls.
	* src/KdeMainWindow{cpp,h}: (exportMapScreenShot): Add a context to
	the i18n call.

	Fix Krazy issue 8: public classes with private members
	* src/lib/MarbleControlBox.{h,cpp}: d-pointerify the private
	members that point to the tabs in the widget.

2007-08-04  Murad Tagirov  <tmurad@gmail.com>

    Added basic support of kml folders. MarbleModel iterates over list
    of kml folders and displays placemarks from each folder. This
    list of folders will be displayed in MarbleControlBox, so user
    will be able to enable/disable desired folder
    * src/lib/placemarkmanager.{h,cpp}
    * src/lib/kml/KMLDocument.{h,cpp}
    * src/lib/kml/KMLContainer.{h,cpp}
    * src/lib/MarbleModel{cpp,h}:

    Inherit KMLFeature -> PlaceMark, not KMLPlaceMark -> PlaceMark
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLPlaceMark.h

2007-08-04  Murad Tagirov  <tmurad@gmail.com>

    Refactored KMLContainer parsing. Ignore whitespaces while parsing.
    Added counter for current tag level to avoid parsing of wrong data.
    * src/lib/placemarkmanager{cpp,h}:
    * src/lib/kml/KMLDocumentParser{cpp,h}:
    * src/lib/kml/KMLContainerParser.{h,cpp}
    * src/lib/kml/KMLPointParser{cpp,h}:
    * src/lib/kml/KMLFeatureParser{cpp,h}:
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}
    * src/lib/kml/KMLDocument{cpp,h}:
    * src/lib/kml/KMLObjectParser.{h,cpp}

    Make PlaceMarkPainter's part which paint using VisiblePlaceMark comile again
    * src/lib/placemarkpainter.{h,cpp}

2007-08-04  Inge Wallin  <inge@lysator.liu.se>

	Move UI file include from the .h file to the cpp to make it easier
	to use for external applications.
	* src/lib/MarbleControlBox.h: Don't inherit from
	Ui::MarbleControlBox
	* src/lib/MarbleControlBox{cpp,h}:: let Ui::MarbleControlBox be a part
	of MarbleControlBoxPrivate
	(all): add 'd->uiWidget.' to all uses of previous members.

	Make it possible to choose between Flat projection and globe
	projection in one place only (utils.h).
	* src/lib/vectormap{cpp,h}:,
	* src/lib/utils.h,
	* src/lib/MarbleWidget{cpp,h}:,
	* src/lib/placemarkpainter{cpp,h}:,
	* src/lib/MarbleModel.h,
	* src/lib/GlobeScanlineTextureMapper.h,
	* src/lib/vectormap.h,
	* src/lib/AbstractScanlineTextureMapper.h,
	* src/lib/MarbleModel{cpp,h}:,
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:,
	* src/lib/texcolorizer.h,
	* src/lib/GridMap.h,
	* src/lib/texcolorizer{cpp,h}:,
	* src/lib/GridMap{cpp,h}:,
	* src/lib/MarbleWidgetInputHandler{cpp,h}::
	Include utils.h and remove all other defines of FLAT_PROJ

2007-08-03  Inge Wallin  <inge@lysator.liu.se>

	Finish change lng -> lon according to the coding standards in the
	library.
	* src/lib/GeoPolygon{cpp,h}:,
	* src/lib/MarbleWidgetInputHandler{cpp,h}:,
	* src/lib/MarbleWidgetPopupMenu{cpp,h}:,
	* src/lib/placemarkmanager{cpp,h}:,
	* src/lib/placemarkpainter{cpp,h}:,
	* src/lib/vectormap{cpp,h}::
	Change all lng -> lon

	Change lng -> lon according to the coding standards.
	* src/lib/AbstractScanlineTextureMapper{cpp,h}:,
	* src/lib/AbstractScanlineTextureMapper.h,
	* src/lib/FlatScanlineTextureMapper{cpp,h}:,
	* src/lib/FlatScanlineTextureMapper.h,
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:,
	* src/lib/GlobeScanlineTextureMapper.h,
	* src/lib/GridMap{cpp,h}:,
	* src/lib/GridMap.h,
	* src/lib/MarbleWidget{cpp,h}:,
	* src/lib/MarbleWidget.h,
	* src/lib/measuretool{cpp,h}:,
	* src/lib/measuretool.h,
	* src/lib/TileLoader{cpp,h}::
	Change all lng -> lon

	Reduce visibility of internal classes.
	* src/lib/ViewParams.h (class ViewParams): Don't export this class
	* src/lib/MarbleModel.{h,cpp}: Move #include of maptheme.h from .h
	to {cpp,h}:
	* src/lib/maptheme.h (class ViewParams): Don't export this class

 	Remove storage of half of image width/height
	* src/lib/GridMap{cpp,h}:: Remove storage of half of image width/heigh.

	Cleaning and remove storage of half of image width/height
	* src/lib/AbstractScanlineTextureMapper.{h,cpp},
	* src/lib/FlatScanlineTextureMapper{cpp,h}:,
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:: Cleaning

2007-08-02  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/MarbleModel{cpp,h}:: General cleaning.

2007-08-01  Murad Tagirov  <tmurad@gmail.com>

    Added methods to support kml subfolders
    * src/lib/kml/KMLFolder.{h,cpp}

2007-07-31  Inge Wallin  <inge@lysator.liu.se>

	Make kdemain and qtmain more alike.
	* src/kdemain{cpp,h}: (main): Add same setAttribute as in qtmain{cpp,h}:

	More krazy issue 14: inline methods in public classes
	* src/lib/placemarkpainter.h (drawLabelText): not inline
	* src/lib/placemark.h (population): not inline
	* src/lib/xmlhandler.h (popidx): not inline
	(seleced): not inline

	Make it easier to change test setup.
	* src/MarbleTest{cpp,h}: (timeDemo): More logical setup

	Fix krazy issue 14: inline methods in public classes
	* src/lib/GridMap.{h,cpp} (initCrossHorizon): Remove function and
	put in the code, since it was only used once..
	* src/lib/vectormap.{h,cpp} (initCrossHorizon): Remove function
	and put in the code, since it was only used once..

	Cleaning, according to the TODO file.
	* src/lib/maptheme{cpp,h}:: Clean (not many changes, really)

	Fix krazy issue 23: spelling errors.
	* src/lib/HttpFetchFile{cpp,h}: (httpRequestFinished): Fix spelling
	* src/lib/gps/Route{cpp,h}: (draw): Fix spelling

	Translate headers of MarbleControlBox tabs, and fix Krazy issue
	18: inappropriate pass-by-value function args.
	* src/lib/MarbleControlBox.{h,cpp} (setWidgetTabShown): Parameter
	QString& instead of QString
	(setNavigationTabShown),
	(setLegendTabShown),
	(setMapViewTabShown),
	(setCurrentLocationTabShown): Translate header of tabs

	Add a warning for tackat to look at.
	* src/lib/TileCache{cpp,h}: (insert): Add warning.

	Krazy issue 13: Proper include directives.
	* src/lib/TileCache{cpp,h}:: Guard
	* src/lib/gps/TrackContainer.h: Guard
	* src/lib/gps/TrackPoint.h: Guard

	Coding standards.
	* src/lib/MarbleWidgetInputHandler{cpp,h}:: Fix indentation according
	to coding standards.

	Move vector on/off parameters to ViewParams:
	* src/lib/ViewParams.h: new members: m_showIcelayer,
	m_showBorders, m_showRivers, m_showLakes
	* src/lib/ViewParams{cpp,h}: (constructor): initialize the new members
	* src/lib/vectorcomposer.h (class VectorComposer):
	(drawTexturemap): Change signature to only take a ViewParams*
	(paintBaseTexturemap): Change signature to take a ViewParams*
	(paintTexturemap): Change signature to take a ViewParams*
	* src/lib/vectorcomposer{cpp,h}::
	* src/lib/MarbleModel{cpp,h}: (paintGlobe): Call
	VectorComposer methods according to new signatures.
	* src/lib/MarbleWidget{cpp,h}:: Use new members in Viewparams

2007-07-30  Inge Wallin  <inge@lysator.liu.se>

	Move relief on/off parameter to ViewParams
	* src/lib/ViewParams.h: new member: m_showRelief
	* src/lib/ViewParams{cpp,h}: (constructor): initialize m_showRelief
	* src/lib/texcolorizer.h (class TextureColorizer): Change
	signature to only take a ViewParams*
	* src/lib/texcolorizer{cpp,h}: (colorize):
	  - take a ViewParams* as parameter only
	  - Get showRelief from the view params
	* src/lib/MarbleModel{cpp,h}: (paintGlobe): Call
	TexColorizer::colorize according to new signature.
	* src/lib/MarbleWidget{cpp,h}: (showRelief): Get data from viewparams.
	(setShowRelief): set data in viewparams

2007-07-29  Murad Tagirov  <tmurad@gmail.com>

    Temporary disabled weightfilter if KML_GSOC is defined
    * src/lib/placemarkpainter{cpp,h}:

    Commented m_coordinate field becauase PlaceMark class
    already has same protected field
    * src/lib/kml/KMLPlaceMark.h

    Not delete m_placeMarkContainer field is KML_GSOC is defined
    * src/lib/MarbleModel{cpp,h}:

2007-07-29  Torsten Rahn  <rahn@kde.org>

	- getting KDE.NL out of the water and fixing Ingwa's
	  most recent complaint.
	  -- which was depth in lakes.

2007-07-29  Torsten Rahn  <rahn@kde.org>

	- ressource priorities: homeDir, systemDir, unixDir

2007-07-29  Torsten Rahn  <rahn@kde.org>

	- Added the "Plain Map". Extended configuration abilities
	  for the different maps via the .dgml file.
	  This will make Danny Allen slightly more happy.

2007-07-28  Torsten Rahn  <rahn@kde.org>

	- Added a TileCache. This makes moving back and forth a
	  smoother experience.
	- Start to measure in --timedemo only as soon as all needed
	  tiles got cached already.
	- TODO: Preload tiles which will likely need to get loaded.
	  This would make Marble feel snappier as the preloaded tiles
	  could be loaded in the background.

2007-07-25  Andrew Manson   <g.real.ate@gmail.com>

    Added a Test to Marble test that returns a set of averages at
    different zoom levels for drawing a large gpx file
    * src/MarbleTest. {cpp,h} : Added the test

    Added teh catch for the command line argument "--gpsdemo" that
    initiates the Gps test
    * src/kdemain{cpp,h}::
    * src/qtmain{cpp,h}::

    Added accessors to katlascontrol for enableing/disableing the
    tabs in MarbleControlBox
    * src/katlascontrol.{cpp,h}:

    Added new Class as a representation of a gps Route (untested)
    * src/lib/gps/Route.(cpp,h):

    Added getters for all member variables and repaired all the Api
    Comments to follow the style of other files
    * src/lib/gps/GpsElement.h : comments + getters
    * src/lib/gps/GpsElement{cpp,h}:: comments + getters
    * src/lib/gps/Track.h: comments

    Made GpsDataElements follow more object oriented aproach layed
    down by AbstractLayerData by implementing draw(). Cleaned up Api
    comments.
    * src/lib/gps/Track.{h,cpp}: following OO Aproach
    * src/lib/gps/Waypoint.{h,cpp}: comments, OO Aproach

    Repaired problems with Gpx file loading and applied a true
    representation of a tracksegment
    * src/lib/gps/GpxSax{cpp,h}::

    made TrackSegment follow Object Oriented Aproach and draw a red
    triangle after every 5 trackpoints
    * src/lib/gps/TrackSegment.{cpp,h}:

    Added a convience method to AbstractLayer to finde the square of
    the distance between 2 QPoints
    * src/lib/AbstractLayer/AbstractLayerContainer.{h,cpp}:

    Added a method to MarbleModel to stop the polling and start it
    again at a specified speed ( currently used to stop polling while
    doing gps test)
    * src/lib/MarbleModel.{h,cpp}:

    added functionality to add and remove tabs to MarbleControlBox
    * src/lib/MarbleControlBox.{cpp,h}:

2007-07-25  Torsten Rahn  <rahn@kde.org>

	- Making Marble aware of 404's, so tiles only get saved if they get
	  downloaded successfully.
	- Make sure to black list URL's which don't work so we don't create a DOS attack ;-)

2007-07-25  Inge Wallin  <inge@lysator.liu.se>

	Continue the separation of Model/View by moving more stuff to
	ViewParams:
	* src/lib/placemarkpainter.h (m_showCities, m_showTerrain): Move
	to ViewParams.
	(showCities,showTerrain,setShowCities,setShowTerrain): remove
	* src/lib/ViewParams.h (m_showCities, m_showTerrain): new members
	* src/lib/ViewParams{cpp,h}: (m_showCities, m_showTerrain): initialize
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder,isVisible):
	Take parameter ViewParams*
	* src/lib/MarbleModel{cpp,h}: (paintGlobe): Use new call signature for
	PlaceMarkPainter::paintPlaceFolder
	* src/lib/MarbleWidget{cpp,h}: (showTerrain): Use new call signature
	for all of the above.

2007-07-24  Inge Wallin  <inge@lysator.liu.se>

	Fix krazy issue 4: Check for an acceptable copyright.
	* src/lib/utils.h: Fix Copyright.

2007-07-24  Torsten Rahn  <rahn@kde.org>

	- 6 digits column and row coordinates for tiles
	- adjusting the BlueMarble and CityLights theme appearance
	  to the uploaded tiles

2007-07-23  Murad Tagirov  <tmurad@gmail.com>

	Fixed compilation of code ifdefed with KML_GSOC
	* src/lib/MarbleModel{cpp,h}:

2007-07-23  Inge Wallin  <inge@lysator.liu.se>

	Move the image caches to ViewParams (same commit as the next entry)
	* src/lib/ViewParams.h (ViewParams): m_coastImage: New member
	* src/lib/ViewParams{cpp,h}: (ViewParams): Initialize new member
	* src/lib/MarbleWidget{cpp,h}:: Use new call conventions everyhere
	* src/lib/MarbleModel.{h,cpp} (paintGlobe): new parameters:
	width,height

	Make the resize functions take width, height parameters instead of
	a QImage*
	* src/lib/MarbleModel{cpp,h}: (resize): Take width,height parameters
	and use them for all calls.
	* src/lib/AbstractScanlineTextureMapper{cpp,h}: (resizeMap):
	* src/lib/GlobeScanlineTextureMapper{cpp,h}: (resizeMap):
	* src/lib/GridMap{cpp,h}: (resizeMap):
	* src/lib/vectorcomposer{cpp,h}: (resizeMap):
	* src/lib/vectormap{cpp,h}: (resizeMap): Take width,height parameters
	instead of a QImage*.

	Move some more view parameters to ViewParams
	* src/lib/ViewParams.h (ViewParams): Added members m_showGrid,
	m_showPlaceMarks, m_showElevationModel
	* src/lib/ViewParams{cpp,h}: (ViewParams): Initialize new members
	* src/lib/Marble{Model,Widget}.{h,cpp} (showGrid, showPlaceMarks,
	showElevationModel + set... methods): Remove. Use the ones in
	MarbleWidget or ViewParams instead.

2007-07-20  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 23: Spelling errors.
	* src/lib/AbstractLayer/AbstractLayer.h (class AbstractLayer): Fix
	spelling mistakes

	Remove warnings
	* src/lib/gps/GpxSax{cpp,h}:: Remove most warnings
	* src/lib/AbstractLayer/AbstractLayer{cpp,h}:
	* src/lib/AbstractLayer/AbstractLayerData{cpp,h}:
	* src/lib/placemarkpainter{cpp,h}:
	* src/lib/kml/KMLObject{cpp,h}:
	* src/lib/kml/KMLPointParser{cpp,h}:
	* src/lib/kml/KMLFeatureParser{cpp,h}:
	* src/lib/HttpDownloadManager{cpp,h}:
	* src/lib/TextureTile{cpp,h}:
	* src/lib/texcolorizer{cpp,h}:
	Remove all warnings,

	Fix Krazy issue 18: Inappropriate pass-by-value.
	* src/lib/MarbleWidget{cpp,h}: (openGpxFile): Take QString& instead of
	QString.

2007-07-19  Torsten Rahn  <rahn@kde.org>

- Adding a GUI item to change the projection. Disabled for now.

2007-07-19  Inge Wallin  <inge@lysator.liu.se>

	Put more stuff into ViewParams.
	* src/lib/ViewParams.h (ViewParams): New members: m_radius,
	m_radiusUpdated, m_planetAxis, m_planetAxisUpdated.
	* src/lib/ViewParams{cpp,h}: (ViewParams): Initialize new members
	* src/lib/Marble{Model,Widget}.{h,cpp}: Move lots of methods from
	MarbleModel to MarbleWidget.
	(paintGlobe): New parameter redrawBackground
	* src/lib/katlasviewinputhandler.{h,cpp}: adapt to changes above.

2007-07-18  Torsten Rahn  <rahn@kde.org>

- Redo for the GPS tab (Now called "Current Location")
- Disabling that widget as it's meant to be offered just for a
particular use case where Marble is meant to provide a dialog

Sorry Andrew - I needed these changes immediately
for a presentation yesterday.

2007-07-15  Torsten Rahn  <rahn@kde.org>

- Making Marble compile again.

2007-07-12  Andrew Manson   <g.real.ate@gmail.com>
    Cleaned up the comments for all of the AbstractLayer classes and
    formalised the api more.

    AbstractLayer now contains a Vector of AbstractLayerContainers
    and a simple implementation to call each of their draw() methods
    when the AbstractLayer draw() method is called.
    * src/lib/AbstractLayer/AbstractLayer.{h,cpp}

2007-07-12  Murad Tagirov  <tmurad@gmail.com>
    Inherit KMLPlaceMark from Placemark to not touch
    placemarks painting at this step
    * src/lib/kml/KMLPlaceMark.h

    Added method to KMLDocument to obtain active PlaceMarkContainer.
    PlaceMarkManager uses this to get placemarks which are on a screen
    * src/lib/kml/KMLDocument.{h,cpp}
    * src/lib/placemarkmanager.{h,cpp}

    Updated kml-tasks after talk on IRC with Torsten
    * projects/kml/kml-tasks

2007-07-11  Torsten Rahn  <rahn@kde.org>

- Fixed tiny build problem introduced by WildFox.
- Various tiny cleanups

2007-07-11  Murad Tagirov  <tmurad@gmail.com>

    Added support to open kml files from dialog
    * src/QtMainWindow{cpp,h}:

    Use ifdef in addPlaceMarkFile method to apply new kml parsing
    * src/lib/placemarkmanager{cpp,h}:

2007-07-11  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 22: Check for signals and slots
	* src/lib/MarbleControlBox.h (MarbleControlBox): Use Q_SLOTS and
	Q_SIGNALS instead slots and signals

2007-07-11  Murad Tagirov  <tmurad@gmail.com>

    Use QCoreApplication instead of QApplication
    Use "Schema" tag to compliant to kml reference
    * tools/asc2kml/asc2kml{cpp,h}:

    Updated kml diagram after talk with Inge Wallin
    * projects/kml/KMLClasses.xmi

2007-07-11  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issues 4 and 15: copyright and license
	* src/lib/AbstractScanlineTextureMapper.h
	* src/lib/AbstractScanlineTextureMapper{cpp,h}:
	* src/lib/FlatScanlineTextureMapper.h
	* src/lib/FlatScanlineTextureMapper{cpp,h}:
	* src/lib/GlobeScanlineTextureMapper.h
	* src/lib/GlobeScanlineTextureMapper{cpp,h}:
	* src/lib/gps/GpsLayer.h: Fix license and copyright

	Fix Krazy issue 4: Acceptable copyright.
	* src/lib/gps/Track{cpp,h}: (addTrackSeg): Fix Krazy issue and cleaning

2007-07-10  Inge Wallin  <inge@lysator.liu.se>

	Break out drawing of the atmosphere effect into its own function
	* src/lib/MarbleWidget.{h,cpp} (drawAtmosphere): New function
	(zoomView): Call drawAtmosphere()
	(resizeEvent): Call drawAtmosphere()
	* src/lib/MarbleModel{cpp,h}: (resize): Remove draw atmosphere

	Introduce the ViewParams class and move one item into it.
	* src/lib/ViewParams.{h,cpp}: new files.
	* src/lib/MarbleWidget{cpp,h}: (class MarbleWidgetPrivate): Add
	m_viewParams and delete m_canvasImage
	* src/lib/MarbleModel.{h,cpp}: Use ViewParams where applicable.

	Move initialization of the basic image from MarbleModel to
	MarbleWidget
	* src/lib/MarbleModel{cpp,h}: (setRadius): Remove most contents
	* src/lib/MarbleWidget{cpp,h}: (zoomView): Add the contents from above

	Krazy fix: Use proper include directives
	* src/lib/httpfetchfile.h: Fix include

	Krazy fixes: Add 'explicit' to constructors:
	* src/lib/AbstractScanlineTextureMapper.h,
	src/lib/FlatScanlineTextureMapper.h,
	src/lib/GlobeScanlineTextureMapper.h: Add explict keyword

	Remove m_canvasimg from MarbleModelPrivate.
	* src/lib/MarbleModel.{h,cpp} (paintGlobe): Add parameter canvasImage
	(setRadius): Add parameter canvasImage
	(resize):  Add parameter canvasImage
	(setCanvasImage): removed
	* src/lib/MarbleWidget{cpp,h}:: Follow new call signatures

	Remove m_view from MarbleModelPrivate so that the Model no longer
	keeps track of the View.
	* src/lib/MarbleModel.{h,cpp} (setMapTheme): Add a parent
	parameter
	(class MarbleModelPrivate): remove m_view.
	* src/lib/MarbleWidget{cpp,h}: (setMapTheme): Use new call convenction.

	Improve parameter parsing in KDE version.
	* src/kdemain{cpp,h}: (main): Use KDE classes to parse command line

2007-07-10  Torsten Rahn  <rahn@kde.org>

- Fixed disabled accurate pole texture mapping.
- Fixed miscalculated interpolation borders (will speed up Marble in
quite some cases)

2007-07-09  Torsten Rahn  <rahn@kde.org>

- "I don't like to give away pizzas for nothing ;-)"-performance patches
  for mapTexture()

  Results in almost 20% better overall performance.

- Better testcase for MarbleTest

- Adding airports ( not done yet )

- Small patches by Benoit Sigoure
  (which result in maybe 1% improved performance here)

- initial changes to tinywebbrowser to get image loading
  for Wikipedia support get done in the future.

2007-07-07  Inge Wallin  <inge@lysator.liu.se>

	d-pointer'ify LegendBrowser
	* src/lib/LegendBrowser.{h,cpp}: Use d-pointer

	Remove inline functions in LegendBrowser
	* src/lib/LegendBrowser.{h,cpp}: Move all the slots into the cpp
	file, since we don't want exported classes with inline member
	functions.

	Fix d-pointer for MarbleModel
	* src/lib/MarbleModel{cpp,h}:: Move m_timer to MarbleModelPrivate

	d-pointer'ify PlaceMarkModel
	* src/lib/placemarkmodel.{h,cpp}: Use d-pointer

2007-07-07  Torsten Rahn  <rahn@kde.org>

- Fix the bug that lets the wrong texture be used at high zooms.
  The fix only works until zoomlevel 12. For zoom level 13
  the bug will reappear: It happens due to values exceeding their maximum range.

2007-07-06  Torsten Rahn  <rahn@kde.org>

- Fixes for Andrew's File Open Dialog.

2007-07-06  Torsten Rahn  <rahn@kde.org>

* src/lib/<placemarkmodel{cpp,h}::

- Patch by Benoit Sigoure aka Tsuna.

Fixes Marble's previous habit not to recognize placemark
names if they are typed in lower case.

This has recently been an issue that was frequently complained about.

Thanks Benoit!

2007-07-06  Inge Wallin  <inge@lysator.liu.se>

	Clean the AbstractLayer class
	* src/lib/AbstractLayer/AbstractLayer.{h,cpp}: general cleaning
	(showLayer): renamed into visible.
	(setShowLayer): renamed into setVisible.
	* src/lib/MarbleModel{cpp,h}:: use new names
	* src/lib/MarbleWidget{cpp,h}:: Use new names
	* src/lib/FlatScanlineTextureMapper.h: Use new names

	Cleaning and Apidox
	* src/lib/MarbleModel.{h,cpp} (MarbleModel): Clean up, and Apidox.

2007-07-04  Inge Wallin  <inge@lysator.liu.se>

	d-pointer'ify MarbleControlBox
	* src/lib/MarbleControlBox.{h,cpp}: Use d-pointer

2007-07-02 Murad Tagirov  <tmurad@gmail.com>

    Removed calling of "clear" method in constructor of PlaceMarkContainer.
    * src/lib/PlaceMarkContainer{cpp,h}:

    Updated kml class diagram to show how to integrate KMLDocument with
    current PlaceMarkPainter class. Should discuss with Marble people.
    * projects/kml/KMLClasses.xmi

2007-07-02  Inge Wallin  <inge@lysator.liu.se>

	Fix the compile for QTONLY.
	* CMakeLists.txt: Apply fixes for QTONLY that were done previously
	for KDE
	* src/CMakeLists.txt: Separate the QTONLY and KDE cases

	Move MarbleControlBox into the library where it belongs.
	* src/MarbleControlBox.{h,cpp}: Move to src/lib
	* src/MarbleControlBox.ui: Move to src/lib and fix includes
	* src/katlascontrol{cpp,h}:: Fix includes
	* src/CMakeLists.txt: Fix include directories
	* src/lib/CMakeLists.txt: Fix include directories

2007-07-01  Murad Tagirov  <tmurad@gmail.com>

	Initial commit of kml-tasks file which is a list of tasks to be done
	* projects/kml/kml-tasks: new

2007-07-01  Inge Wallin  <inge@lysator.liu.se>

	* src/DESIGN: Improve documentation

2007-06-28  Andrew Manson   <g.real.ate@gmail.com>

    Added a new tab to MarbleControlBox, Gps Option, and setup method
    in MarbleControlBox.h/cpp. Also connected nessary signals for
    using GpsOption.
    *src/MarbleControlBox.{h,cpp} (setupGpsOption) : New Method

    Added accessors and setters in MarbleWidget for showing the
    Gps Layer
    *src/lib/MarbleWidget.{h,cpp} (showGps, setShowGps) : New Methods

    Fixed the constructor of AbstractLayer to include
    AbstractContainer and fixed the look. Also included bool value in
    Layer to mark if it is visible.
    *src/lib/AbstractLayer/AbstractLayer.{h,cpp} (m_showLayer):New

    Added nessary variables to MarbleModelPrivate for the gps layer
    * src/lib/MarbleModel{cpp,h}: (m_gpsLayer, m_showGps) : New Variables

    Added new file to take care of gps layer with a Waypoint to
    represent current position.
    * src/lib/gps/GpsLayer: new

2007-06-27  Inge Wallin  <inge@lysator.liu.se>

	Temporarily bring back the old paintPlaceFolder due to problems
	just before the tagging of KDE alpha2.
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder): Bring back
	the old version.
	* src/lib/placemark.{h,cpp}: Bring back old members

2007-06-26  Inge Wallin  <inge@lysator.liu.se>

	Break out search for label space.
	* src/lib/placemarkpainter.{h,cpp} (roomForLabel): new function
	* src/lib/placemarkpainter{cpp,h}: (paintPlaceFolder): call roomForLabel

	* src/lib/placemarkpainter.h
	(PlaceMarkPainter::m_visiblePlaceMarks): use QList instead of QVector
	* src/lib/placemarkpainter{cpp,h}: (paintPlaceFolder): Almost make the
	QPixmap cache work.

2007-06-25  Inge Wallin  <inge@lysator.liu.se>

	Split out the check for visibility of a PlaceMark
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder): take
	width/height as parameters instead of the same/2.
	(paintPlaceFolder): call isVisible.
	(isVisible): New method
	* src/lib/MarbleModel{cpp,h}: (paintGlobe): Use new call signature for
	paintPlaceFolder

	Cleaning in preparation for a bugfix
	* src/lib/GridMap{cpp,h}::  Cleaning
	 (createTropics): Show the tropics/polar circles already at radius=400
	* src/lib/MarbleWidget{cpp,h}: (centerOn): Remove superfluous code

2007-06-24  Inge Wallin  <inge@lysator.liu.se>

	Cleaning while learning the code
	* src/lib/placamarkmanager.h: Comment
	* src/lib/MarbleModel{cpp,h}:: Comments and cleaning

2007-06-23  Inge Wallin  <inge@lysator.liu.se>

	Add support for setting the home point and zoom (not working yet)
	* src/lib/MarbleWidget{cpp,h}: (class MarbleWidgetPrivate): new
	methods: m_homePoint and m_homeZoom
	* src/lib/MarbleWidget.{h,cpp} (setHome): New method
	* src/lib/MarbleModel.{h,cpp} (rotateTo): new method

2007-06-22  Inge Wallin  <inge@lysator.liu.se>

	Cleaning
	* src/lib/MarbleWidget.{h,cpp}: Cleaning

	Fix a bug where wrong PlaceMark was reused.
	* src/lib/placemarkpainter{cpp,h}: (class VisiblePlaceMark): new method
	(paintPlaceFolder): Set PlaceMark when a VisiblePlaceMark is reused.

	Optimize memory usage by only save labels for those PlaceMarks
	that are actually visible.
	* src/lib/placemark.h (class PlaceMark): Remove members
	m_symbolPixmap, m_symbolPos, m_labelPixmap, m_textRect, m_visible
	and their accessor functions.
	* src/lib/placemark{cpp,h}:: (PlaceMark): Remove initialization of
	removed members.
	* src/lib/placemark.h: (PlaceMarkContainer::clearTextPixmaps):
	Remove
	* src/lib/placemarkpainter.h (class PlaceMarkPainter): New members
	m_visiblePlacemarks, m_visiblePlacemarksPool
	* src/lib/placemarkpainter{cpp,h}: (class VisiblePlaceMark): New class
	(paintPlaceFolder): Use the VisiblePlacemarks in painting
	* src/lib/MarbleModel{cpp,h}: (setMapTheme): Don't call clearTextPixmaps
	* src/lib/MarbleWidget{cpp,h}: (centerOn): Don't call clearTextPixmaps

2007-06-21  Andrew Manson   <g.real.ate@gmail.com>

	Fixed a simple off by one error in TextureMapper{cpp,h}:. The issue
	was with the implementation of interlacing, or in fact when the
	display stopped using that method to draw.

2007-06-19  Inge Wallin  <inge@lysator.liu.se>

	Fix linking issue with AbstractLayer and Q_OBJECT
	* src/lib/CMakeLists.txt: Include AbstractLayer/AbstractLayer{cpp,h}:
	* src/lib/AbstractLayer/AbstractLayer{cpp,h}:: Include moc file.

2007-06-19  Andrew Manson   <g.real.ate@gmail.com>

    Incuded the nessary classes for all GPS Data Structures available
    in the GPX schema.
    * src/lib/gps/GpsElement.[cpp,h] : Added
    * src/lib/gps/Route.[cpp,h] : Added
    * src/lib/gps/Track.[cpp,h] : Added
    * src/lib/gps/Waypoint.[cpp,h] : Added
    * src/lib/gps/WaypointContainer.[cpp,h] : Added

    Added Implementations of nessary AbstractLayer classes that are
    extended by the GPS Classes.
    * src/lib/AbstractLayer/AbstractLayerContainer{cpp,h}: : Added
    * src/lib/AbstractLayer/AbstractLayerData{cpp,h}: : Added

2007-06-17  Inge Wallin  <inge@lysator.liu.se>

	Start of a simple system to only store pixmaps and other UI data
	for visible placemarks.
	* src/lib/placemarkpainter{cpp,h}: (class VisiblePlaceMark): New class

	Name change to improve readability
	* src/lib/placemark.h (class PlaceMark): m_rect -> m_textRect
	* src/lib/placemark{cpp,h}: (PlaceMark): Use new name

2007-06-16  Inge Wallin  <inge@lysator.liu.se>

	Simplify and clean the code in preparation for other changes.
	* src/lib/placemarkpainter{cpp,h}: (paintPlaceFolder): Simplify the
	code a lot, and in particular use pre-increments for iterators,
	which makes it a lot faster.

	Change name of class PlaceContainer into PlaceMarkContainer.
	* src/lib/placecontainer.h:   new name: PlaceMarkContainer.h
	* src/lib/placecontainer{cpp,h}:: new name: PlaceMarkContainer{cpp,h}:
	* src/lib/CMakeLists.txt: reflect the name change
	* src/lib/MarbleModel.h,       src/lib/MarbleModel{cpp,h}:,
	* src/lib/MarbleWidget{cpp,h}:,
	* src/lib/kml/KMLDocument{cpp,h}:,
	* src/lib/kml/KMLFolder{cpp,h}:,
	* src/lib/placemarkmanager.h,  src/lib/placemarkmanager{cpp,h}:,
	* src/lib/placemarkmodel.h,    src/lib/placemarkmodel{cpp,h}:,
	* src/lib/placemarkpainter.h,  src/lib/placemarkpainter{cpp,h}:,
	* src/lib/xmlhandler.h,        src/lib/xmlhandler{cpp,h}::
	  Use the new names.

2007-06-16  Murad Tagirov  <tmurad@gmail.com>

    Created KMLPointParser which parses coordinates
    tag and sets parsed lon and lat to KMLPlaceMark.
    * src/lib/kml/KMLPointParser.{h,cpp} new file
    * src/lib/kml/KMLPlaceMark.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}

    Moved "deg2rad" constant from xmlhandler to GeoPoint.
    * src/lib/xmlhandler{cpp,h}:
    * src/lib/GeoPoint{cpp,h}:

    Added "m_parsed" field to parser classes to avoid
    parsing of incorrect tag sequences.
    * src/lib/kml/KMLDocumentParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}

    Updated class diagram to show relations between
    parser classes. Added documentation for some classes
    * projects/kml/KMLClasses.xmi

2007-06-16  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 22: Check for spelling errors
	* src/lib/kml/KMLPlaceMarkParser{cpp,h}:: appers -> appears

2007-06-16  Murad Tagirov  <tmurad@gmail.com>

    Implemented parsing of KMLFeature fields
    (name, description, address, phone number)
    * src/lib/kml/KMLFeature.{h,cpp}

    Added protected field m_object to KMLObjectParser
    as this field is common for all parsers
    * src/lib/kml/KMLObjectParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}
    * src/lib/kml/KMLContainerParser.{h,cpp}
    * src/lib/kml/KMLDocumentParser.{h,cpp}

2007-06-15  Torsten Rahn  <rahn@kde.org>

    - Added a section in the Legend to explain
      color values. FIXME: This should
      be dynamically created for each map in the
      future.

2007-06-15  Torsten Rahn  <rahn@kde.org>

    - Removed ETOPO2 digital elevation model and
      replaced it by the much more recent
      (and usually more detailed) Shuttle Radar
      Topography Mission (SRTM) data.
      Resolution of the full dataset would be 1-3".
      For offline mode we are using a 21600x10800
      image.
    - Changed the colorpalette to something more
      subtil and professional looking.

    * src/lib/vectorcomposer{cpp,h}:: change color for lakes
    * src/lib/MarbleModel{cpp,h}:: new default map
    * src/lib/texturepalette{cpp,h}:: better colors
    * tools/palettegen/palettegen{cpp,h}:: fix dir structure
    * data/maps/earth/srtm: SRTM data
    * data/maps/earth/srtm/srtm.jpg: SRTM data
    * data/maps/earth/srtm/srtm.dgml: SRTM data
    * data/maps/earth/srtm/srtm-preview.png: SRTM data
    * data/maps/earth/etopo2:
    * data/seacolors.leg: better colors
    * data/landcolors.leg: better colors
    * data/CMakeLists.txt: install SRTM instead of ETOPO2

2007-06-15  Murad Tagirov  <tmurad@gmail.com>

	Added support for start, end tags in KMLPlaceMarkParser.
	KMLPlaceMarks only added if they completely parsed in other
	case they just deleting with parser.
	* src/lib/kml/KMLPlaceMarkParser.{h,cpp}

2007-06-15  Inge Wallin  <ingwa@cendio.se>

	Fix Krazy issue 22: Check for spelling errors
	* src/lib/AbstractLayer/AbstractLayerContainer.h (AbstractData*>):
	Fix spelling

	Fix Krazy issue 20: Check for Q_OBJECT
	* src/lib/AbstractLayer.h (class AbstractLayer): Add Q_OBJECT
	* src/lib/AbstractLayer/AbstractLayer.h (class AbstractLayer): Add Q_OBJECT

	Fix Krazy issue 12: Check for proper include directives.
	* src/lib/AbstractLayer{cpp,h}::               Fix include
	* src/lib/AbstractLayer/AbstractLayer{cpp,h}:: Fix include

	Fix Krazy issue 09: Check that files end with a newline.
	* src/lib/AbstractLayer/AbstractLayerData.h: Add a newline.

2007-06-15  Murad Tagirov  <tmurad@gmail.com>

    Introduced KMLContainer, KMLContainerParser classes.
    This classes are base classes for KMLDocument and
    KMLFolder objects.
    * src/lib/kml/KMLContainer.{h,cpp}
    * src/lib/kml/KMLContainerParser.{h,cpp}

    Parsing of document, container, feature works. If more general
    object (instance of KMLDocument for example) does not support
    tags it just translates it to it's child objects. This allow to
    split parsing to small simpler classes.
    * src/lib/kml/KMLDocumentParser.{h,cpp}
    * src/lib/kml/KMLContainerParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/kml/KMLObjectParser.{h,cpp}

    Added documentation some of classses in class diagram
    * projects/kml/KMLClasses.xmi

2007-06-15  Torsten Rahn  <rahn@kde.org>

    Finish the float to double changes
    * data/placemarks/baseplacemarks.cache:  float->double
    * data/placemarks/elevplacemarks.cache:  float->double
    * data/placemarks/cityplacemarks.cache:  float->double

    * src/lib/placemarkmanager{cpp,h}::          float->double

2007-06-15  Murad Tagirov  <tmurad@gmail.com>
    Added KML_GSOC variable to check parsing
    * CMakeList.txt

    Basic logic of parsing kml document is done
    * src/lib/kml/KMLPlaceMark{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser{h,cpp}

2007-06-13  Murad Tagirov  <tmurad@gmail.com>
    Added some logic for parsing kml documents.
    * src/lib/kml/KMLObjectParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/kml/KMLDocumentParser.{h,cpp}

    Added KML_DEBUG to CMakeList to debug count of kml objects.
    If KML_DEBUG is ON then KMLObject count number of instances
    this could help to avoid memory leaks in feature
    * src/lib/kml/KMLObject{cpp,h}:

2007-06-12  Murad Tagirov  <tmurad@gmail.com>
    Added KMLFolder. KMLDocument now inherited from KMLFolder
    which is used to store objects inherited from KMLFeature
    (placemarks, features, etc.)
    * src/lib/kml/KMLFolder{h,cpp}

    Updated CODING page. Added kate instructions.
    * CODING

    Added KMLDocumentParser. Initially trying to implement
    parsing of placemark objects without support of folders.
    Parsing logic is almost same as in KAtlasXmlHandler.
    * src/lib/kml/KMLDocumentParser.{h,cpp}

2007-06-11  Torsten Rahn  <rahn@kde.org>

	Adding more islands for canarian islands, mauritius,
	Netherlands and Denmark.
	* marble/data/mwdbii/PISLAND.PNT

2007-06-11  Inge Wallin  <inge@lysator.liu.se>

	Finish the float to double changes
	* src/lib/AbstractLayer.{h,cpp}: float -> double
	* src/lib/Quaternion{cpp,h}::        float -> double
	* src/lib/GeoPolygon{cpp,h}::        float -> double
	* src/lib/katlaswindrose{cpp,h}::    float -> double
	* src/lib/xmlhandler{cpp,h}::        float -> double
	* src/lib/TextureMapper{cpp,h}::     float -> double

	More float to double changes, the measure tool
	* src/lib/measuretool.{h,cpp}:   float -> double
	* src/lib/katlasviewpopupmenu.h: float -> double
	* src/lib/katlasviewinputhandler{cpp,h}:: float -> double
	* src/lib/MarbleWidget.h:        float -> double in connect()

	More float to double changes, the placemark layer
	* src/lib/placemarkpainter.{h,cpp}: float -> double

	More float to double changes, this time the vector layer
	* src/lib/vectormap.{h,cpp}:     float -> double
	* src/lib/clippainter.{h,cpp}:   float -> double

	More float to double changes - the rest of the tile layer
	* src/lib/tilescissor{cpp,h}::       float -> double
	* src/lib/texcolorizer{cpp,h}::      float -> double
	* src/lib/TextureTile{cpp,h}::       float -> double

	More float to double changes, taking it step by step.
	* src/lib/GridMap.{h,cpp}:       float -> double
	* src/lib/TextureMapper.{h,cpp}: float -> double

	More float to double changes, taking it step by step.
	* src/lib/MarbleModel.{h,cpp}:   float -> double
	* src/lib/MarbleWidget.{h,cpp}:  float -> double

	Change float to double to increase precision.
	* src/lib/Quaternion.{h,cpp}: float -> double
	* src/lib/GeoPoint.{h,cpp}:   float -> double
	* src/lib/GeoPolygon.{h,cpp}: float -> double
	* src/lib/MarbleWidget.{h,cpp},  src/lib/TextureMapper{cpp,h}:
	src/lib/katlasviewinputhandler.{h,cpp},
	src/lib/katlasviewpopupmenu{cpp,h}:, src/lib/measuretool{cpp,h}:,
	src/lib/placemark.{h,cpp},       src/lib/placemarkmanager{cpp,h}:
	src/main{cpp,h}:: Just change the floats that needed to be changed.

2007-06-11  Torsten Rahn  <rahn@kde.org>

	* src/lib/tilescissor.{h,cpp}: code changes to introduce
	an additional standalone command line tool to create tiles.

2007-06-10  Inge Wallin  <inge@lysator.liu.se>

	Krazy fix for apidox
	* src/lib/MarbleWidget.h (MarbleWidget): Fix apidox: unknown parameter

	Clean up
	* src/lib/clippainter.{h,cpp}: use the m_ convention everywhere.

	Clean up
	* src/lib/vectormap.{h,cpp}: use the m_ convention everywhere.

	Minor cleaning while learning the code
	* src/lib/vectormap{cpp,h}:, placemark.h, placemarkpainter{cpp,h}:,
	vectorcomposer{cpp,h}:, MarbleModel{cpp,h}:: minor comments and cleaning

2007-06-09  Torsten Rahn  <rahn@kde.org>

	* src/katlascontrol.{h,cpp}: Introduce QSplitter

2007-06-07  Inge Wallin  <ingwa@shihonage.lkpg.cendio.se>

	Introduce d-pointer in MarbleWidget
	* src/lib/MarbleWidget{cpp,h}: (d): new member
	* src/lib/MarbleWidget{cpp,h}: (MarbleWidgetPrivate): new class
	(rest of MarbleWidget{cpp,h}:): use d-> everywhere

	Krazy 4: Check for an acceptable copyright
	* src/lib/kml/KMLDocument{cpp,h}:: Add header with copyright.

2007-06-06  Murad Tagirov  <tmurad@gmail.com>

	Added KMLDocument
	* src/lib/kml/KMLDocument.{h,cpp}: new files

2007-06-06  Inge Wallin  <inge@lysator.liu.se>

	Fix copyright statements
	* src/lib/kml/*.{h,cpp}: Set the correct email for Murad Tagirov

	Krazy 13: Check for inlince methods in public classes
	* src/MarbleControlBox{cpp,h}: (setLocations): Make non-inline
	(minimumZoom): Make non-inline

	Krazy 13: Check for inlince methods in public classes
	* src/lib/MarbleWidget.{h,cpp}: make all functions non-inline

	Krazy 13: Check for inlince methods in public classes
	* src/lib/searchlistview{cpp,h}: (activate): Make non-inline.

	Krazy 12: Check for proper include directives
	* src/lib/marble_export.h: Use <QtCore/QtGlobal> instead of "..."

	Introduce d-pointer in MarbleModel
	* src/lib/MarbleModel{cpp,h}: (d): new member
	* src/lib/MarbleModel{cpp,h}: (MarbleModelPrivate): new class
	(rest of MarbleModel{cpp,h}:): use d-> everywhere
	This also fixes a lot of Krazy 13.issues:
	  inline functions in public classes.

2007-06-05  Torsten Rahn  <rahn@kde.org>

    * src/lib/LegendBrowser.{h,cpp}: More changes in the
    LegendBrowser to avoid flicker and several
    additional attributes which are now supported.

    small TODOs: Make LegendBrowser a Designer Plugin
    and further improve its HTML ...

    * src/lib/placemarkpainter.{h,cpp}: made cities and
    terrain accessible from MarbleWidget.

2007-06-05  Inge Wallin  <inge@lysator.liu.se>

	Krazy 21: Check for signals: and slots:
	* src/lib/*.h: switch Q_SIGNALS: for signals: and Q_SLOTS: for slots:
	(This fixes 31 issues in one swoop!)

	Make it build again
	* src/lib/LegendBrowser.h (LegendBrowser): Export the class, since
	it's part of a library.

2007-06-05  Torsten Rahn  <rahn@kde.org>

	* src/lib/LegendBrowser.{h,cpp}: Adding new Legend Browser
	class that supports checkboxes.

	Works partially. I'm about to finish this now and
	will add settings saving for the Qt and KDE frontend
	right after.

2007-06-05  Inge Wallin  <inge@lysator.liu.se>

	Krazy: 17: Check for inappropriate pass-by-value function args
	* src/lib/kml/KMLFeature.{h,cpp}: Pass QStrings by const reference

	Krazy:  4: Check for an acceptable copyright
	Krazy: 14: Check for an acceptable license
	* src/lib/kml/KMLObject.{h,cpp}:  Add header w/ copyright and license
	* src/lib/kml/KMLFeature.{h,cpp}: Add header w/ copyright and license

	Krazy: 17: Check for inappropriate pass-by-value function args
	* src/lib/kml/KMLFeature.{h,cpp}: Pass QStrings by reference

2007-06-05  Torsten Rahn  <rahn@kde.org>

    * Adding more options for the Qt-Designer plugin
      (later on to be integrated with the Legend in Marble):
        - show relief, ice, rivers, lakes, borders, elevation model
        - quick and dirty rendering
        - updated examples2.ui to reflect those changes

2007-06-04  Inge Wallin  <ingwa@shihonage.lkpg.cendio.se>

	Krazy: 12. Check for proper include directives
	* src/lib/marble_export.h: Fix include
	* src/plugins/marblewidget/MarbleWidgetPlugin{cpp,h}:: Fix include
	* src/plugins/navigator/MarbleNavigatorPlugin{cpp,h}:: Fix include

	Clean up
	* src/lib/vectorcomposer.{h,cpp}: use the m_ convention everywhere.

2007-06-04  Murad Tagirov  <tmurad@gmail.com>
    Updated class diagram
    Added folder for KML objects relates classes
    Added base classes for KML: KMLObject, KMLObject

Murad, this should look like:

	Add initial KML classes
	* src/lib/kml: new subdirectory
	* src/lib/kml/KMLObject.{h,cpp}: new file
	* src/lib/kml/KMLFeature.{h,cpp}: new file

2007-06-04  Inge Wallin  <inge@lysator.liu.se>

	Improve apidox
	* src/lib/MarbleModel.h (): Improve apidox
	* src/lib/MarbleWidget.h (): Improve apidox

2007-06-04  Osterfeld

	Remove #ifndef Q_OS_MACX surrounding #include .moc
	* Almost all files: Remove surrounding #nfndef

2007-06-04  Torsten Rahn  <rahn@kde.org>

	* Adding more options for the Qt-Designer plugin
	  (later on to be integrated with the Legend in Marble).

2007-06-03  Inge Wallin  <inge@lysator.liu.se>

	APIDOX
	* src/lib/MarbleWidget.h: Finish APIDOX.
	* src/lib/MarbleWidget{cpp,h}:: small naming

	APIDOX
	* src/lib/MarbleWidget.h: Document everything but the slots.

	Fix compile error
	* src/plugins/marblewidget/MarbleWidgetPlugin{cpp,h}: (createWidget):
	Use MarbleModel instead of KAtlasGlobe.

2007-06-02  Inge Wallin  <inge@lysator.liu.se>

	Improve integration between MarbleControlBox and MarbleWidget
	* src/MarbleControlBox.h (m_widget): new member
	* src/MarbleControlBox{cpp,h}: (addMarbleWidget): New method
	* src/katlascontrol{cpp,h}: (KAtlasControl): use addMarbleWidget
	instead of connecting signals/slots ourselves

	Make a standalone widget that creates its own model
	* src/lib/MarbleWidget{cpp,h}: (MarbleWidget(parent)): new constructor
	(construct): New method
	* src/katlascontrol{cpp,h}: (KAtlasControl): Use new constructor for
	MarbleWidget
	* src/katlascontrol.h (KAtlasControl::m_marbleModel): removed

	Rename KatlasGlobe -> MarbleModel
	* src/lib/MarbleModel.h (): renamed from katlasglobe.h
	* src/lib/MarbleModel{cpp,h}: (): renamed from katlasglobe{cpp,h}:
	* src/katlascontrol.{h,cpp}: use new name
	* src/lib/MarbleWidget.{h,cpp}: use new name
	* src/lib/katlasviewpopupmenu.{h,cpp}: use new name
	* src/lib/katlasviewinputhandler.{h,cpp}: use new name

	Show zoom level in the status bar
	* src/KdeMainWindow{cpp,h}: (showZoom): new slot
	(createStatusBar): create zoom label
	(MainWindow): Show initial zoom level
	* src/katlascontrol.h (marbleWidget): New method
	* src/lib/MarbleWidget.h (zoom): New method.

2007-05-31  Inge Wallin  <inge@lysator.liu.se>

	Remove worthless APIDOX
	src/httpfetchfile.h		src/katlaswindrose.h
	src/placemarkinfodialog.h	src/katlascontrol.h
	src/placemarkmodel.h		src/katlasviewpopupmenu.h
	src/katlasmapscale.h		src/katlasviewinputhandler.h
	src/measuretool.h		src/vectormap.h
	src/placemarkpainter.h		src/TileLoader.h
	src/tinywebbrowser.h		src/texcolorizer.h
	src/katlasaboutdialog.h		src/placemarkmanager.h
	src/HttpDownloadManager.h	src/marblecontrol.h
	src/TextureMapper.h		src/katlasflag.h
	src/vectorcomposer.h		src/GridMap.h
	src/katlastilecreatordialog.h	src/katlasthemeselectview.h
	src/katlascrosshair.h		src/tilescissor.h
	src/FastMath.h			src/clippainter.h
	src/TextureTile.h:
	Remove apidox only consisting of @author so that the resulting
	output only contains actual information.

	Add APIDOX
	* src/MarbleWidget.h (class MarbleWidget): Add class docs and some
	method docs.
	* src/MarbleControlBox.h (class MarbleControlBox): Add class docs
	and some method docs.
	* src/katlasglobe.h (class KAtlasGlobe): Add class docs.

	Rename KAtlasToolBox into MarbleControlBox
	* src/katlastoolbox.ui  -> src/MarbleControlBox.ui
	* src/katlastoolbox.h   -> src/MarbleControlBox.h
	* src/katlastoolbox{cpp,h}: -> src/MarbleControlBox{cpp,h}:
	* src/CmakeLists.txt: use new name
	* src/marbleosx.pro:  use new name
	* src/katlascontrol{cpp,h}:: Use new class name
	* src/DESIGN: Update documentation

2007-05-29  Torsten Rahn  <rahn@kde.org>

Some fixes:

    * Changed zPointLimit to avoid "Green Pacific" bug
    * Changed xmlhandler to change placemark symbols according to legend
    * Added resulting cityplacemarks.cache file

2007-05-28  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue: Check for Qt classes that should not be used
	* src/QtMainWindow{cpp,h}: (exportMapScreenShot): Suppress false
	positives for krazy tests
	* src/KdeMainWindow{cpp,h}: (exportMapScreenShot): Use KMessageBox
	instead of QMessageBox.

	Fix Krazy issue: missing tags: copyright
	Fix Krazy issue: missing license
	* tools/palettegen/palettegen{cpp,h}: (main): Generate header with
	Copyright and license
	* src/texturepalette{cpp,h}:: Regenerate this file with the above
	mentioned header.

	Fix Krazy issue: inappropriate pass-by-value function args
	* src/TextureTile.h (signal downloadTile): Pass QString parameter
	by reference
	* src/HttpDownloadManager{cpp,h}: (addJob): Pass QString parameter by
	reference.
	* src/TileLoader{cpp,h}: (loadTile): Connect with parameter QString &

	Fix Krazy issue: Proper include directives
	* tools/palettegen/palettegen{cpp,h}::
	* tools/texissor/texissor{cpp,h}:: Fix includes

2007-05-27  Torsten Rahn  <rahn@kde.org>

    * Added Legend (breaks placemarks)
    * compiles with Qt 4.2 again

2007-05-26  Inge Wallin  <inge@lysator.liu.se>

	Rename katlasview.{h,cpp} into MarbleWidget
	* src/katlasview{cpp,h}: -> src/MarbleWidget{cpp,h}::
	src/katlasview.h   -> src/MarbleWidget.h
	src/katlascontrol.h,          src/katlascontrol{cpp,h}:,
	src/katlasviewinputhandler.h, src/katlasviewinputhandler{cpp,h}:,
	src/katlasviewpopupmenu.h,    src/katlasviewpopupmenu{cpp,h}:: Use new name
	src/CMakeLists.txt: Use new filenames

	Create MarbleControl widget
	* src/marblecontrol.ui:  new file
	* src/marblecontrol.h:   new file
	* src/marblecontrol{cpp,h}:: new file

	Cleanup
	* tools/svg2pnt/svg2pnt{cpp,h}:: Clean
	* tools/svg2pnt/svgxmlhandler{cpp,h}:: Clean
	* tools/texissor/texissor{cpp,h}:: Clean
	* tools/palettegen/palettegen{cpp,h}:: Clean
	* tools/asc2kml/asc2kml{cpp,h}:: Clean

	Krazy codechecks
	* tools/*/*.{h,cpp}: Add license and copyright status

2007-05-25  Inge Wallin  <inge@lysator.liu.se>

	Krazy codechecks
	* src/*.{h,cpp}: Add license and copyright status

2007-05-21  Inge Wallin  <inge@lysator.liu.se>

	Cleanup
	* src/katlasflag.{h,cpp}: Clean
	* src/katlasdirs.h: Clean
	* src/katlasaboutdialog.{h,cpp}: Clean
	* src/HttpDownloadManager.{h,cpp}: Clean
	* src/httpfetchfile.{h,cpp}: Clean
	* src/texcolorizer.{h,cpp}: Clean
	* src/xmlhandler.{h,cpp}: Clean

2007-05-20  Inge Wallin  <inge@lysator.liu.se>

	Cleanup
	* src/katlasviewpopupmenu{cpp,h}: (): Clean

2007-05-19  Inge Wallin  <inge@lysator.liu.se>

	Cleanup
	* src/katlasviewinputhandler{cpp,h}: (*): Clean

	Cleanup
	* src/TileLoader{cpp,h}:,   src/HttpDownloadManager{cpp,h}:
	src/katlastoolbox{cpp,h}:,  src/measuretool{cpp,h}:,
	src/texcolorizer{cpp,h}:,   src/katlaswindrose{cpp,h}:,
	src/katlastoolbox.h,    src/xmlhandler{cpp,h}:,
	src/placemarkmodel{cpp,h}:, src/katlasviewinputhandler{cpp,h}:: Remove warnings

	Fix a bug
	* src/TileLoader.h (message): Print the variable test instead of
	"test".

	Cleanup
	* src/katlasthemeselectview.{h,cpp}: Clean

15.05.07 - tackat
	- Made changes according to Krazy check
	- added incomplete HttpDownloadManager

11.05.07 - ingwa
	- Cleaned katlasbox.{h,cpp}
	- Cleaned KdeMainWindow.{h,cpp}
	- Cleaned tinywebbrowser.{h,cpp}

11.05.07 - ingwa
	- Create the model in KAtlasControl instead of in the view.
	- Cleaned searchcombobox.{h,cpp}
	- Cleaned searchlistview.{h,cpp}
09.05.07 - tackat
    - Updated marble.desktop file
    - Changes in DESIGN and TODO

09.05.07 - tackat
    - Marble got Tooltips and WhatsThis now.
    - Applied patch by Ralf Habacker for improved icon support in Windows

08.05.07 - tackat
    - Marble got a docbook-handbook now.

07.05.07 - tackat
    - Make KMarble compile again (KMainWindow -> KXmlGuiWindow)
    - Default to QTONLY = OFF

07.05.07 - tackat
    Added Copy, Export Map and Printing to the Qt interface.

06.05.07 - ingwa
	Cleaning: TextureMapper: use m_ for all members + getFoo() -> foo()
	Cleaning: KAtlasView:    use m_ for all members + getFoo() -> foo()
	Cleaning: KAtlasGlobe:   use m_ for all members.

05.05.07 - tackat
	Added the KDE interface

29.04.07 - ingwa
	Cleaned measuretool.{h,cpp}
	Cleaned katlasmapscale.{h,cpp}
	Cleaned katlaswindrose.{h,cpp}
	Cleaned katlascrosshair.{h,cpp}
	Cleaned placemarkinfodialog.{h,cpp}
	Cleaned maptheme.{h,cpp}

26.04.07 - ingwa
	Cleaned tilescissor.{h,cpp}

25.04.07 - ingwa
	Lots of small cleaning
	Cleaned placemarkmodel.{h,cpp}

23.04.07 - ingwa
	Fixed typo in MANIFESTO.txt
	Cleaned placemarkpainter.{h,cpp}
	Cleaned placemarkmanager.{h,cpp}

22.04.07 - ingwa
	Cleaned placemark.{h,cpp}
	Cleaned placecontainer.{h,cpp}
	Cleaned vectorcomposer.{h,cpp}

22.04.07 - ingwa
	First draft of the DESIGN file with headings, but lots of missing
	contents.

22.04.07 - murad/tackat
	Introducing m_dragThreshold in KAtlasInputHandler to get rid of
	extra repaints.
